import { c as commonjsGlobal, t as tinymce$1 } from "./tinymce.js";
import "./pinia.js";
import { M as defineComponent, H as toRefs, v as ref, z as watch, a4 as onMounted, ah as onBeforeUnmount, ai as onActivated, aj as onDeactivated, O as h, G as nextTick } from "./vue.js";
var tinymcePlugin_umd = { exports: {} };
/*! 
*  @plugin tinymce-plugin
*  @version 0.0.3-beta.12 (2022-5-29)
*  @description tinymce-plugin
*  @copyright (2022) Five(Li Hailong) . All rights reserved. https://github.com/tinymce-plugintinymce-plugin
*/
(function(module, exports) {
  (function(global2, factory) {
    factory(exports);
  })(commonjsGlobal, function(exports2) {
    let tp$tinymce = tinymce;
    let global$1 = tp$tinymce.util.Tools;
    let global$7 = tp$tinymce.html.Node;
    tp$tinymce.html.Schema;
    let global$6 = tp$tinymce.util.XHR;
    let global$11 = tp$tinymce.util.I18n;
    let tp$Serialize = new tp$tinymce.html.Serializer().serialize;
    let tp$DomParser = new tp$tinymce.html.DomParser().parse;
    let tp$State = {};
    window.tp$State = tp$State;
    let tp$getStyleValue = (key, str) => {
      let m = str ? str.match(new RegExp(key + ':(.+?)"?[;}]')) : "";
      return m ? m[1] : false;
    };
    function tp$SetSpecialStyle(editor, _self, specialStyleClass, specialStyleValue) {
      if (editor.tp$Style.mapping && editor.tp$Style.mapping["" + _self.getAttribute("data-id")]) {
        editor.tp$Style.mapping["" + _self.getAttribute("data-id")].specialStyle["" + specialStyleClass] = specialStyleValue;
      }
    }
    let tp$Component = {
      customTags: {}
    };
    let keys = Object.keys;
    let __assign2 = function() {
      __assign2 = Object.assign || function __assign22(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign2.apply(this, arguments);
    };
    let hasOwnProperty = Object.hasOwnProperty;
    var isNullable = function(a) {
      return a === null || a === void 0;
    };
    var isNonNullable = function(a) {
      return !isNullable(a);
    };
    const getFormatStyle = (style) => {
      if (typeof style === "object") {
        return JSON.stringify(style).replace(/"([-A-Za-z]+?)":""[,}]/g, "").replace(/,/gi, ";").replace(/{/gi, "").replace(/}/gi, "").replace(/"/gi, "");
      }
    };
    const getObjStyle = (style) => {
      if (typeof style === "string" && style !== "{}") {
        style = JSON.stringify(style);
        return JSON.parse(("{" + style.replace(/:/g, '": "').replace(/;\s*/g, '","') + "}").replace(/,\"\"\}$/, "}"));
      }
      return style;
    };
    const getStyleSheetClass = (className, content) => {
      const result = content.match(new RegExp(`.${className}\\s*\\{([\\s\\S]+)\\}`));
      return result && result[1] ? result[1].replace(/\}([\s\S]+)/, "").trim() : "";
    };
    var has = function(obj, key) {
      return hasOwnProperty.call(obj, key);
    };
    var getDimension = function(node, styles, dimension, defaultValue) {
      if (defaultValue === void 0) {
        defaultValue = null;
      }
      var value = node.attr(dimension);
      if (isNonNullable(value)) {
        return value;
      } else if (!has(styles, dimension)) {
        return defaultValue;
      } else {
        return null;
      }
    };
    const toHump = (name) => {
      return name.replace(/[-|\_](\w)/g, function(all, letter) {
        return letter.toUpperCase();
      });
    };
    const toLine = (name) => {
      return name.replace(/([A-Z])/g, "_$1").toLowerCase().replace(/\-/g, "_");
    };
    const toHyphen = (name) => {
      return name.replace(/([A-Z])/g, "-$1").toLowerCase().replace(/\_/g, "-");
    };
    var getCurrentValue = function(block, styleName) {
      let resValue = "";
      if (!block)
        return "";
      styleName = toHump(styleName);
      while (block.nodeName !== "P" && block.nodeName !== "LI" && block.nodeName !== "DIV" && block.nodeName !== "BODY") {
        if (block.style[styleName]) {
          resValue = block.style[styleName];
          break;
        }
        block = block.parentNode;
      }
      return resValue;
    };
    let getButtonsStyle = (obj, style) => {
      let styleStr = "";
      styleStr += obj["tp-buttons"] ? '.tp-buttons[data-tp-style="' + style + '"] {' + obj["tp-buttons"] + "}\n" : "";
      styleStr += obj["tp-buttons:hover"] ? '.tp-buttons[data-tp-style="' + style + '"]:hover {' + obj["tp-buttons:hover"] + "}\n" : "";
      styleStr += obj["tp-buttons::before"] ? '.tp-buttons[data-tp-style="' + style + '"]::before {' + obj["tp-buttons::before"] + "}\n" : "";
      styleStr += obj["tp-buttons::after"] ? '.tp-buttons[data-tp-style="' + style + '"]::after {' + obj["tp-buttons::after"] + "}\n" : "";
      return styleStr;
    };
    const setIntervalFn2 = (func, delay, outTime) => {
      !outTime && (outTime = delay * 100);
      let setIntervalObj = {
        id: null,
        outTime,
        outId: null
      };
      setIntervalObj.id = setInterval((obj) => {
        func(() => {
          clearTimeout(obj.outId);
          clearInterval(obj.id);
        });
      }, delay, setIntervalObj);
      setIntervalObj.outId = setTimeout(() => {
        setIntervalObj.id && clearInterval(setIntervalObj.id);
      }, setIntervalObj.outTime);
    };
    let getTp$ComponentFn = function(customTag, fnName) {
      if (typeof customTag[fnName] === "function")
        return customTag[fnName];
      if (typeof tp$Component.customTags[customTag.name][fnName] === "function")
        return tp$Component.customTags[customTag.name][fnName];
      return function() {
      };
    };
    const autoToPX = (data, noPerCent) => {
      if (!noPerCent) {
        return typeof data === "string" && data.length > 0 && data.match(/^[0-9]{1,8}$/) ? data + "px" : data;
      } else {
        return typeof data === "string" && !data.match(/\s/) && data.length > 0 ? parseInt(data) + "px" : data;
      }
    };
    const tp$Translate = (text) => {
      let textList = text.split("_");
      return textList.length > 1 ? global$11.translate([textList[0] + " {0}", textList[1]]) : global$11.translate(text);
    };
    tinymce.tp$HtmlPanelFn = window.tp$HtmlPanelFn = function(e, _id, styleName) {
      tp$State["buttonsStyle"] && (tp$State["buttonsStyle"][_id] = styleName);
      document.querySelector("#" + _id + "_StyleID").innerHTML = e.nextElementSibling.innerHTML;
    };
    const tp$skt = {
      count: 0
    };
    const createSkt = (opt) => {
      let sktID = new Date().getTime() + "-" + tp$skt.count++;
      let sktHtml = `
  <div id="${sktID}" class="skt skt-loading" data-v-e3347e98=""><div class="skt-tox-tinymce" data-v-e3347e98="" style="height: 200px;"><div class="skt-tox-editor-container" data-v-e3347e98=""><div class="skt-tox-editor-header" data-v-e3347e98=""><div class="skt-tox-menubar" data-v-e3347e98=""><button class="skt-tox-mbtn skt-tox-mbtn--select" data-v-e3347e98=""><span class="skt-tox-mbtn__select-label skeleton" data-v-e3347e98="">File</span></button><button class="skt-tox-mbtn skt-tox-mbtn--select" data-v-e3347e98=""><span class="skt-tox-mbtn__select-label skeleton" data-v-e3347e98="">Edit</span></button><button class="skt-tox-mbtn skt-tox-mbtn--select" data-v-e3347e98=""><span class="skt-tox-mbtn__select-label skeleton" data-v-e3347e98="">View</span></button><button class="skt-tox-mbtn skt-tox-mbtn--select" data-v-e3347e98=""><span class="skt-tox-mbtn__select-label skeleton" data-v-e3347e98="">Format</span></button><button class="skt-tox-mbtn skt-tox-mbtn--select" data-v-e3347e98=""><span class="skt-tox-mbtn__select-label skeleton" data-v-e3347e98="">Tools</span></button></div><div class="skt-tox-toolbar-overlord" data-v-e3347e98=""><div class="skt-tox-toolbar" data-v-e3347e98=""><div class="skt-tox-toolbar__group" data-v-e3347e98=""><button class="skt-tox-tbtn" data-v-e3347e98=""><span class="skt-tox-icon tox-tbtn__icon-wrap skeleton" data-v-e3347e98="">4</span><!--v-if--></button><button class="skt-tox-tbtn skt-tox-tbtn--select skt-tox-tbtn--bespoke" data-v-e3347e98=""><span class="skt-tox-tbtn__select-label skt-tox-tbtn--select skt-tox-tbtn--bespoke skeleton" data-v-e3347e98="">4</span><div class="skt-tox-tbtn__select-chevron skeleton" data-v-e3347e98=""></div></button><button class="skt-tox-tbtn skt-tox-tbtn--select skt-tox-tbtn--bespoke" data-v-e3347e98=""><span class="skt-tox-tbtn__select-label skt-tox-tbtn--select skt-tox-tbtn--bespoke skeleton" data-v-e3347e98="">4</span><div class="skt-tox-tbtn__select-chevron skeleton" data-v-e3347e98=""></div></button><button class="skt-tox-tbtn skt-tox-tbtn--select skt-tox-tbtn--bespoke" data-v-e3347e98=""><span class="skt-tox-tbtn__select-label skt-tox-tbtn--select skt-tox-tbtn--bespoke skeleton" data-v-e3347e98="">4</span><div class="skt-tox-tbtn__select-chevron skeleton" data-v-e3347e98=""></div></button><button class="skt-tox-tbtn skt-tox-split-button" data-v-e3347e98=""><span class="skt-tox-icon tox-tbtn__icon-wrap skeleton" data-v-e3347e98="">4</span><div class="skt-tox-tbtn__select-chevron skeleton" data-v-e3347e98=""></div></button><button class="skt-tox-tbtn skt-tox-split-button" data-v-e3347e98=""><span class="skt-tox-icon tox-tbtn__icon-wrap skeleton" data-v-e3347e98="">4</span><div class="skt-tox-tbtn__select-chevron skeleton" data-v-e3347e98=""></div></button><button class="skt-tox-tbtn" data-v-e3347e98=""><span class="skt-tox-icon tox-tbtn__icon-wrap skeleton" data-v-e3347e98="">4</span><!--v-if--></button><button class="skt-tox-tbtn" data-v-e3347e98=""><span class="skt-tox-icon tox-tbtn__icon-wrap skeleton" data-v-e3347e98="">4</span><!--v-if--></button><button class="skt-tox-tbtn" data-v-e3347e98=""><span class="skt-tox-icon tox-tbtn__icon-wrap skeleton" data-v-e3347e98="">4</span><!--v-if--></button><button class="skt-tox-tbtn" data-v-e3347e98=""><span class="skt-tox-icon tox-tbtn__icon-wrap skeleton" data-v-e3347e98="">4</span><!--v-if--></button><button class="skt-tox-tbtn" data-v-e3347e98=""><span class="skt-tox-icon tox-tbtn__icon-wrap skeleton" data-v-e3347e98="">4</span><!--v-if--></button><button class="skt-tox-tbtn skt-tox-split-button" data-v-e3347e98=""><span class="skt-tox-icon tox-tbtn__icon-wrap skeleton" data-v-e3347e98="">4</span><div class="skt-tox-tbtn__select-chevron skeleton" data-v-e3347e98=""></div></button><button class="skt-tox-tbtn" data-v-e3347e98=""><span class="skt-tox-icon tox-tbtn__icon-wrap skeleton" data-v-e3347e98="">4</span><!--v-if--></button><button class="skt-tox-tbtn" data-v-e3347e98=""><span class="skt-tox-icon tox-tbtn__icon-wrap skeleton" data-v-e3347e98="">4</span><!--v-if--></button><button class="skt-tox-tbtn" data-v-e3347e98=""><span class="skt-tox-icon tox-tbtn__icon-wrap skeleton" data-v-e3347e98="">4</span><!--v-if--></button><button class="skt-tox-tbtn skt-tox-split-button" data-v-e3347e98=""><span class="skt-tox-icon tox-tbtn__icon-wrap skeleton" data-v-e3347e98="">4</span><div class="skt-tox-tbtn__select-chevron skeleton" data-v-e3347e98=""></div></button><button class="skt-tox-tbtn skt-tox-split-button" data-v-e3347e98=""><span class="skt-tox-icon tox-tbtn__icon-wrap skeleton" data-v-e3347e98="">4</span><div class="skt-tox-tbtn__select-chevron skeleton" data-v-e3347e98=""></div></button><button class="skt-tox-tbtn" data-v-e3347e98=""><span class="skt-tox-icon tox-tbtn__icon-wrap skeleton" data-v-e3347e98="">4</span><!--v-if--></button><button class="skt-tox-tbtn" data-v-e3347e98=""><span class="skt-tox-icon tox-tbtn__icon-wrap skeleton" data-v-e3347e98="">4</span><!--v-if--></button></div><div class="skt-tox-toolbar__group" data-v-e3347e98=""><button class="skt-tox-tbtn" data-v-e3347e98=""><span class="skt-tox-icon tox-tbtn__icon-wrap skeleton" data-v-e3347e98="">4</span><!--v-if--></button></div></div></div><div class="skt-tox-anchorbar" data-v-e3347e98=""></div></div><div class="skt-tox-sidebar-wrap-box" data-v-e3347e98=""><p class="skeleton" data-v-e3347e98=""> &nbsp; </p><p class="skeleton" data-v-e3347e98="">&nbsp; </p><p class="skeleton" data-v-e3347e98=""></p></div></div><div class="skt-tox-statusbar" data-v-e3347e98=""><div class="skeleton" data-v-e3347e98=""> PP </div><span class="skeleton" data-v-e3347e98="" style="margin-left: calc(100% - 120px);">Powered by Five </span></div></div></div>
`;
      document.querySelector(opt.selector).outerHTML = sktHtml + document.querySelector(opt.selector).outerHTML;
      return sktID;
    };
    const createHtmlPanel = (editor, panelID, dataList) => {
      let buttonsStyleName = "";
      buttonsStyleName = tp$State["buttonsStyle"] && tp$State["buttonsStyle"][panelID];
      !dataList ? dataList = keys(editor.tp$CustomTags.buttons.styleSheetList) : "";
      if (!buttonsStyleName) {
        buttonsStyleName = tp$State["buttonsStyle"] && (tp$State["buttonsStyle"][panelID] = dataList[0]);
      }
      let panelStr = "";
      let buttonsStyleInit = "";
      let buttonsStyleStr = "";
      dataList.forEach((styleName, idx) => {
        styleName === buttonsStyleName ? buttonsStyleInit = `<span class="tp-buttons" data-tp-style="${styleName}">${tp$Translate(styleName)}</span>` : "";
        panelStr += `<li ><input id="${panelID + "_" + idx}" type="radio" name="${panelID}" ${buttonsStyleName === styleName ? " checked " : ""}  onclick="tinymce.tp$HtmlPanelFn(this,'${panelID}','${styleName}')"> <label for="${panelID + "_" + idx}" > <span class="tp-buttons" data-tp-style="${styleName}">${tp$Translate(styleName)}</span></label></li>
`;
        buttonsStyleStr += getButtonsStyle(editor.tp$CustomTags.buttons.styleSheetList[styleName], styleName);
      });
      return `<div style="width: 100%; position: relative; " >
 
  <style>
  .tox .tox-dialog__body-content ul{
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-start;
    align-items: center;
    width: 100%;
    padding: 0;
    margin: 0;
    max-height:160px;
    overflow: auto;
    border-top: 1px solid #ccc;

  }
  .tox .tox-dialog__body-content ul input{
    display: none;
  }
  .tox .tox-dialog__body-content ul label{
    border: 2px solid transparent;
    display: inline-block;
    position: relative;
    padding: 2px;
    cursor: pointer;
    
  }
  .tox .tox-dialog__body-content ul label::after{
    content:"\u2714";
    font-size: 20px;
    border-radius: 15px;
    width: 22px;
    height: 22px;
    display: none;
    color:  #fff;
    background:  #1C6CA1;
    border: 2px solid #1C6CA1;
    position: absolute;
    text-align: center;
    line-height: 20px;
    z-index: 9;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    
  }
  .tox .tox-dialog__body-content ul input:checked + label::after{
    display: block;
  }
  .tox .tox-dialog__body-content ul input:checked + label{
  
    pointer-events: none;
   
  }
  .tox .tox-dialog__body-content ul input:checked + label>span{
    opacity: 0.5;
  }
  .tox .tox-dialog__body-content .showStyle{
    display: block;
    position: absolute;
    right: 20px;
    top: 30px;
    -webkit-transform: translatY(-50%);
    transform: translateY(-50%);

  }
  .tox .tox-dialog__body-content .tox-form__group h2.title_h2{
    margin: 0;
    padding: 0;
    margin-top: -20px;
    min-height: 60px;
    line-height:60px;
  }
  .tox .tox-dialog__body-content li{
    line-style:none;
    display: inline-block;
    margin: 0 4px;
    margin-top: 5px;
  }
    ${buttonsStyleStr.replace(/.tp-buttons/g, ".tox .tox-dialog__body-content .tp-buttons")}
     </style>
     <div class="showStyle" id="${panelID + "_StyleID"}">${buttonsStyleInit}</div>
     <h2 class="title_h2">${global$11.translate("Select tmplate")}:</h2>
     <ul>
      ${panelStr}
     </ul>
     </div>
     `;
    };
    let tp$getFirstStyleValue = (_block, _styleName) => {
      let _resValue = "";
      if (!_block)
        return "";
      _styleName = toHump(_styleName);
      while (_block.nodeName && _block.nodeName.toLowerCase() !== "#text") {
        _resValue = _block.style[_styleName];
        _block = _block.firstChild;
      }
      return _resValue;
    };
    const toUpdateIndent2em = (editor, value, blocks) => {
      blocks = blocks || editor.selection.getSelectedBlocks();
      global$1.each(blocks, function(block) {
        if (editor.dom.getStyle(block, "text-indent") || value) {
          let kv = "";
          let kl = "";
          if (value === "remove") {
            -parseInt(editor.dom.getStyle(block, "text-indent")) == parseInt(editor.dom.getStyle(block, "margin-left")) && editor.dom.setStyle(block, "margin-left", null);
            editor.dom.setStyle(block, "text-indent", null);
          } else {
            value = parseInt(value) || 2;
            if (block && block.firstChild) {
              kv = tp$getFirstStyleValue(block, "font-size");
              kl = tp$getFirstStyleValue(block, "letter-spacing");
              if (kv) {
                kv = (parseInt(kv) + parseInt(kl ? kl : 0)) * value + "px";
              } else
                kv = (parseInt(kl ? kl : 0) + 16) * value + "px";
            }
            value > 0 && -parseInt(editor.dom.getStyle(block, "text-indent")) == parseInt(editor.dom.getStyle(block, "margin-left")) && editor.dom.setStyle(block, "margin-left", null);
            editor.dom.setStyle(block, "text-indent", kv ? kv : value + "em");
            value < 0 && editor.dom.setStyle(block, "margin-left", kv ? kv.replace(/^-/, "") : -value + "em");
          }
        }
      });
    };
    const tp$RegisterCommand = (editor) => {
      var cmd = function(command) {
        return function() {
          return editor.execCommand(command);
        };
      };
      editor.addCommand("tpLetterspacing", function(ui, value) {
        editor.formatter.apply("tpLetterspacing", { value });
        toUpdateIndent2em(editor);
      });
      editor.addCommand("tpLineheight", function(ui, value) {
        editor.formatter.apply("tpLineheight", { value });
      });
      editor.addCommand("tpIndent", function(ui, value) {
        toUpdateIndent2em(editor, value || 2);
      });
      editor.addCommand("mceTpAlignleft", function(ui, value) {
        let _dom = editor.dom.getParent(editor.selection.getNode(), "tp-tabs,tp-buttons,tp-collapse");
        editor.dom.setStyle(_dom, "float", "left");
      });
      editor.addCommand("mceTpAlignright", function(ui, value) {
        let _dom = editor.dom.getParent(editor.selection.getNode(), "tp-tabs,tp-buttons,tp-collapse");
        editor.dom.setStyle(_dom, "float", "right");
      });
      editor.addCommand("mceTpAligncenter", function(ui, value) {
        let _dom = editor.dom.getParent(editor.selection.getNode(), "tp-tabs,tp-buttons,tp-collapse");
        editor.dom.setStyle(_dom, "float", null);
        editor.dom.setStyle(_dom, "margin-left", "auto");
        editor.dom.setStyle(_dom, "margin-right", "auto");
      });
      editor.ui.registry.addButton("tpalignleft", {
        tooltip: "Align left",
        onAction: cmd("mceTpAlignleft"),
        icon: "align-left"
      });
      editor.ui.registry.addButton("tpalignright", {
        tooltip: "Align right",
        onAction: cmd("mceTpAlignright"),
        icon: "align-right"
      });
      editor.ui.registry.addButton("tpaligncenter", {
        tooltip: "Align center",
        onAction: cmd("mceTpAligncenter"),
        icon: "align-center"
      });
    };
    const tp$RegisterFormatter = (editor) => {
      editor.formatter.register({
        alignleft: [
          {
            selector: "figure.image",
            collapsed: false,
            classes: "align-left",
            ceFalseOverride: true,
            preview: "font-family font-size"
          },
          {
            selector: "figure,p,h1,h2,h3,h4,h5,h6,td,th,tr,div,ul,ol,li",
            styles: { textAlign: "left" },
            inherit: false,
            preview: false,
            defaultBlock: "div"
          },
          {
            selector: "img,table,audio,video,tp-buttons,tp-tabs",
            collapsed: false,
            styles: { float: "left" },
            preview: "font-family font-size"
          }
        ],
        aligncenter: [
          {
            selector: "figure,p,h1,h2,h3,h4,h5,h6,td,th,tr,div,ul,ol,li",
            styles: { textAlign: "center" },
            inherit: false,
            preview: "font-family font-size",
            defaultBlock: "div"
          },
          {
            selector: "figure.image",
            collapsed: false,
            classes: "align-center",
            ceFalseOverride: true,
            preview: "font-family font-size"
          },
          {
            selector: "img,audio,video",
            collapsed: false,
            styles: {
              display: "block",
              marginLeft: "auto",
              marginRight: "auto"
            },
            preview: false
          },
          {
            selector: "table,tp-buttons,tp-tabs",
            collapsed: false,
            styles: {
              marginLeft: "auto",
              marginRight: "auto"
            },
            preview: "font-family font-size"
          }
        ],
        alignright: [
          {
            selector: "figure.image",
            collapsed: false,
            classes: "align-right",
            ceFalseOverride: true,
            preview: "font-family font-size"
          },
          {
            selector: "figure,p,h1,h2,h3,h4,h5,h6,td,th,tr,div,ul,ol,li",
            styles: { textAlign: "right" },
            inherit: false,
            preview: "font-family font-size",
            defaultBlock: "div"
          },
          {
            selector: "img,table,audio,video,tp-buttons,tp-tabs",
            collapsed: false,
            styles: { float: "right" },
            preview: "font-family font-size"
          }
        ],
        afterParagraph: {
          selector: "p,ul,ol,dl,li,table",
          defaultBlock: "p",
          deep: false,
          styles: { "margin-bottom": "%value" }
        },
        beforeParagraph: {
          selector: "p,ul,ol,dl,li,table",
          defaultBlock: "p",
          deep: false,
          styles: { "margin-top": "%value" }
        },
        borderParagraph: {
          selector: "p,ul,ol,dl,li,table",
          defaultBlock: "p",
          deep: false,
          styles: { "border-width": "%valueW", "border-style": "%valueS", "border-color": "%valueC" }
        },
        paddingParagraph: {
          selector: "p,ul,ol,dl,li,table",
          defaultBlock: "p",
          deep: false,
          styles: { "padding": "%value" }
        },
        tpParagraph: {
          selector: "p,ul,ol,dl,li,table",
          defaultBlock: "p",
          deep: false,
          styles: { "background": "%background", "text-indent": "%indent" }
        },
        tpLetterspacing: {
          inline: "span",
          remove_similar: true,
          styles: { "letter-spacing": "%value" }
        },
        tpLineheight: {
          selector: "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table",
          styles: { "line-height": "%value" }
        }
      });
      editor.on("ExecCommand", function(cmd) {
        cmd.command === "FontSize" && toUpdateIndent2em(editor);
      });
    };
    let tp$ComponentSetStyleMapping = function(editor, _self, cmd, _customTag) {
      !editor.tp$Style.mapping ? editor.tp$Style.mapping = {} : "";
      !editor.tp$Style.mapping["" + _self.getAttribute("data-id")] ? editor.tp$Style.mapping["" + _self.getAttribute("data-id")] = {
        styleCustomTags: _customTag.name,
        stylePath: _customTag.name === "buttons" ? "styleSheetList" : "styleSheetLoadList",
        styleTemplate: _self.getAttribute("data-style") || "default",
        quantity: _self.children.length - 1,
        specialStyle: {}
      } : __assign2(editor.tp$Style.mapping["" + _self.getAttribute("data-id")], { styleTemplate: _self.getAttribute("data-tp-style") || "default", quantity: _self.children.length - 1 });
    };
    const setupWebComponent = (win, doc, editor, _customTag, _tagName) => {
      const template = doc.createElement("template");
      const staticStyle = document.createElement("style");
      const customStyle = document.createElement("style");
      staticStyle.textContent = `body{
      padding: 0;
      margin: 0;
  }
  :host {
      overflow: hidden;
      display: block; 
  }`;
      template.innerHTML = _customTag.template.innerHTML;
      class TpComponent extends win.HTMLElement {
        constructor() {
          super();
          this.setAttribute("contenteditable", false);
          this.setAttribute("data-mce-tp-component", _tagName);
          this.attachShadow({ mode: "open" });
          this.tp$state = typeof _customTag.state === "object" ? JSON.parse(JSON.stringify(_customTag.state)) : {};
          tp$ComponentSetStyleMapping(editor, this, "init", _customTag);
          this.tpComponentDelete = typeof _customTag.tpComponentDelete === "function" ? _customTag.tpComponentDelete.bind(this) : () => {
            this.remove();
          };
          this.tpComponentCmd = typeof _customTag.tpComponentCmdFn === "object" ? JSON.stringify(_customTag.tpComponentCmdFn) !== "{}" ? (cmd, props) => {
            _customTag.tpComponentCmdFn[cmd](this, props);
            tp$ComponentSetStyleMapping(editor, this, cmd, _customTag);
          } : (cmd, props) => {
            tp$Component.customTags[_tagName].tpComponentCmdFn[cmd](this, props);
            tp$ComponentSetStyleMapping(editor, this, cmd, _customTag);
          } : () => {
            console.log("\u65E0\u53EF\u7528cmd");
          };
          customStyle.id = "tpComponentStyle_" + this.getAttribute("data-id");
          if (_tagName == "tabs") {
            customStyle.textContent = _customTag.styleSheetLoadList && _customTag.styleSheetLoadList[this.getAttribute("data-tp-style") || "default"] ? _customTag.styleSheetLoadList[this.getAttribute("data-tp-style") || "default"].replace(/.tp-tabs\s*\{/g, ":host   {").replace(/.tp-tabs_label\b\s/g, "::slotted(.tp-tabs_label)   ").replace(/.tp-tabs_label:hover\b\s/g, "::slotted(.tp-tabs_label:hover)   ").replace(/.tp-tabs_label.checked\b\s/g, "::slotted(.tp-tabs_label.checked)   ") : "";
          }
          if (_tagName == "collapse") {
            customStyle.textContent = _customTag.styleSheetLoadList && _customTag.styleSheetLoadList[this.getAttribute("data-tp-style") || "default"] ? _customTag.styleSheetLoadList[this.getAttribute("data-tp-style") || "default"].replace(/>/g, " ").replace(/.tp-collapse\s*\{/g, ":host   {").replace(/label.tp-collapse_label\b\s/g, "::slotted(.tp-collapse_label)   ").replace(/label.tp-collapse_label::/g, "::slotted(.tp-collapse_label)::").replace(/.tp-tabs_label:hover\b\s/g, "::slotted(.tp-tabs_label:hover)   ").replace(/.tp-tabs_label.checked\b\s/g, "::slotted(.tp-tabs_label.checked)   ") : "";
          }
          if (_tagName == "buttons") {
            customStyle.textContent = _customTag.styleSheetList && _customTag.styleSheetList[this.getAttribute("data-tp-style") || "default"] ? getButtonsStyle(_customTag.styleSheetList[this.getAttribute("data-tp-style") || "default"], this.getAttribute("data-tp-style") || "default").replace(/\[data-tp-style=(.*?)\]/g, "").replace(/>/g, " ").replace(/.tp-buttons\s*\{/g, ":host   {").replace(/.tp-buttons:hover\s*\{/g, ":host(:hover)   {").replace(/.tp-buttons::before\s*\{/g, ":host(.tp-buttons)::before   {").replace(/.tp-buttons::after\s*\{/g, ":host(.tp-buttons)::after   {") : "";
          }
          template.content.prepend(customStyle);
          template.content.prepend(staticStyle);
          this.shadowRoot.appendChild(template.content.cloneNode(true));
        }
        connectedCallback() {
          getTp$ComponentFn(_customTag, "headerEditableFn")(this, _customTag.isHeaderEditable, _tagName, editor);
          getTp$ComponentFn(_customTag, "contentEditableFn")(this, _customTag.isContentEditable, _tagName, editor);
          getTp$ComponentFn(_customTag, "connectedCallback")(this.shadowRoot, this);
        }
        static get observedAttributes() {
          return ["data-top-bg", "data-mce-tp-component", "data-value"];
        }
        static tp$Delete() {
          console.log(this);
        }
      }
      try {
        win.customElements.define("tp-" + _tagName, TpComponent);
      } catch (_a) {
      }
    };
    const createComponentsCustomTag = (editor) => {
      const win = editor.getWin();
      const doc = editor.getDoc();
      let toolbar = editor.toolbar;
      let baseSource = editor.baseURI.source;
      typeof toolbar === "object" && (toolbar = toolbar.jion(" "));
      if (/tpIconlists/.test(toolbar)) {
        global$6.send({
          url: baseSource + "plugins/tpIconlists/tpIconlists.css",
          async: false,
          dataType: "text",
          success: function(text) {
            editor.dom.addStyle(text);
          }
        });
      }
      tp$RegisterFormatter(editor);
      tp$RegisterCommand(editor);
      const tpComponentStyle = `.mce-content-body [data-mce-tp-component][contenteditable=false][data-mce-selected] {
      outline: none;
      cursor: default;
      box-shadow: 0 0 0 2px #b4d7ff;
      position: relative;
      z-index:999;
      border-color: #B4D7FF;
      border-style: solid;
  }
  .mce-content-body .tp-partition[contentEditable=false],
  .mce-content-body .tp-partition[contentEditable=false]:focus,
  .mce-content-body .tp-partition[contentEditable=false]:hover{
    outline: none!important;
    box-shadow: none!important;
  }
  .mce-content-body tp-buttons .tp-component_inline>a{
       color: inherit;
       font:inherit;
       text-decoration: none;
       
  }
  .mce-content-body .tp-collapse .tp-collapse_label>p:first-child{
      display: inline-block;
  }
  .mce-content-body .tp-component_inline{display: table-cell; margin: 0 }
  .mce-content-body *[contentEditable=false] *[contentEditable=true]:focus {
      outline: none!important;
  }
  .mce-content-body tp-buttons{
    display: inline-block;
    vertical-align: middle;
  }
  .mce-content-body img{
      max-width: 100%;
  }
  .mce-content-body [data-mce-tp-component]{
      border: 1px dashed #bbb;
  }
  .mce-content-body *[contentEditable=false] *[contentEditable=true]:hover {
      outline: none!important;
  }`;
      editor.dom.addStyle(tpComponentStyle);
      editor.tp$Style = {};
      editor.getTpStyle = (args) => {
        return "<style>" + editor.tp$OutputStyle + " </style>";
      };
      let componentList = editor.tp$CustomTags || tp$Component.customTags;
      global$1.each(componentList, function(item, key) {
        setupWebComponent(win, doc, editor, item, key);
      });
      editor.parser.addAttributeFilter("data-tp-component", (nodes) => {
        nodes && nodes.forEach((node) => {
          let customtag = node.attr("data-tp-component");
          componentList[customtag] ? getTp$ComponentFn(componentList[customtag], "parserFn")(node, customtag, editor) : "";
        });
      });
      editor.serializer.addAttributeFilter("data-mce-tp-component", (nodes) => {
        nodes && nodes.forEach((node) => {
          let customtag = node.attr("data-mce-tp-component");
          componentList[customtag] ? getTp$ComponentFn(componentList[customtag], "serializerFn")(node, customtag, editor) : " ";
        });
      });
      editor.setContent(editor.getContent({ source_view: true }));
    };
    const setCustomTags = (customTag, setAttribute, setValue, editor, isAssign) => {
      if (editor) {
        !editor.tp$CustomTags && (editor.tp$CustomTags = JSON.parse(JSON.stringify(tp$Component.customTags)));
        isAssign ? __assign2(editor.tp$CustomTags[customTag][setAttribute], setValue) : editor.tp$CustomTags[customTag][setAttribute] = setValue;
      } else {
        isAssign ? __assign2(tp$Component.customTags[customTag][setAttribute], setValue) : tp$Component.customTags[customTag][setAttribute] = setValue;
      }
    };
    const createCustomTags = (customTag, init, editor) => {
      if (editor) {
        !editor.tp$CustomTags && (editor.tp$CustomTags = JSON.parse(JSON.stringify(tp$Component.customTags)));
        editor.tp$CustomTags[customTag] = init;
      } else {
        tp$Component.customTags[customTag] = init;
      }
    };
    const setStyleSheetList = (customTag, styleName, text, editor) => {
      setCustomTags("buttons", "styleSheetList", { [styleName]: {
        "tp-buttons": getStyleSheetClass("tp-buttons", text),
        "tp-buttons:hover": getStyleSheetClass("tp-buttons:hover", text),
        "tp-buttons::before": getStyleSheetClass("tp-buttons::before", text),
        "tp-buttons::after": getStyleSheetClass("tp-buttons::after", text)
      } }, editor, true);
    };
    const componentsApi = {
      custom_elements: "",
      setCustomTags,
      createCustomTags,
      setStyleSheetList,
      createHtmlPanel
    };
    var tabs = {
      name: "tabs",
      styleSheet: {
        selector: "default",
        styleSheetList: {
          default: {
            "tp-tabs": ``,
            "tp-tabs_top": ``,
            "tp-tabs_label.checked": ` `,
            "tp-tabs_main": ` `,
            "tp-tab_main.checked": ` `
          }
        }
      },
      styleSheetLoadList: {},
      styleFn: () => {
      },
      state: {
        count: 0
      },
      tpComponentDeleteFn: function() {
        console.log(this);
      },
      tpComponentMonitorCmd: () => {
      },
      tpComponentCmdFn: {
        tabAdd: (_self, _props) => {
          let partitionEditableWrapper = document.createElement("div");
          partitionEditableWrapper.setAttribute("contenteditable", false);
          partitionEditableWrapper.setAttribute("class", "tp-partition tp-tabs_label");
          partitionEditableWrapper.setAttribute("data-idx", _self.tp$state.count);
          let partitionEditableWrapperChlid = document.createElement("p");
          partitionEditableWrapperChlid.setAttribute("class", "tp-component_inline");
          partitionEditableWrapperChlid.setAttribute("data-idx", _self.tp$state.count);
          partitionEditableWrapperChlid.setAttribute("contenteditable", true);
          partitionEditableWrapperChlid.innerHTML = _props.title;
          partitionEditableWrapper.appendChild(partitionEditableWrapperChlid);
          _self.insertBefore(partitionEditableWrapper, _self.lastChild);
          let partitionEditableMain = document.createElement("div");
          partitionEditableMain.setAttribute("class", "tp-tab_main");
          partitionEditableMain.setAttribute("style", "overflow: hidden; max-height: 0; transition: all 0s");
          partitionEditableMain.innerHTML = _props.content;
          _self.lastChild.appendChild(partitionEditableMain);
          _self.tp$state.count++;
        },
        tabDelete: (_self, _props) => {
          _self.children[--_self.tp$state.count].remove();
          _self.lastChild.lastChild.remove();
        },
        delete: (_self, _props) => {
          _self.remove();
        },
        getStyle: (_self, _props) => {
        },
        setStyle: (_self, _props) => {
          console.log(_self.querySelector(".tp-tabs_top"));
          _self.setAttribute("data-top-style", _props["tp-tabs_top"]);
          _self.shadowRoot.querySelector(".tp-tabs_top").setAttribute("style", _props["tp-tabs_top"]);
        }
      },
      template: {
        innerHTML: `
<div class="tp-tabs">
  <div class="tp-tabs_top" id="headerID">
      <slot></slot>
  </div>
  <div class="tp-tabs_main">
      <slot name="content" ></slot>
  </div>
</div>
    `
      },
      connectedCallback: (shadowRoot, dom) => {
        let isChecked = (ele) => {
          return ele.className && ele.className.indexOf("tp-partition tp-tabs_label") !== -1 || ele.parentNode && (ele.parentNode.className && ele.parentNode.className.indexOf("tp-partition tp-tabs_label") !== -1 || ele.parentNode.parentNode && ele.parentNode.parentNode.className && ele.parentNode.parentNode.className.indexOf("tp-partition tp-tabs_label") !== -1);
        };
        shadowRoot.getElementById("headerID").addEventListener("click", function(e) {
          if (isChecked(e.target)) {
            let _idex = e.target.getAttribute("data-idx") || e.target.parentNode.getAttribute("data-idx") || "0";
            let _tabsToplist = dom.querySelectorAll("div.tp-partition.tp-tabs_label");
            let oldSelectTopDom = dom.querySelector("div.tp-partition.tp-tabs_label.checked");
            oldSelectTopDom ? oldSelectTopDom.setAttribute("class", "tp-partition tp-tabs_label") : "";
            let newSelectTopDom = _tabsToplist[_idex];
            newSelectTopDom ? newSelectTopDom.setAttribute("class", "tp-partition tp-tabs_label checked") : "";
            let _tabslist = dom.querySelectorAll("div.tp-tab_main");
            let oldSelectDom = dom.querySelector("div.tp-tab_main[contenteditable=true]");
            oldSelectDom ? oldSelectDom.setAttribute("contenteditable", false) || (oldSelectDom.style.maxHeight = "0px") : "";
            let newSelectDom = _tabslist[_idex];
            newSelectDom ? newSelectDom.setAttribute("contenteditable", true) || (newSelectDom.style.maxHeight = "10000px") : "";
          }
        });
      },
      isContentEditable: true,
      contentEditableFn: (_self, _isEditable, _customtag) => {
        if (_self.lastChild && _self.lastChild.className === "tp-" + _customtag + "_main") {
          const partitionEditableWrapper = document.createElement("div");
          partitionEditableWrapper.setAttribute("contenteditable", false);
          partitionEditableWrapper.setAttribute("class", "tp-partition tp-tabs_main");
          partitionEditableWrapper.setAttribute("slot", "content");
          if (_self.lastChild.firstChild) {
            _self.lastChild.firstChild.setAttribute("class", "tp-tab_main");
            _self.lastChild.firstChild.setAttribute("style", "overflow: hidden; max-height: 10000px; transition: all 0s");
            _isEditable ? _self.lastChild.firstChild.setAttribute("contenteditable", true) : "";
            partitionEditableWrapper.setAttribute("style", _self.lastChild.getAttribute("style"));
            partitionEditableWrapper.appendChild(_self.lastChild.firstChild);
          }
          while (_self.lastChild.firstChild) {
            _self.lastChild.firstChild.setAttribute("class", "tp-tab_main");
            _self.lastChild.firstChild.setAttribute("style", "overflow: hidden; max-height: 0; transition: all 0s");
            partitionEditableWrapper.appendChild(_self.lastChild.firstChild);
          }
          _self.removeChild(_self.lastChild);
          _self.appendChild(partitionEditableWrapper);
        }
      },
      isHeaderEditable: true,
      headerEditableFn: (_self, _isEditable, _customtag) => {
        let _len = _self.children.length;
        _self.getAttribute("data-id");
        _self.shadowRoot.querySelector("#headerID.tp-tabs_top").setAttribute("style", _self.getAttribute("data-top-style") ? _self.getAttribute("data-top-style") : "");
        for (let i = _len - 2; i >= 0; i--) {
          _self.tp$state.count++;
          _self.children[i].setAttribute("contenteditable", false);
          _self.children[i].setAttribute("class", "tp-partition tp-" + _customtag + "_label" + (i === 0 ? " checked" : ""));
          _self.children[i].setAttribute("data-idx", i);
          _self.children[i].firstChild.setAttribute("class", "tp-component_inline");
          _self.children[i].firstChild.setAttribute("data-idx", i);
          _isEditable ? _self.children[i].firstChild.setAttribute("contenteditable", true) : "";
        }
      },
      parserFn: (node, customtag) => {
        node.attr({
          "data-tp-component": null,
          "data-mce-tp-component": customtag,
          "data-top-style": node.firstChild.attr("style")
        });
        while (node.firstChild.name === "input") {
          node.firstChild.remove();
        }
        let _node = node.firstChild.firstChild;
        while (_node && _node.name === "label") {
          let _nextNode = _node.next;
          let placeTop = new global$7("div", 1);
          _node.name = "p";
          _node.wrap(placeTop);
          _node = _nextNode;
        }
        let tabMainFirst = node.lastChild.firstChild;
        while (tabMainFirst && tabMainFirst.name === "label") {
          let tabMainFirstNext = tabMainFirst.next.next;
          tabMainFirst.remove();
          tabMainFirst = tabMainFirstNext;
        }
        node.firstChild.unwrap();
        node.type = 1;
        node.name = "tp-" + customtag;
      },
      serializerFn: (node, customtag) => {
        node.attr({
          "data-mce-tp-component": null,
          "data-tp-component": customtag,
          "contenteditable": null,
          "class": "tp-" + customtag
        });
        let placeTop = new global$7("div", 1);
        placeTop.attr("class", "tp-tabs_top");
        placeTop.attr("style", node.attr("data-top-style"));
        node.attr("data-top-style", null);
        let _node = node.firstChild;
        let cloneNodeList = [];
        while (_node.attr("data-idx")) {
          let _nextNode = _node.next;
          _node.firstChild.name = "label";
          _node.firstChild.attr({
            contenteditable: null,
            "data-idx": null,
            class: "tp-" + customtag + "_label",
            for: node.attr("data-id") + "tab" + _node.attr("data-idx")
          });
          cloneNodeList.push(tp$Serialize(_node.firstChild));
          placeTop.append(_node.firstChild);
          _node.remove();
          _node = _nextNode;
        }
        let _lastNode = node.lastChild.firstChild;
        let _count = 0;
        while (_lastNode && _lastNode.attr("class") === "tp-tab_main") {
          let _nextNode = _lastNode.next;
          let placeInput = new global$7("input", 1);
          placeInput.shortEnded = true;
          placeInput.attr({ id: node.attr("data-id") + "tab" + _count, type: "radio", name: node.attr("data-id") });
          _count == 0 ? placeInput.attr("checked", "") : "";
          node.append(placeInput);
          _lastNode.attr({
            contenteditable: null,
            style: null,
            class: "tp-tab_main tp-tab_main_" + _count
          });
          if (cloneNodeList[_count]) {
            node.lastChild.insert(tp$DomParser(cloneNodeList[_count]), _lastNode, true);
            _count++;
          }
          _lastNode = _nextNode;
        }
        node.append(placeTop);
        node.firstChild.attr({
          contenteditable: null,
          class: "tp-tabs_main"
        });
        node.append(node.firstChild);
        node.type = 1;
        node.name = "div";
      }
    };
    var buttons = {
      name: "buttons",
      template: {
        innerHTML: `
<div class="tp-buttons">
<div class="tp-buttons_main">
    <slot></slot>
</div>
</div>
    `
      },
      styleSheetList: {
        default: {
          "tp-buttons": `

          display: inline-block;
          background: rgb(179, 70, 70);
          padding: 14px 25px;
          color: #333;
          border-radius: 8px;
          -webkit-transition: all .2s ease-in-out;
          transition: all .2s ease-in-out;
          border: 1px solid transparent;
          box-sizing: border-box;
          word-wrap: break-word;
          cursor: pointer;
          text-decoration: none;`,
          "tp-buttons:hover": `
           color: rgb(179, 70, 70) ;
           background: transparent;
           border-color: rgb(179, 70, 70) ;
           `,
          "tp-buttons::before": ` `,
          "tp-buttons::after": ` `
        }
      },
      isContentEditable: true,
      connectedCallback: () => {
      },
      tpComponentCmdFn: {
        upData: (_self, _props) => {
          _self.shadowRoot.children[1].textContent = getButtonsStyle(_props.editor.tp$CustomTags.buttons.styleSheetList[_props.styleName], _props.styleName).replace(/\[data-tp-style=(.*?)\]/g, "").replace(/>/g, " ").replace(/.tp-buttons\s*\{/g, ":host   {").replace(/.tp-buttons:hover\s*\{/g, ":host(:hover)   {").replace(/.tp-buttons::before\s*\{/g, ":host(::before)   {").replace(/.tp-buttons::after\s*\{/g, ":host(::after)   {");
        }
      },
      contentEditableFn: (_self, _isEditable, _customtag, editor) => {
        if (_self.firstChild && _self.firstChild.tagName === "A") {
          const Wrapper = document.createElement("p");
          Wrapper.setAttribute("contenteditable", true);
          Wrapper.setAttribute("class", "tp-component_inline");
          _self.firstChild.innerHTML = "<span>" + _self.firstChild.innerHTML + "</span>";
          _self.firstChild.setAttribute("href", "javascript:;");
          Wrapper.appendChild(_self.firstChild);
          _self.appendChild(Wrapper);
        }
      },
      isHeaderEditable: true,
      parserFn: (node, customtag, editor) => {
        node.attr({
          "data-tp-component": null
        });
        let _text = node.attr("style");
        let placeDivStyle = {};
        let _tem = "";
        _tem = tp$getStyleValue("margin", _text);
        _tem && (placeDivStyle.margin = _tem);
        _tem = tp$getStyleValue("padding", _text);
        _tem && (placeDivStyle.padding = _tem);
        _tem = tp$getStyleValue("border", _text);
        _tem && (placeDivStyle.border = _tem);
        _tem = tp$getStyleValue("background", _text);
        _tem && (placeDivStyle["background"] = _tem);
        _tem = tp$getStyleValue("border-radius", _text);
        _tem && (placeDivStyle["border-radius"] = _tem);
        _tem = tp$getStyleValue("border-width", _text);
        _tem && (placeDivStyle["border-width"] = _tem);
        _tem = tp$getStyleValue("border-style", _text);
        _tem && (placeDivStyle["border-style"] = _tem);
        _tem = tp$getStyleValue("border-color", _text);
        _tem && (placeDivStyle["border-color"] = _tem);
        let placeDiv = new global$7("div", 1);
        placeDiv.type = 1;
        placeDiv.attr({
          "data-mce-tp-component": customtag,
          "data-tp-style": node.attr("data-tp-style") || "default",
          "style": getFormatStyle(placeDivStyle) || null,
          "data-id": node.attr("data-id")
        });
        node.attr("class") && placeDiv.attr("class", node.attr("class"));
        !editor.tp$Style.mapping ? editor.tp$Style.mapping = {} : "";
        !editor.tp$Style.mapping["" + node.attr("data-id")] ? editor.tp$Style.mapping["" + node.attr("data-id")] = {
          styleCustomTags: "buttons",
          stylePath: "styleSheetList",
          styleTemplate: node.attr("data-tp-style") || "default",
          specialStyle: {}
        } : __assign2(editor.tp$Style.mapping["" + node.attr("data-id")], { styleTemplate: node.attr("data-tp-style") || "default" });
        node.attr("style", getFormatStyle(__assign2(getObjStyle(node.attr("style")) || {}, { margin: "", padding: "", background: "", "border-style": "", "border-color": "", "border-width": "", "border-radius": "", border: "" })) || null);
        node.attr("data-id", null);
        node.attr("data-mce-style", null);
        node.wrap(placeDiv);
        placeDiv.name = "tp-" + customtag;
      },
      serializerFn: (node, customtag) => {
        let ATags = node;
        while (ATags.name !== "a" && ATags.firstChild.name !== "#text") {
          ATags = ATags.firstChild;
        }
        node.attr({
          "data-mce-tp-component": null,
          "data-tp-component": customtag,
          "contenteditable": null,
          "data-tp-style": node.attr("data-tp-style") || "default",
          "href": ATags && ATags.attr("href") ? ATags.attr("href") : null,
          "style": ATags && ATags.attr("style") ? getFormatStyle(__assign2(getObjStyle(node.attr("style")) || {}, getObjStyle(ATags.attr("style")) || {})) : node.attr("style"),
          "target": ATags && ATags.attr("target") ? ATags.attr("target") : null,
          "rel": ATags && ATags.attr("rel") ? ATags.attr("rel") : null,
          "title": ATags && ATags.attr("title") ? ATags.attr("title") : null
        });
        node.firstChild.unwrap();
        ATags && ATags.unwrap();
        node.name = "a";
      }
    };
    var collapse = {
      name: "collapse",
      template: {
        innerHTML: `
<div class="tp-collapse">
<div class="header" id="headerID">
  <slot name="header"></slot>
</div>
<div class="tp-collapse_mainBox">
    <slot></slot>
</div>
</div>
    `
      },
      isContentEditable: true,
      connectedCallback: () => {
      },
      tpComponentCmdFn: {
        upData: (_self, _props) => {
          let _style = _props.style;
          let padding_style = tp$getStyleValue("padding", _style);
          let border_style = tp$getStyleValue("border", _style);
          let borderWidth_style = tp$getStyleValue("border-width", _style);
          tp$SetSpecialStyle(_props.editor, _self, "tp-collapse_main", (padding_style ? "padding: " + padding_style + "!important; " : "") + (border_style ? "border: " + border_style + "!important;" : "") + (borderWidth_style ? "border-width: " + borderWidth_style + "!important;" : ""));
        }
      },
      contentEditableFn: (_self, _isEditable, _customtag, editor) => {
        const partitionEditableWrapper = document.createElement("div");
        partitionEditableWrapper.setAttribute("contenteditable", false);
        partitionEditableWrapper.setAttribute("class", "tp-partition tp-collapse_main");
        _isEditable ? _self.lastChild.setAttribute("contenteditable", true) : "";
        if (_self.lastChild.getAttribute("class") === "tp-collapse_main") {
          let _style = _self.lastChild.getAttribute("style");
          let padding_style = tp$getStyleValue("padding", _style);
          let border_style = tp$getStyleValue("border", _style);
          let borderWidth_style = tp$getStyleValue("border-width", _style);
          tp$SetSpecialStyle(editor, _self, "tp-collapse_main", (padding_style ? "padding: " + padding_style + "!important; " : "") + (border_style ? "border: " + border_style + "!important;" : "") + (borderWidth_style ? "border-width: " + borderWidth_style + "!important;" : ""));
        }
        partitionEditableWrapper.appendChild(_self.lastChild);
        _self.appendChild(partitionEditableWrapper);
      },
      isHeaderEditable: true,
      headerEditableFn: (_self, _isEditable, _customtag, editor) => {
        if (_self.firstChild.contenteditable !== "true") {
          const headerWrapper = document.createElement("div");
          _isEditable ? headerWrapper.setAttribute("contenteditable", true) : "";
          headerWrapper.setAttribute("slot", "header");
          headerWrapper.setAttribute("class", "tp-collapse_label");
          headerWrapper.setAttribute("style", "min-height: 20px; " + _self.getAttribute("data-top-style"));
          while (_self.firstChild && _self.firstChild.className !== "tp-" + _customtag + "_main") {
            headerWrapper.appendChild(_self.firstChild);
          }
          _self.insertBefore(headerWrapper, _self.firstChild);
        }
      },
      parserFn: (node, customtag) => {
        node.attr({
          "data-tp-component": null,
          "data-mce-tp-component": customtag
        });
        node.attr("data-id", node.firstChild.attr("id"));
        node.firstChild.remove();
        node.lastChild.attr("class", "tp-" + customtag + "_main");
        node.type = 1;
        node.name = "tp-" + customtag;
      },
      serializerFn: (node, customtag) => {
        node.attr({
          "data-mce-tp-component": null,
          "data-tp-component": customtag,
          "contenteditable": null,
          "class": "tp-" + customtag
        });
        node.firstChild.type = 1;
        node.firstChild.name = "label";
        node.firstChild.attr({
          contenteditable: null,
          for: node.attr("data-id")
        });
        let mainStyle = node.lastChild.attr("style");
        node.lastChild.unwrap();
        node.lastChild.attr({
          contenteditable: null,
          class: "tp-" + customtag + "_main",
          style: mainStyle
        });
        let placeInput = new global$7("input", 1);
        placeInput.shortEnded = true;
        placeInput.attr({ id: node.attr("data-id"), type: "checkbox" });
        node.insert(placeInput, node.firstChild, true);
        node.attr("data-id", null);
        node.type = 1;
        node.name = "div";
      }
    };
    const getSktType = (name) => {
      return /select$/.test(name);
    };
    const splitObj = {
      "forecolor": true,
      "backcolor": true,
      tpLetterspacing: true,
      tpIconlists: true,
      tpColumns: true,
      table: true
    };
    const menubarObj = {
      title: {
        file: {
          zh_CN: "\u6587\u4EF6",
          en_US: "File"
        },
        edit: {
          zh_CN: "\u7F16\u8F91",
          en_US: "Edit"
        },
        view: {
          zh_CN: "\u67E5\u770B",
          en_US: "View"
        },
        insert: {
          zh_CN: "\u63D2\u5165",
          en_US: "Insert"
        },
        format: {
          zh_CN: "\u683C\u5F0F",
          en_US: "Format"
        },
        table: {
          zh_CN: "\u8868\u683C",
          en_US: "Table"
        },
        tools: {
          zh_CN: "\u5DE5\u5177",
          en_US: "Tools"
        },
        help: {
          zh_CN: "\u5E2E\u52A9",
          en_US: "Help"
        }
      },
      items: {
        code: "tools",
        spellchecker: "tools",
        spellcheckerlanguage: "tools",
        wordcount: "tools",
        image: "insert",
        link: "insert",
        media: "insert",
        hr: "insert",
        template: "insert",
        codesample: "insert",
        charmap: "insert",
        inserttable: "table",
        emoticons: "insert",
        pagebreak: "insert",
        nonbreaking: "insert",
        anchor: "insert",
        toc: "insert",
        insertdatetime: "insert",
        bold: "format",
        italic: "format",
        underline: "format",
        strikethrough: "format",
        blockquote: "format",
        subscript: "format",
        superscript: "format",
        removeformat: "format",
        formatselect: "format",
        fontselect: "format",
        fontsizes: "format",
        forecolor: "format",
        backcolor: "format",
        fontformats: "format",
        blockformats: "format",
        codeformat: "format",
        align: "format",
        table: "table",
        lineheight: "format",
        help: "help"
      }
    };
    const menubarTitle = {
      file: true,
      view: true,
      edit: true
    };
    const getToolbarGroups = (toolbar) => {
      let toolbar_groups = [];
      let toolbarList = toolbar.split("|");
      toolbarList.forEach((item) => {
        let toolbarItem = item.split(" ");
        let toolbarGroup = [];
        toolbarItem.forEach((cItem) => {
          cItem && toolbarGroup.push({ isSelect: getSktType(cItem), name: cItem });
          cItem && menubarObj.items[cItem] && (menubarTitle[menubarObj.items[cItem]] = true);
        });
        toolbarGroup.length > 0 && toolbar_groups.push(toolbarGroup);
      });
      return toolbar_groups;
    };
    const getMenubarGroups = (menubar) => {
      let menubar_groups = [];
      let menubarList = menubar.split("|");
      menubarList.forEach((item) => {
        let menubarItem = item.split(" ");
        let menubarGroup = [];
        menubarItem.forEach((cItem) => {
          cItem && menubarGroup.push({ isSelect: getSktType(cItem), name: cItem });
        });
        menubar_groups.push(menubarGroup);
      });
      return menubar_groups;
    };
    const getStyle = () => {
      return `.skt-tox-tinymce{

    border: 1px solid #ccc;
    border-radius: 0;
    box-shadow: none;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif;
    overflow: hidden;
    position: relative;
    visibility: inherit!important;
    font-size: 16px;
    font-style: normal;
    font-weight: 400;
    line-height: normal;
    -webkit-tap-highlight-color: transparent;
    text-decoration: none;
    text-shadow: none;
    text-transform: none;
    vertical-align: initial;
    white-space: normal;
        height: 200px;
  }
  
  .skt-tox-editor-container{
    display: flex;
    flex: 1 1 auto;
    flex-direction: column;
    overflow: hidden;
  }
  .skt-tox-editor-header{
     box-shadow: none;
     transition: box-shadow .5s;
         z-index: 1;
  }
  .skt-tox-anchorbar{
    display: flex;
    flex: 0 0 auto;
     border-top: 1px solid #ccc;
  }
  .skt-tox-tinymce .skt-tox-statusbar{
    align-items: center;
    background-color: #fff;
    border-top: 1px solid #ccc;
    color: rgba(34,47,62,.7);
    display: flex;
    flex: 0 0 auto;
    font-size: 12px;
    font-weight: 400;
    height: 18px;
    overflow: hidden;
    padding: 0 8px;
    position: relative;
    text-transform: uppercase;
  
  }
  .skt-tox-tinymce .skt-tox-toolbar,.skt-tox-tinymce .skt-tox-menubar{
   background:url("data:image/svg+xml;charset=utf8,%3Csvg height='39px' viewBox='0 0 40 39px' width='40' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='0' y='38px' width='100' height='1' fill='%23cccccc'/%3E%3C/svg%3E") left 0 top 0 #fff;
     background-color: #fff;
    display: flex;
    flex: 0 0 auto;
    flex-shrink: 0;
    flex-wrap: wrap;
    padding: 0 0;
   
  }
  .skt-tox-mbtn{
   align-items: center;
    background: 0 0;
    border: 0;
    border-radius: 3px;
    box-shadow: none;
    color: #222f3e;
    display: flex;
    flex: 0 0 auto;
    font-size: 14px;
    font-style: normal;
    font-weight: 400;
    height: 34px;
    justify-content: center;
    margin: 2px 0 3px 0;
    outline: 0;
    overflow: hidden;
    padding: 0 4px;
    text-transform: none;
    width: auto;
  }
  .skt-tox-mbtn__select-label {
    cursor: default;
    font-weight: 400;
    margin: 0 4px;
  }
  .skt-tox-tbtn.skt-tox-split-button{
    border: 0;
    border-radius: 3px;
    box-sizing: border-box;
    display: flex;
    width: 50px;
    margin: 2px 0 3px 0;
    overflow: hidden;
  }
  .skt-tox-split-button .skt-tox-tbtn__select-chevron{
    margin-left: 5px;
  
  }
  .skt-tox-toolbar__group{
    border-right:1px solid #ccc;
    align-items: center;
    display: flex;
    flex-wrap: wrap;
    margin: 0 0;
    padding: 0 4px 0 4px;
  }
  .skt-tox-toolbar__group:last-child {
  border-right: 0px;
  }
  .skt-tox-sidebar-wrap-box{
    display: flex;
    flex: 0 0 auto;
    flex-direction: column;
    flex-shrink: 0;
    height: 100%;
    overflow: hidden;
    position: relative;
    width: 100%;
  }
  .skt-tox-sidebar-wrap-box p{
     height: 16px;
     width: calc(100% - 40px);
     margin: 5px 20px;
  }
  .skt-tox-sidebar-wrap-box p:first-child{
    width: calc(100% - 74px)!important;
    margin-top: 20px;
    margin-left: 54px!important;
  }
  
  .skt-tox-sidebar-wrap-box p:nth-child(3n+2){
    width: 90%;
    margin-right:8%;
  }
  .skt-tox-sidebar-wrap-box p:nth-child(3n+3){
    width: calc(100% - 74px);
    margin-left: 54px
  }
  .skt-tox-sidebar-wrap-box p:nth-child(3n+1){
    width: 75%;
    margin-right:8%;
  }
  .skt-tox-sidebar-wrap-box p:last-child{
    width: 65%!important;
    margin-left: 20px;
  }
  .skt-tox-tbtn{
    align-items: center;
    background: 0 0;
    border: 0;
    border-radius: 3px;
    box-shadow: none;
    color: #222f3e;
    display: flex;
    flex: 0 0 auto;
    font-size: 14px;
    font-style: normal;
    font-weight: 400;
    height: 34px;
    justify-content: center;
    margin: 2px 0 3px 0;
    outline: 0;
    overflow: hidden;
    padding: 0;
    text-transform: none;
    width: 34px;
  }
  .skt-tox-tbtn--select{
    margin: 2px 0 3px 0;
    padding: 0 4px;
    padding-right: 3px;
    width: auto;
  }
  .skt-tox-tbtn__select-label{ 
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    width: 7em;
    font-weight: 400;
    margin: 0 4px;
  }
  .skt-tox-tbtn__select-chevron{
    align-items: center;
    display: flex;
    justify-content: center;
    width: 10px;
    height: 14px;
  }
  .skt-tox-icon {
    display: inline-block;
    width: 24px;
    height: 24px;
  }
  
  @-webkit-keyframes skeleton-ani {
  0% {
    left: -90%
  }
  
  to {
    left: 120%
  }
  }
  
  @keyframes skeleton-ani {
  0% {
    left: -90%
  }
  
  to {
    left: 120%
  }
  }
  .skt{
    display: none;
    width: 100%;
    top:0;
    position: absolute;
    z-index: 99;
    background: #fff;
  }
  .skt.skt-loading{
   display: block;
  }
  .skt-loading .skeleton {
  position: relative;
  overflow: hidden;
  border: none !important;
  border-radius: 5px;
  background-color: rgba(0, 0, 0, 0) !important;
  background-image: none !important;
  pointer-events: none;
  }
  
  .skt-loading .skeleton:after {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  z-index: 9;
  width: 100%;
  height: 100%;
  background-color: #ebf1f8;
  display: block
  }
  
  .skt-loading .skeleton:not(.not-round):after {
  border-radius: 4px
  }
  .skt-loading .tox-tbtn__select-chevron{
  display: inline-block;
  width: 8px;
  height: 18px;
  }
  .skt-loading .tox-icon { display: inline-block; width: 24px; height: 24px;}
  .skt-loading .skeleton:not(.not-before):before {
  position: absolute;
  top: 0;
  width: 30%;
  height: 100%;
  content: "";
  background: -webkit-gradient(linear, left top, right top, color-stop(0, hsla(0, 0%, 100%, 0)), color-stop(50%, hsla(0, 0%, 100%, .3)), to(hsla(0, 0%, 100%, 0)));
  background: -o-linear-gradient(left, hsla(0, 0%, 100%, 0) 0, hsla(0, 0%, 100%, .3) 50%, hsla(0, 0%, 100%, 0) 100%);
  background: linear-gradient(90deg, hsla(0, 0%, 100%, 0) 0, hsla(0, 0%, 100%, .3) 50%, hsla(0, 0%, 100%, 0));
  -webkit-transform: skewX(-45deg);
  -ms-transform: skewX(-45deg);
  transform: skewX(-45deg);
  z-index: 99;
  -webkit-animation: skeleton-ani 1s ease infinite;
  animation: skeleton-ani 1s ease infinite;
  display: block
  }
  .skt-loading .skeleton.badge:after {
  background-color: #f8fafc
  }`;
    };
    const createSkeleton = (opt) => {
      if (!document.querySelector("style#skt-tox-style")) {
        let style = document.createElement("style");
        style.type = "text/css";
        style.id = "skt-tox-style";
        try {
          style.appendChild(document.createTextNode(getStyle()));
        } catch (ex) {
          style.styleSheet.cssText = getStyle();
        }
        let head = document.getElementsByTagName("head")[0];
        head.appendChild(style);
      }
      let toolbar_groups = [];
      if (typeof opt.toolbar === "string") {
        toolbar_groups = getToolbarGroups(opt.toolbar);
      } else if (Array.isArray(opt.toolbar)) {
        opt.toolbar.forEach((ele) => {
          toolbar_groups.push(...getToolbarGroups(ele));
        });
      }
      let menubar_groups = [];
      if (opt.menubar === false)
        ;
      else if (typeof opt.menubar === "string") {
        menubar_groups = getMenubarGroups(opt.menubar);
      } else {
        for (let key in menubarObj.title) {
          menubarTitle[key] && menubar_groups.push(menubarObj.title[key][opt.language || "en_US"]);
        }
      }
      let height = opt.min_height || opt.height || 200;
      let placeholderList = [];
      let placeholderLen = height - 150;
      for (let i = 0; i < placeholderLen; i += 50)
        placeholderList.push("1");
      let sktSelector = opt.selector ? document.querySelector(opt.selector).parentNode : opt.target.parentNode;
      let sktDom = document.createElement("div");
      sktDom.className = "skt skt-loading";
      sktDom.innerHTML = createTemplate({ selector: opt.selector, toolbar: toolbar_groups, menubar: menubar_groups, branding: opt.branding === false ? false : true, placeholderList, height });
      sktSelector.style.position = "relative";
      sktSelector.style.minHeight = height + "px";
      sktSelector.append(sktDom);
      return sktDom;
    };
    const createMenubarTemplate = (data) => {
      let strHtml = "";
      data.forEach((item) => {
        strHtml += '<button  class="skt-tox-mbtn skt-tox-mbtn--select"><span class="skt-tox-mbtn__select-label skeleton">' + item + "</span></button>\n";
      });
      return strHtml;
    };
    const createToolbarTemplate = (data) => {
      let strHtml = "";
      data.forEach((item) => {
        strHtml += '<div class="skt-tox-toolbar__group">\n';
        item.forEach((ele) => {
          strHtml += '<button class="skt-tox-tbtn ' + (ele.isSelect ? " skt-tox-tbtn--select" : "") + (splitObj[ele.name] ? " skt-tox-split-button" : "") + '"><span class="' + (ele.isSelect ? "skt-tox-tbtn__select-label skt-tox-tbtn--select" : "skt-tox-icon tox-tbtn__icon-wrap") + ' skeleton">' + ele.name + "</span>" + (ele.isSelect || splitObj[ele.name] ? '<div class="skt-tox-tbtn__select-chevron skeleton"></div>' : "") + "</button>\n";
        });
        strHtml += "</div>\n";
      });
      return strHtml;
    };
    const createWrapBoxTemplate = (data) => {
      let strHtml = "";
      data.forEach((item) => {
        strHtml += '<p class="skeleton"></p>\n';
      });
      return strHtml;
    };
    const createTemplate = (sktData) => {
      return `
<div class="skt-tox-tinymce"  style="height: ${sktData.height}px" >
<div class="skt-tox-editor-container">
    <div class="skt-tox-editor-header">
<div  class="skt-tox-menubar">
     ${createMenubarTemplate(sktData.menubar)} 
</div>
    <div class="skt-tox-toolbar-overlord">
    <div class="skt-tox-toolbar">
     ${createToolbarTemplate(sktData.toolbar)}
    </div>
    </div>
    <div class="skt-tox-anchorbar"></div>
</div>
<div class="skt-tox-sidebar-wrap-box">

    <p  class="skeleton"> &nbsp; </p>
      ${createWrapBoxTemplate(sktData.placeholderList)}
    <p class="skeleton"> </p>
</div>
</div> 
<div class="skt-tox-statusbar">
 <div class="skeleton">
      PP
  </div> 
  ${sktData.branding ? '<span class="skeleton" style="margin-left: calc(100% - 120px)">Powered by Five </span>' : ""}
 </div>
</div>`;
    };
    tp$Component.customTags[tabs.name] = tabs;
    tp$Component.customTags[buttons.name] = buttons;
    tp$Component.customTags[collapse.name] = collapse;
    let styleCheckedConvert = (className, styleValue, quantity) => {
      let _output = "\n";
      for (let i = 0; i < quantity; i++) {
        _output += `.tp-${className} > input:nth-child(${i + 1}):checked ~ .tp-${className}_top > .tp-${className}_label:nth-child(${i + 1}){${styleValue}}

               .tp-${className} > input:nth-child(${i + 1}):checked ~ .tp-${className}_main  .tp-tab_main_${i}{ max-height: 10000px; }

            `;
      }
      return _output;
    };
    let tp$createSpecialStyle = (_output, classNameMapping) => {
      let styleStr = "";
      keys(_output.specialStyle).forEach((_obj) => {
        styleStr += _output.specialStyle[_obj] ? "\n " + classNameMapping[_obj] + " { " + _output.specialStyle[_obj] + "} " : "";
      });
      return styleStr;
    };
    let createTpComponentStyleSheet = (editor) => {
      editor.tp$OutputStyle = "";
      let maxQuantity = 2;
      let _outputStyle = "";
      let _outputButtonsStyle = "";
      let _outputCollapseStyle = "";
      let _outputCollapseSpecialStyle = "";
      let _outputTabsList = {};
      let _outputCollapseList = {};
      let _buttonsStyleList = {};
      if (editor.tp$Style && editor.tp$Style.mapping) {
        !editor.tp$CustomTags && (editor.tp$CustomTags = JSON.parse(JSON.stringify(tp$Component.customTags)));
        keys(editor.tp$Style.mapping).forEach((obj) => {
          let _output = editor.tp$Style.mapping[obj];
          if (_output.styleCustomTags === "tabs") {
            if (!_outputTabsList[_output.styleTemplate]) {
              _outputStyle = editor.tp$CustomTags[_output.styleCustomTags][_output.stylePath][_output.styleTemplate];
              _outputTabsList[_output.styleTemplate] = true;
            }
            maxQuantity < _output.quantity ? maxQuantity = _output.quantity : "";
          }
          if (_output.styleCustomTags === "collapse") {
            if (!_outputCollapseList[_output.styleTemplate]) {
              _outputCollapseStyle += editor.tp$CustomTags[_output.styleCustomTags][_output.stylePath][_output.styleTemplate];
              _outputCollapseList[_output.styleTemplate] = true;
            }
            _outputCollapseSpecialStyle += _output.specialStyle ? tp$createSpecialStyle(_output, { "tp-collapse_main": '.tp-collapse > input[id="' + obj + '"]:checked + .tp-collapse_label + .tp-collapse_main' }) : "";
          }
          if (_output.styleCustomTags === "buttons" && !_buttonsStyleList[_output.styleTemplate]) {
            _outputButtonsStyle += getButtonsStyle(editor.tp$CustomTags[_output.styleCustomTags][_output.stylePath][_output.styleTemplate], _output.styleTemplate);
            _buttonsStyleList[_output.styleTemplate] = true;
          }
        });
      }
      let _getChecked = "";
      let _outputChecked = "";
      if (_outputStyle) {
        _outputStyle = _outputStyle.replace(/.tp-tabs\s*{/g, "div.tp-tabs[data-id] {").replace(/\n.tp-tabs\s/g, "\n.tp-tabs[data-id] ") + ".tp-tabs[data-id] > input { display: none;} \n .tp-tabs .tp-tabs_main .tp-tab_main { overflow: hidden;max-height: 0px;}";
        _getChecked = _outputStyle.match(/.tp-tabs_label.checked\s*{\n([\s\S]+)\n}/)[1];
        _outputChecked = _getChecked ? styleCheckedConvert("tabs", _getChecked, maxQuantity) : "";
      }
      editor.tp$OutputStyle = (_outputButtonsStyle ? `@font-face {
  font-family: "iconfont"; /* Project id 2627438 */
  src: url('//at.alicdn.com/t/font_2627438_tl87y8epxj.woff2?t=1630480852428') format('woff2'),
       url('//at.alicdn.com/t/font_2627438_tl87y8epxj.woff?t=1630480852428') format('woff'),
       url('//at.alicdn.com/t/font_2627438_tl87y8epxj.ttf?t=1630480852428') format('truetype');
}` : "") + _outputButtonsStyle + _outputCollapseStyle + _outputCollapseSpecialStyle + _outputStyle + _outputChecked;
    };
    const tp$PanelComponents = {
      iframeLayout: `
   <style>
   .iframeLayout .iframeLayout_margin {
      border: 1px dashed #333;
      background: #F9CC9D;
      position: relative;
      margin: 0;
      padding: 0;
      font-size: 0;
    }
    .iframeLayout .iframeLayout_margin .iframeLayout_border {
      margin: 39px;
      background: #FDDD9B;
      border: 1px solid #333;
      position: relative;
    }
    .iframeLayout .iframeLayout_margin .iframeLayout_border .iframeLayout_padding {
      margin: 39px;
      background: #c3d08b;
      border: 1px dashed #333;
      position: relative;
    }
    .iframeLayout .iframeLayout_margin .iframeLayout_border .iframeLayout_padding .iframeLayout_size{
      min-height: 40px;
      position: relative;
      text-align: center;
      line-height: 40px;
      margin: 39px;
      border: 1px solid #333;
    }
    .iframeLayout .iframeLayout_margin .iframeLayout_border .iframeLayout_padding .iframeLayout_size span {
      font-size: 20px;
      color: #666;
      display: inline-block;
      vertical-align: middle;
    }
    .iframeLayout .iframeLayout_margin .iframeLayout_border .iframeLayout_padding .iframeLayout_size input {
      position: relative;
      display: inline-block;
      vertical-align: middle;
    }
    .iframeLayout .iframeLayout_margin label {
      font-size: 20px;
      color: #000;
      position: absolute;
      top: 2px;
      left: 2px;
    }
    .iframeLayout .iframeLayout_margin input {
      position: absolute;
      width: 31px;
      height: 31px;
      display: block;
      margin: 0 auto;
      text-align: center;
      line-height: 31px;
      font-size: 12px;
      border: 1px solid #ccc;
      background: #fff;
      border-radius: 3px;
      overflow: hidden;
      padding: 1px;
    }
    .iframeLayout .iframeLayout_margin input:focus {
      outline: none;
      border-color: #1f81c3;
    }
    .iframeLayout .iframeLayout_margin .iframeLayout_top {
      top: 2px;
      left: 50%;
      transform: translateX(-50%);
    }
    .iframeLayout .iframeLayout_margin .iframeLayout_right {
      top: 50%;
      right: 2px;
      transform: translateY(-50%);
    }
    .iframeLayout .iframeLayout_margin .iframeLayout_bottom {
      bottom: 2px;
      left: 50%;
      transform: translateX(-50%);
    }
    .iframeLayout .iframeLayout_margin .iframeLayout_left {
      top: 50%;
      left: 2px;
      transform: translateY(-50%);
    }
   
   </style>
  <div class="iframeLayout">
  <div class="iframeLayout_margin">
       <label for=""> margin </label>
          <input type="text" class="margin iframeLayout_top" placeholder="-" id="ifrLayoutMagrginTop" >
          <input type="text" class="margin iframeLayout_right" placeholder="-" id="ifrLayoutMagrginRight" >
          <input type="text" class="margin iframeLayout_bottom" placeholder="-" id="ifrLayoutMagrginBottom" >
          <input type="text" class="margin iframeLayout_left" placeholder="-" id="ifrLayoutMagrginLeft" >
       <div class="iframeLayout_border">
         <label for=""> border </label>
          <input type="text" class="border iframeLayout_top" placeholder="-" id="ifrLayoutBorderTop" >
          <input type="text" class="border iframeLayout_right" placeholder="-" id="ifrLayoutBorderRight" >
          <input type="text" class="border iframeLayout_bottom" placeholder="-" id="ifrLayoutBorderBottom" >
          <input type="text" class="border iframeLayout_left" placeholder="-" id="ifrLayoutBorderLeft" >
     
         <div class="iframeLayout_padding">
           <label for=""> padding </label>
              <input type="text" class="padding iframeLayout_top" placeholder="-" id="ifrLayoutPaddingTop" >
              <input type="text" class="padding iframeLayout_right" placeholder="-" id="ifrLayoutPaddingRight" >
              <input type="text" class="padding iframeLayout_bottom" placeholder="-" id="ifrLayoutPaddingBottom" >
              <input type="text" class="padding iframeLayout_left" placeholder="-" id="ifrLayoutPaddingLeft" >
              <div class="iframeLayout_size">
                  <input type="text" class="size"  id="ifrLayoutWidth" >
                  <span>X</span>
                  <input type="text" class="size"  id="ifrLayoutHeight" >
              </div>
         </div>
      </div>
  </div>
</div>
  <script>
   console.log(this)
  
  <\/script>
  
  `
    };
    const getComponents = (type) => {
      return tp$PanelComponents[type];
    };
    tp$tinymce.Editor.prototype.tp$ = {
      Components: componentsApi,
      Node: {
        getDimension
      },
      Tools: {
        getFormatStyle,
        autoToPX,
        getCurrentValue,
        namingFormat: {
          toHump,
          toLine,
          toHyphen
        },
        selection: {
          cell: function(initial) {
            let value = initial;
            let action = initial;
            let get = function() {
              return value;
            };
            var getAction = function() {
              return action;
            };
            let set = function(v, s) {
              value = v;
              s ? action = s : "";
            };
            return {
              get,
              set,
              getAction
            };
          }
        }
      },
      PanelComponents: {
        getComponents
      }
    };
    tp$tinymce.init = function(_init) {
      return function() {
        let sktDom = "";
        arguments[0].skeletonScreen && (sktDom = createSkeleton(arguments[0]));
        arguments[0].custom_elements = (arguments[0].custom_elements ? arguments[0].custom_elements + "," : "") + "tp-collapse,tp-tabs,tp-buttons";
        const resEditor = _init.apply(this, arguments);
        resEditor.then((editor) => {
          let initFn = () => {
            var _a;
            if (sktDom) {
              let parentNode = sktDom.parentNode;
              sktDom.remove();
              (_a = parentNode.querySelector(".skt.skt-loading")) === null || _a === void 0 ? void 0 : _a.remove();
            }
            createComponentsCustomTag(editor[0]);
            editor[0].getTpContent = (args) => {
              return editor[0].getTpStyle(args) + editor[0].getContent(args);
            };
            editor[0].on("BeforeGetContent", (e) => {
              !e.source_view ? createTpComponentStyleSheet(e.target) : "";
            });
          };
          if (editor[0]) {
            initFn();
          } else {
            setIntervalFn2((clear) => {
              if (editor[0]) {
                clear();
                initFn();
              }
            }, 20);
          }
        });
        return resEditor;
      };
    }(tp$tinymce.init);
    let tp$IconManager = {
      default: {
        icons: {
          "tp-tab-add": '<svg t="1629385862141" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="7236" width="24" height="24"><path d="M714.27370623 141.21142578h67.41385716c27.91277775 0 51.74690871 9.88762917 71.49250467 29.66288824C872.91577659 190.6396849 882.78363013 214.42932121 882.78363013 242.33221152V309.79550667c0 9.2696528-3.26291773 17.20447542-9.88762917 23.78963631-6.56044191 6.59010498-14.51504016 9.88762917-23.81435532 9.88762989-9.29931517 0-17.27368832-3.29752417-23.83413096-9.88762989-6.60493653-6.59010498-9.89751734-14.51998353-9.89751661-23.78963631V242.3371556c0-9.26470871-3.26291773-17.19458725-9.88762918-23.78469295-6.56538599-6.59010498-14.51504016-9.88762917-23.83907504-9.88762918H714.19954925c-9.29931517 0-17.24402596-3.29752417-23.82424278-9.88762915s-9.87774172-14.51998353-9.87774171-23.88851305c0-9.2696528 3.29752417-17.20447542 9.87774171-23.78963633 6.58021754-6.59010498 14.52492761-9.88762917 23.82918686-9.88762916h0.0692129zM444.60344607 141.21142578h134.80793941c9.31414671 0 17.23413778 3.29752417 23.8687374 9.98650588 6.55055444 6.49122901 9.87774172 14.52492761 9.87774171 23.78963633 0 9.2696528-3.32718727 17.20447542-9.87774171 23.78963632-6.63459962 6.59010498-14.55459069 9.88762917-23.8687374 9.88762916H444.60344607c-9.29931517 0-17.24402596-3.29752417-23.82424277-9.88762916-6.61482398-6.59010498-9.89751734-14.51998353-9.89751734-23.78963632 0-9.26470871 3.28269263-17.30335141 9.89751734-23.78469297C427.35942084 144.50894996 435.30413091 141.21142578 444.60344607 141.21142578z m404.47819957 269.60599063c9.29931517 0 17.25391343 3.39640089 23.81435532 9.88762917 6.62471144 6.59010498 9.88762917 14.51998353 9.88762917 23.88851303v134.80793942c0 9.26470871-3.26291773 17.19458725-9.88762917 23.78469223-6.56044191 6.59504907-14.51504016 9.88762917-23.81435532 9.88762916-9.29931517 0-17.27368832-3.29258081-23.83413096-9.88762916-6.60493653-6.59010498-9.89751734-14.51998353-9.89751661-23.78469223V444.59355861c0-9.36852878 3.29258081-17.29840732 9.89751661-23.88851303 6.56044191-6.49122901 14.53481506-9.88762917 23.82918687-9.88762918z m0 269.60599063c9.29931517 0 17.25391343 3.29752417 23.81435532 9.88762989 6.62471144 6.59010498 9.88762917 14.51998353 9.88762917 23.8934564v67.34958763c0 27.90783367-9.86785426 51.79634669-29.60356207 71.57160502-19.74559598 19.6664949-43.5797262 29.55412407-71.49250466 29.55412407h-67.41385717c-9.32403415 0-17.25391343-3.29258081-23.85390586-9.88762916-6.56538599-6.59010498-9.86785426-14.51998353-9.86785426-23.78469223 0-9.37347288 3.30246827-17.30335141 9.86785426-23.89345641 6.59999243-6.59010498 14.53481506-9.88762917 23.85390586-9.8876299h67.41385717c9.29931517 0 17.25391343-3.29258081 23.80446786-9.88762916 6.63459962-6.59010498 9.89751734-14.51998353 9.89751734-23.78469223V714.10067325c0-9.2696528 3.30741236-17.19953134 9.89751663-23.78963632 6.59504907-6.59010498 14.53481506-9.88762917 23.8440184-9.88762989h-0.04943799zM242.37670615 141.21142578H309.79550667c9.30920334 0 17.21930624 3.29752417 23.82918686 9.98650588 6.58516089 6.49122901 9.8826858 14.52492761 9.8826858 23.78963633 0 9.2696528-3.29752417 17.20447542-9.87774172 23.78963632-6.61482398 6.59010498-14.52492761 9.88762917-23.83413094 9.88762916H242.38164951c-9.31414671 0-17.27368832 3.29752417-23.83413023 9.88762918-6.61482398 6.59010498-9.90246071 14.51998353-9.9024607 23.88851303V309.79550667c0 9.37347288-3.28269263 17.20447542-9.89751736 23.8934564-6.56044191 6.48628492-14.52492761 9.88762917-23.82424277 9.88762989-9.30920334 0-17.25391343-3.40134426-23.8242435-9.88762989-6.6098799-6.69392507-9.88762917-14.51998353-9.88762917-23.8934564V242.44097568C141.21142578 214.42932121 151.07928004 190.64957307 170.83476348 170.97319c19.74559598-19.77525907 43.56983876-29.66288824 71.48756058-29.66288823l0.05932545-0.09887599z m202.22673992 674.01497657h134.80793941c9.31414671 0 17.23413778 3.29752417 23.86873739 9.8876299 6.55055444 6.59010498 9.87774172 14.51998353 9.87774172 23.89345641 0 9.26470871-3.32718727 17.19458725-9.87774172 23.78469223-6.63459962 6.59504907-14.55459069 9.88762917-23.86873739 9.88762916H444.60344607c-9.29931517 0-17.24402596-3.29258081-23.82424277-9.88762916-6.61482398-6.59010498-9.89751734-14.51998353-9.89751734-23.78469223 0-9.37347288 3.28269263-17.30335141 9.89751734-23.89345641 6.58021754-6.59010498 14.52492761-9.88762917 23.82424277-9.8876299z m-269.61587808-404.40404185c9.29931517 0 17.23908188 3.3914568 23.79952377 9.88268508 6.63459962 6.59010498 9.90246071 14.51998353 9.90246072 23.88851304v134.8079394c0 9.26470871-3.26291773 17.19458725-9.90246072 23.78469224-6.56044191 6.59504907-14.50020861 9.88762917-23.79952377 9.88762916-9.31414671 0-17.27368832-3.29258081-23.83413096-9.88762916C144.53861305 596.59608526 141.25097633 588.66620673 141.25097633 579.40149802V444.59355861c0-9.36852878 3.28763673-17.29840732 9.9024607-23.88851303 6.56044191-6.49122901 14.51998353-9.88762917 23.82918686-9.88762918z m0 269.60104654c9.29931517 0 17.23908188 3.29752417 23.79952377 9.88762989 6.63459962 6.59010498 9.90246071 14.51998353 9.90246072 23.8934564v67.34958763c0 9.36852878 3.29258081 17.30335141 9.89751734 23.88851231 6.59010498 6.59010498 14.53481506 9.88762917 23.83413024 9.88762917h67.41385715c9.31414671 0 17.25391343 3.29752417 23.85390586 9.88762989 6.56538599 6.59010498 9.87774172 14.51998353 9.87774243 23.78963633 0 9.36852878-3.31235572 17.19458725-9.87774243 23.8885123-6.59999243 6.49122901-14.53975915 9.88762917-23.85390587 9.88762917H242.42120006c-27.91277775 0-51.72713307-9.88762917-71.49250396-29.66288823-19.75548343-19.77031497-29.63322515-43.55500721-29.63322515-71.46284086V714.19954925c0-9.2696528 3.28269263-17.20447542 9.89751662-23.78963633 6.59010498-6.59010498 14.53481506-9.88762917 23.83413095-9.88762916l-0.03955053-0.09887672z m337.02973524-336.95557825c9.31414671 0 17.23413778 3.29752417 23.8687374 9.88762917 6.55055444 6.59010498 9.86291017 14.51998353 9.86291017 23.78963632v101.12572983h101.13067391c9.29931517 0 17.22919442 3.29752417 23.82918687 9.88762917 6.56538599 6.59010498 9.87279762 14.51998353 9.87279762 23.78963632 0 9.36852878-3.30741236 17.30335141-9.86785427 23.88851304-6.60493653 6.59010498-14.53481506 9.88762917-23.83413022 9.88762916H545.7489508v101.12572983c0 9.2696528-3.31235572 17.20447542-9.86291017 23.78963632-6.63459962 6.59010498-14.55459069 9.88762917-23.8687374 9.88762917-9.29931517 0-17.22919442-3.29752417-23.82424278-9.88762917-6.59010498-6.59010498-9.87774172-14.51998353-9.87774171-23.78963632V545.72423181H377.18958892c-9.30425926 0-17.22425033-3.29752417-23.85390588-9.88762918-6.56538599-6.59010498-9.87774172-14.51998353-9.87774171-23.88851303 0-9.2696528 3.31235572-17.20447542 9.87774171-23.78963632 6.62965553-6.59010498 14.5496466-9.88762917 23.85390588-9.88762917h101.12572982V377.14509429c0-9.2696528 3.28763673-17.20447542 9.8777417-23.78963633 6.59504907-6.59010498 14.52492761-9.88762917 23.82918688-9.88762918z" p-id="7237"></path></svg>',
          "tp-tab-delete": '<svg t="1629436983964" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="17120" width="20" height="20"><path d="M950.857143 0H73.142857C31.695238 0 0 31.695238 0 73.142857v877.714286c0 41.447619 31.695238 73.142857 73.142857 73.142857h877.714286c41.447619 0 73.142857-31.695238 73.142857-73.142857V73.142857c0-41.447619-31.695238-73.142857-73.142857-73.142857z m-24.380953 926.47619H97.52381V97.52381h828.95238v828.95238z"  p-id="17121"></path><path d="M316.952381 560.761905h390.095238c26.819048 0 48.761905-21.942857 48.761905-48.761905s-21.942857-48.761905-48.761905-48.761905H316.952381c-26.819048 0-48.761905 21.942857-48.761905 48.761905s21.942857 48.761905 48.761905 48.761905z" p-id="17122"></path></svg>',
          "tpButtons": '<svg t="1630068696978" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="21708" width="28" height="28"><path d="M800 256h-64a32 32 0 0 0-31.84-32H159.84C142.4 224 128 238.432 128 256.224v415.552A32 32 0 0 0 159.84 704H160v64H128c-35.328 0-64-28.48-64-63.904V223.904C64 188.608 92.864 160 128 160h608c35.328 0 64 28.48 64 63.904V256zM192 351.84A64 64 0 0 1 256.16 288h639.68A64 64 0 0 1 960 351.84v448.32A64 64 0 0 1 895.84 864H256.16A64 64 0 0 1 192 800.16v-448.32z m64 32.384v383.552A31.968 31.968 0 0 0 287.744 800h576.512c17.184 0 31.744-14.4 31.744-32.224V384.224A31.968 31.968 0 0 0 864.256 352H287.744C270.56 352 256 366.4 256 384.224z" p-id="21709"></path><path  transform="scale(0.45) translate(280, 780)" d="M393.944329 226.04293h185.769284c115.432212 0 203.353552 33.325024 203.353552 137.979782 0 51.618335-28.361723 104.796566-76.576651 121.388173v3.828832c60.694087 14.180861 105.3638 56.723446 105.3638 132.732863 0 113.446891-94.019111 165.348844-217.676222 165.348844H393.944329zM571.488713 453.787564c70.904307 0 102.385819-28.361723 102.38582-73.59867 0-49.349398-33.466833-69.060795-100.967733-69.060795h-66.650049V453.787564z m12.904584 246.463371c76.576651 0 118.268384-27.227254 118.268384-85.085168 0-54.596316-40.982689-77.427503-118.268384-77.427504H506.256751v163.079906zM908.284171 638.138762V450.525966h-59.985043v-82.674422l65.231962-5.246919 12.904584-113.446891h93.310068v113.446891h104.796565v87.921341h-104.796565V638.138762c0 48.498546 19.711397 70.904307 57.716105 70.904307a124.366154 124.366154 0 0 0 41.691733-9.21756l18.151502 81.256336a276.101371 276.101371 0 0 1-89.481235 15.882564c-100.825924 0.99266-139.539676-62.679407-139.539676-158.825647zM1210.903753 362.604625h91.04113l7.657665 56.014403h2.977981c37.153857-36.303005 80.405484-66.650048 138.12159-66.650049 91.750173 0 131.172968 63.672068 131.172968 170.170337v265.182108h-111.461571v-251.001247c0-65.231962-18.151503-88.772192-59.985043-88.772192-34.884919 0-56.723446 16.591608-88.772193 47.789503v291.983936h-110.752527z"></path></svg>',
          "tpIconlists": '<svg t="1630921705647" class="icon" viewBox="0 0 1025 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="8438" width="20" height="20"><path d="M944.384 591.36 375.36 591.36c-43.968 0-79.68-35.584-79.68-79.424 0-43.84 35.648-79.424 79.68-79.424l569.088 0C988.416 432.512 1024.064 468.096 1024.064 511.936 1024.064 555.776 988.416 591.36 944.384 591.36L944.384 591.36zM944.384 273.664 375.36 273.664c-43.968 0-79.68-35.584-79.68-79.424 0-43.84 35.648-79.424 79.68-79.424l569.088 0C988.416 114.816 1024.064 150.336 1024.064 194.24 1024.064 238.08 988.416 273.664 944.384 273.664L944.384 273.664zM166.464 861.376l12.032 60.416c0.064 0.576 0.128 1.344 0.128 2.432 0 1.728-0.384 3.136-1.28 4.288-0.896 1.152-2.176 1.792-3.968 1.792-1.664 0-3.392-0.448-5.248-1.408l-58.752-27.904-57.984 29.248c-1.92 0.96-3.648 1.472-5.184 1.536-1.856 0-3.2-0.576-4.096-1.728-0.96-1.152-1.408-2.624-1.408-4.288 0-0.512 0.064-1.28 0.256-2.432l10.368-60.672-47.936-42.304C1.216 818.24 0.064 816.384 0.064 814.656c-0.064-2.944 2.368-4.864 7.232-5.632l65.088-9.6 28.48-55.424c1.6-3.328 3.712-4.992 6.272-5.056 2.624-0.064 4.736 1.6 6.464 4.864l30.016 54.72 65.344 8.064c4.864 0.704 7.296 2.496 7.36 5.504l0 0c0 1.792-1.088 3.712-3.328 5.824L166.464 861.376 166.464 861.376zM166.464 532.352l12.032 60.416C178.56 593.28 178.624 594.112 178.624 595.2c0 1.728-0.384 3.136-1.28 4.288C176.448 600.64 175.104 601.28 173.376 601.28c-1.664 0-3.392-0.448-5.248-1.408L109.44 572.032 51.456 601.28C49.6 602.24 47.872 602.752 46.272 602.752c-1.856 0-3.2-0.512-4.096-1.728-0.96-1.152-1.408-2.56-1.408-4.288 0-0.448 0.064-1.28 0.256-2.432l10.368-60.672L3.392 491.392C1.216 489.216 0.064 487.296 0.064 485.632c-0.064-3.008 2.368-4.864 7.232-5.632l65.088-9.6 28.48-55.424C102.464 411.584 104.576 409.92 107.136 409.856c2.624-0.064 4.736 1.6 6.464 4.864l30.016 54.72 65.344 8.064c4.864 0.64 7.296 2.496 7.36 5.504l0 0c0 1.792-1.088 3.712-3.328 5.824L166.464 532.352 166.464 532.352zM166.464 214.656l12.032 60.416C178.56 275.584 178.624 276.416 178.624 277.44c0 1.664-0.384 3.136-1.28 4.288C176.448 282.944 175.104 283.584 173.376 283.584c-1.664 0-3.392-0.448-5.248-1.408L109.44 254.336 51.456 283.584c-1.92 0.96-3.648 1.472-5.184 1.536-1.856 0-3.2-0.576-4.096-1.728-0.96-1.152-1.408-2.56-1.408-4.288 0-0.512 0.064-1.28 0.256-2.432l10.368-60.672L3.392 173.696C1.216 171.52 0.064 169.6 0.064 167.872c-0.064-3.008 2.368-4.864 7.232-5.632l65.088-9.6 28.48-55.424C102.464 93.888 104.576 92.224 107.136 92.16c2.624 0 4.736 1.6 6.464 4.864l30.016 54.72 65.344 8.064c4.864 0.64 7.296 2.496 7.36 5.504l0 0c0 1.792-1.088 3.712-3.328 5.824L166.464 214.656 166.464 214.656zM375.36 761.536l569.088 0c43.968 0 79.68 35.584 79.68 79.424 0 43.84-35.648 79.424-79.68 79.424L375.36 920.384c-43.968 0-79.68-35.584-79.68-79.424C295.68 797.12 331.328 761.536 375.36 761.536L375.36 761.536zM375.36 761.536" p-id="8439"></path></svg>',
          "list-bull-tp-iconlists_tick": '<div style="width: 45px"><p style="height: 20px"><img style="width: 20px; height: 20px; display:inline-block; vertical-align: middle" src="/tinymce/icons/tp/tp-tick.png"/> <span style="display: inline-block;vertical-align: middle; width: 20px;background-color: #B9BCC1; height:5px" ></span><p  style="height: 20px" ><img style="width: 20px; height: 20px; display:inline-block; vertical-align: middle" src="/tinymce/icons/tp/tp-tick.png"/> <span style="display: inline-block;vertical-align: middle; width: 20px;background-color: #B9BCC1; height:5px" ></span></p></div>',
          "tpParagraph": '<svg t="1631187903361" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="1637" width="24" height="24"><path d="M122.368 165.888h778.24c-9.216 0-16.384-7.168-16.384-16.384v713.728c0-9.216 7.168-16.384 16.384-16.384h-778.24c9.216 0 16.384 7.168 16.384 16.384V150.016c0 8.192-6.656 15.872-16.384 15.872z m-32.768 684.544c0 26.112 20.992 47.104 47.104 47.104h750.08c26.112 0 47.104-20.992 47.104-47.104V162.304c0-26.112-20.992-47.104-47.104-47.104H136.704c-26.112 0-47.104 20.992-47.104 47.104v688.128z" p-id="1638"></path><path d="M597.504 300.544h230.912v49.152h-230.912zM596.992 437.76h230.912v49.152h-230.912zM210.432 574.976h617.984v49.152H210.432zM210.432 712.192h617.984v49.152H210.432zM246.784 296.448h88.064V501.76h-29.184v29.184h117.248V501.76h-29.696V296.448H481.28v29.184h29.184V238.08H217.6v87.552h29.184z" p-id="1639"></path></svg>',
          "tpColumns": '<svg t="1631064221790" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="26578" width="20" height="20"><path d="M416 64H128c-35.2 0-64 28.8-64 64v768c0 35.2 28.8 64 64 64h288c35.2 0 64-28.8 64-64V128c0-35.2-28.8-64-64-64z m0 800c0 19.2-12.8 32-32 32H160c-19.2 0-32-12.8-32-32V160c0-19.2 12.8-32 32-32h224c19.2 0 32 12.8 32 32v704zM896 64H608c-35.2 0-64 28.8-64 64v768c0 35.2 28.8 64 64 64h288c35.2 0 64-28.8 64-64V128c0-35.2-28.8-64-64-64z m0 800c0 19.2-12.8 32-32 32H640c-19.2 0-32-12.8-32-32V160c0-19.2 12.8-32 32-32h224c19.2 0 32 12.8 32 32v704z"></path></svg>',
          "tpLetterspacing": '<svg t="1610616201691" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="969" width="24" height="24"><path d="M682.666667 704l128 106.666667-128 106.666666v-85.333333H341.333333v85.333333L213.333333 810.666667l128-106.666667v85.333333h341.333334v-85.333333zM170.666667 170.666667v682.666666H85.333333V170.666667h85.333334z m768 0v682.666666h-85.333334V170.666667h85.333334z m-394.666667 0l202.666667 469.333333h-89.6l-38.4-93.866667h-213.333334L366.933333 640H277.333333l202.666667-469.333333h64zM512 255.146667L432.213333 469.333333h159.573334L512 255.146667z" p-id="970" fill="#222f3e"></path></svg>',
          "tpIndent2em": '<svg viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" width="24" height="24"><path d="M170.666667 563.2v-102.4H887.466667v102.4zM170.666667 836.266667v-102.4H887.466667v102.4zM512 290.133333v-102.4H887.466667v102.4zM238.933333 341.333333V136.533333l204.8 102.4z"  p-id="5210"></path></svg>',
          "tpIconfont": '<svg t="1631797032825" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="16487" width="30" height="30"><path d="M805.096727 186.810182H218.903273c-17.687273 0-32.116364 14.405818-32.116364 32.116363v586.170182c0 17.687273 14.429091 32.116364 32.116364 32.116364h586.193454c17.687273 0 32.116364-14.429091 32.116364-32.116364V218.903273c0-17.687273-14.429091-32.116364-32.116364-32.116364z m0-46.545455a78.685091 78.685091 0 0 1 78.661818 78.661818v586.170182a78.685091 78.685091 0 0 1-78.661818 78.661818H218.903273a78.685091 78.685091 0 0 1-78.661818-78.661818V218.903273a78.685091 78.685091 0 0 1 78.661818-78.661818h586.193454z"  p-id="16488"></path><path d="M581.818182 465.454545h162.909091v-162.90909h-162.909091v162.90909z m-23.272727-186.181818h209.454545v209.454546h-209.454545v-209.454546zM372.363636 744.727273c51.386182 0 93.090909-41.751273 93.090909-93.090909 0-51.386182-41.751273-93.090909-93.090909-93.090909-51.386182 0-93.090909 41.751273-93.090909 93.090909 0 51.386182 41.751273 93.090909 93.090909 93.090909z m0 23.272727c-64.116364 0-116.363636-52.037818-116.363636-116.363636 0-64.116364 52.037818-116.363636 116.363636-116.363637 64.116364 0 116.363636 52.037818 116.363637 116.363637 0 64.116364-52.037818 116.363636-116.363637 116.363636zM736.907636 721.454545l-80.663272-139.636363-80.663273 139.636363h161.326545zM535.272727 744.727273l120.971637-209.454546 120.971636 209.454546H535.272727zM417.093818 393.774545l44.776727-43.52-61.812363-8.96L372.363636 285.253818l-27.694545 56.040727-61.905455 8.983273 44.683637 43.52-10.519273 61.672727 55.226182-29.090909 55.458909 29.137455-10.519273-61.742546z m24.994909 8.145455l16.384 96.116364-86.318545-45.381819-86.109091 45.381819 16.407273-96.116364L232.727273 334.010182l96.488727-13.963637L372.363636 232.727273l43.147637 87.296 96.488727 13.963636-69.911273 67.956364z"  ></path></svg>',
          "tp-columns-default": '<svg t="1631071826197" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="27031" width="60" height="40"  style="transform: translateX(7px)"; ><path  d="M213.333333 341.333333H85.333333v384h128V341.333333m85.333334 0v384a85.333333 85.333333 0 0 1-85.333334 85.333334H85.333333a85.333333 85.333333 0 0 1-85.333333-85.333334V341.333333a85.333333 85.333333 0 0 1 85.333333-85.333333h128a85.333333 85.333333 0 0 1 85.333334 85.333333z"  p-id="27032"></path><path d="M576 341.333333h-128v384h128V341.333333m85.333333 0v384a85.333333 85.333333 0 0 1-85.333333 85.333334h-128a85.333333 85.333333 0 0 1-85.333333-85.333334V341.333333a85.333333 85.333333 0 0 1 85.333333-85.333333h128a85.333333 85.333333 0 0 1 85.333333 85.333333z"  p-id="27033"></path></svg>',
          "tp-columns-columns-2": '<svg t="1631071826197" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="27031" width="60" height="40"  style="transform: translateX(7px)"; ><path  d="M213.333333 341.333333H85.333333v384h128V341.333333m85.333334 0v384a85.333333 85.333333 0 0 1-85.333334 85.333334H85.333333a85.333333 85.333333 0 0 1-85.333333-85.333334V341.333333a85.333333 85.333333 0 0 1 85.333333-85.333333h128a85.333333 85.333333 0 0 1 85.333334 85.333333z"  p-id="27032"></path><path d="M576 341.333333h-128v384h128V341.333333m85.333333 0v384a85.333333 85.333333 0 0 1-85.333333 85.333334h-128a85.333333 85.333333 0 0 1-85.333333-85.333334V341.333333a85.333333 85.333333 0 0 1 85.333333-85.333333h128a85.333333 85.333333 0 0 1 85.333333 85.333333z"  p-id="27033"></path></svg>',
          "tp-columns-columns-3": '<svg t="1631071826197" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="27031" width="40" height="40"><path d="M213.333333 341.333333H85.333333v384h128V341.333333m85.333334 0v384a85.333333 85.333333 0 0 1-85.333334 85.333334H85.333333a85.333333 85.333333 0 0 1-85.333333-85.333334V341.333333a85.333333 85.333333 0 0 1 85.333333-85.333333h128a85.333333 85.333333 0 0 1 85.333334 85.333333z"  p-id="27032"></path><path d="M576 341.333333h-128v384h128V341.333333m85.333333 0v384a85.333333 85.333333 0 0 1-85.333333 85.333334h-128a85.333333 85.333333 0 0 1-85.333333-85.333334V341.333333a85.333333 85.333333 0 0 1 85.333333-85.333333h128a85.333333 85.333333 0 0 1 85.333333 85.333333z"  p-id="27033"></path><path d="M938.666667 341.333333h-128v384h128V341.333333m85.333333 0v384a85.333333 85.333333 0 0 1-85.333333 85.333334h-128a85.333333 85.333333 0 0 1-85.333334-85.333334V341.333333a85.333333 85.333333 0 0 1 85.333334-85.333333h128a85.333333 85.333333 0 0 1 85.333333 85.333333z" p-id="27034"></path></svg>',
          "tpLineHeight": '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M9.984 12.984v-1.969h12v1.969h-12zM9.984 18.984v-1.969h12v1.969h-12zM9.984 5.016h12v1.969h-12v-1.969zM6 6.984v10.031h2.484l-3.469 3.469-3.516-3.469h2.484v-10.031h-2.484l3.516-3.469 3.469 3.469h-2.484z"></path></svg>'
        }
      }
    };
    let tp$addI18n = {
      "zh_CN": {
        "Collapse": "\u6298\u53E0\u9762\u677F",
        "Write here": "\u5728\u8FD9\u91CC\u5199\u5165\u5185\u5BB9",
        "Tabs": "\u6807\u7B7E\u9762\u677F",
        "Panel head": "\u677F\u5934",
        "Panel main": "\u677F\u4F53",
        "Padding": "\u5185\u8FB9\u8DDD",
        "Margin": "\u5916\u8FB9\u8DDD",
        "border Radius": "\u8FB9\u6846\u5706\u89D2",
        "Templates Style": "\u6A21\u677F\u6837\u5F0F",
        "Buttons": "\u6309\u94AE\u7EC4\u4EF6",
        "Icon List": "\u56FE\u6807\u5217\u8868",
        "Icon Library": "\u56FE\u6807\u5E93",
        "Horizontal columns": "\u6C34\u5E73\u5206\u5217",
        "Style {0}": "\u6837\u5F0F {0}",
        "Select tmplate": "\u9009\u62E9\u6A21\u677F\u6837\u5F0F",
        "Letter spacing": "\u5B57\u6BCD\u95F4\u8DDD",
        "Picture background fill": "\u56FE\u7247\u80CC\u666F\u586B\u5145",
        "Spacing before paragraph": "\u6BB5\u524D\u8DDD",
        "Spacing after paragraph": "\u6BB5\u540E\u8DDD",
        "First line indent": "\u9996\u884C\u7F29\u8FDB",
        "Hanging Indent": "\u60AC\u6302\u7F29\u8FDB",
        "Indent mode": "\u60AC\u6302\u65B9\u5F0F",
        "Iconfont Size": "\u56FE\u6807\u5927\u5C0F",
        "Iconfont Color": "\u56FE\u6807\u989C\u8272",
        "Line Height": "\u884C\u9AD8"
      }
    };
    tp$tinymce.addI18n = function(_i18n) {
      return function() {
        __assign2(arguments[1], tp$addI18n[arguments[0]]);
        _i18n.apply(this, arguments);
      };
    }(tp$tinymce.addI18n);
    tp$tinymce.IconManager.add = function(_icon) {
      return function() {
        __assign2(arguments[1].icons, tp$IconManager[arguments[0]] ? tp$IconManager[arguments[0]].icons : {});
        _icon.apply(this, arguments);
      };
    }(tp$tinymce.IconManager.add);
    let getContentStyle = function(content) {
      return new Promise((resolve, reject) => {
        let result = content.match(/<(style)\s*>([\s\S]+)<\/\1>/);
        resolve(result && result[2] ? result[2].trim() : "");
      });
    };
    tp$tinymce.Editor.prototype.setTpContent = function(content, args) {
      getContentStyle(content).then((res) => {
      });
      return this.setContent(content, args);
    };
    const tinymcePlugin = {
      global$1: tinymce.util.Tools,
      global$7: tinymce.html.Node,
      componentsApi,
      createSkt
    };
    var exportToModuleLoaders = function(_tinymcePlugin) {
      {
        try {
          module.exports = _tinymcePlugin;
        } catch (_) {
        }
      }
    };
    var exportToWindowGlobal = function(_tinymcePlugin) {
      window.tinymcePlugin = _tinymcePlugin;
      window.tinymce.tinymcePlugin = _tinymcePlugin;
      window.tinyMCE.tinymcePlugin = _tinymcePlugin;
    };
    exportToWindowGlobal(tinymcePlugin);
    exportToModuleLoaders(tinymcePlugin);
    exports2["default"] = tinymcePlugin;
    exports2.tinymcePlugin = tinymcePlugin;
    Object.defineProperties(exports2, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
  });
})(tinymcePlugin_umd, tinymcePlugin_umd.exports);
var validEvents = [
  "onActivate",
  "onAddUndo",
  "onBeforeAddUndo",
  "onBeforeExecCommand",
  "onBeforeGetContent",
  "onBeforeRenderUI",
  "onBeforeSetContent",
  "onBeforePaste",
  "onBlur",
  "onChange",
  "onClearUndos",
  "onClick",
  "onContextMenu",
  "onCopy",
  "onCut",
  "onDblclick",
  "onDeactivate",
  "onDirty",
  "onDrag",
  "onDragDrop",
  "onDragEnd",
  "onDragGesture",
  "onDragOver",
  "onDrop",
  "onExecCommand",
  "onFocus",
  "onFocusIn",
  "onFocusOut",
  "onGetContent",
  "onHide",
  "onInit",
  "onKeyDown",
  "onKeyPress",
  "onKeyUp",
  "onLoadContent",
  "onMouseDown",
  "onMouseEnter",
  "onMouseLeave",
  "onMouseMove",
  "onMouseOut",
  "onMouseOver",
  "onMouseUp",
  "onNodeChange",
  "onObjectResizeStart",
  "onObjectResized",
  "onObjectSelected",
  "onPaste",
  "onPostProcess",
  "onPostRender",
  "onPreProcess",
  "onProgressState",
  "onRedo",
  "onRemove",
  "onReset",
  "onSaveContent",
  "onSelectionChange",
  "onSetAttrib",
  "onSetContent",
  "onShow",
  "onSubmit",
  "onUndo",
  "onVisualAid"
];
var isValidKey = function(key) {
  return validEvents.map(function(event) {
    return event.toLowerCase();
  }).indexOf(key.toLowerCase()) !== -1;
};
var bindHandlers = function(initEvent, listeners, editor) {
  Object.keys(listeners).filter(isValidKey).forEach(function(key) {
    var handler = listeners[key];
    if (typeof handler === "function") {
      if (key === "onInit") {
        handler(initEvent, editor);
      } else {
        editor.on(key.substring(2), function(e) {
          return handler(e, editor);
        });
      }
    }
  });
};
var bindModelHandlers = function(props, ctx, editor, modelValue) {
  var modelEvents = props.modelEvents ? props.modelEvents : null;
  var normalizedEvents = Array.isArray(modelEvents) ? modelEvents.join(" ") : modelEvents;
  editor.on(normalizedEvents ? normalizedEvents : "input  focus focusin click focusout drop ObjectResized keydown paste ExecCommand ObjectSelected", function() {
    ctx.emit("update:modelValue", typeof editor.getTpContent === "function" ? editor.getTpContent({ format: props.outputFormat }) : editor.getContent({ format: props.outputFormat }));
  });
  tinymce$1.tinymcePlugin && setIntervalFn((clear) => {
    if (typeof editor.getTpContent === "function") {
      clear();
      ctx.emit("update:modelValue", editor.getTpContent({ format: props.outputFormat }));
      ctx.emit("update:modelValue", editor.getTpContent({ format: props.outputFormat }));
    }
  }, 50);
};
var initEditor = function(initEvent, props, ctx, editor, modelValue, content) {
  typeof editor.setTpContent === "function" ? editor.setTpContent(content()) : editor.setContent(content());
  if (ctx.attrs["onUpdate:modelValue"]) {
    bindModelHandlers(props, ctx, editor);
  }
  bindHandlers(initEvent, ctx.attrs, editor);
};
var unique = 0;
var uuid = function(prefix) {
  var time = Date.now();
  var random = Math.floor(Math.random() * 1e9);
  unique++;
  return prefix + "_" + random + unique + String(time);
};
var isTextarea = function(element) {
  return element !== null && element.tagName.toLowerCase() === "textarea";
};
var normalizePluginArray = function(plugins) {
  if (typeof plugins === "undefined" || plugins === "") {
    return [];
  }
  return Array.isArray(plugins) ? plugins : plugins.split(" ");
};
var mergePlugins = function(initPlugins, inputPlugins) {
  return normalizePluginArray(initPlugins).concat(normalizePluginArray(inputPlugins));
};
var isNullOrUndefined = function(value) {
  return value === null || value === void 0;
};
const setIntervalFn = (func, delay, outTime) => {
  !outTime && (outTime = delay * 1e3);
  let setIntervalObj = {
    id: null,
    outTime,
    outId: null
  };
  setIntervalObj.id = setInterval((obj) => {
    func(() => {
      clearTimeout(obj.outId);
      clearInterval(obj.id);
    });
  }, delay, setIntervalObj);
  setIntervalObj.outId = setTimeout(() => {
    setIntervalObj.id && clearInterval(setIntervalObj.id);
  }, setIntervalObj.outTime);
};
const editorProps = {
  apiKey: String,
  cloudChannel: String,
  id: String,
  init: Object,
  initialValue: String,
  inline: Boolean,
  modelEvents: [String, Array],
  plugins: [String, Array],
  tagName: String,
  toolbar: [String, Array],
  modelValue: String,
  disabled: Boolean,
  tinymceScriptSrc: String,
  outputFormat: {
    type: String,
    validator: function(prop) {
      return prop === "html" || prop === "text";
    }
  }
};
var createState = function() {
  return {
    listeners: [],
    scriptId: uuid("tiny-script"),
    scriptLoaded: false
  };
};
var CreateScriptLoader = function() {
  var state = createState();
  var injectScriptTag = function(scriptId, doc, url, callback) {
    var scriptTag = doc.createElement("script");
    scriptTag.referrerPolicy = "origin";
    scriptTag.type = "application/javascript";
    scriptTag.id = scriptId;
    scriptTag.src = url;
    var handler = function() {
      scriptTag.removeEventListener("load", handler);
      callback();
    };
    scriptTag.addEventListener("load", handler);
    if (doc.head) {
      doc.head.appendChild(scriptTag);
    }
  };
  var load = function(doc, url, callback) {
    if (state.scriptLoaded) {
      callback();
    } else {
      state.listeners.push(callback);
      if (!doc.getElementById(state.scriptId)) {
        injectScriptTag(state.scriptId, doc, url, function() {
          state.listeners.forEach(function(fn) {
            return fn();
          });
          state.scriptLoaded = true;
        });
      }
    }
  };
  return {
    load
  };
};
var ScriptLoader = CreateScriptLoader();
const defaultOptions = {
  min_height: 300,
  plugins: ["code hr"],
  toolbar: ["code hr"],
  schema: "html5",
  table_default_attributes: {
    "border": "1"
  },
  table_default_styles: {
    "border-collapse": "collapse",
    "width": "100%"
  },
  table_header_type: "sectionCells",
  table_responsive_width: true,
  file_picker_types: "file img media",
  fontsize_formats: "12px 14px 16px 18px 24px 36px 48px 56px 72px"
};
var __assign = globalThis && globalThis.__assign || function() {
  __assign = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
var renderInline = function(ce, id, elementRef, tagName) {
  return ce("div", {}, ce(tagName ? tagName : "div", {
    id,
    ref: elementRef
  }));
};
var renderIframe = function(ce, id, elementRef) {
  return ce("div", {}, ce("textarea", {
    id,
    visibility: "hidden",
    ref: elementRef
  }));
};
const getGlobal = function() {
  return typeof window !== "undefined" ? window : global;
};
const getTinymce = function() {
  var global2 = getGlobal();
  return global2 && global2.tinymce ? global2.tinymce : null;
};
var tinymceVue = defineComponent({
  name: "TinymceEditor",
  props: editorProps,
  setup: function(props, ctx) {
    var conf = props.init ? __assign(defaultOptions, props.init) : {};
    var _a = toRefs(props), disabled = _a.disabled, modelValue = _a.modelValue, tagName = _a.tagName;
    var element = ref(null);
    var vueEditor = null;
    var elementId = props.id || uuid("tiny-vue");
    var inlineEditor = props.init && props.init.inline || props.inline;
    var modelBind = !!ctx.attrs["onUpdate:modelValue"];
    var mounting = true;
    var initialValue = props.initialValue ? props.initialValue : "";
    var cache = "";
    var getContent = function(isMounting) {
      return modelBind ? function() {
        return (modelValue === null || modelValue === void 0 ? void 0 : modelValue.value) ? modelValue.value : "";
      } : function() {
        return isMounting ? initialValue : cache;
      };
    };
    var initWrapper = function() {
      var content = getContent(mounting);
      var finalInit = __assign(__assign({}, conf), {
        readonly: props.disabled,
        selector: "#" + elementId,
        plugins: mergePlugins(conf.plugins, props.plugins),
        toolbar: props.toolbar || conf.toolbar,
        inline: inlineEditor,
        setup: function(editor) {
          vueEditor = editor;
          editor.on("init", function(e) {
            return initEditor(e, props, ctx, editor, modelValue, content);
          });
          editor.on("setContent", function(e) {
          });
          if (typeof conf.setup === "function") {
            conf.setup(editor);
          }
        }
      });
      if (isTextarea(element.value)) {
        element.value.style.visibility = "";
      }
      getTinymce().init(finalInit);
      mounting = false;
    };
    watch(disabled, function(disable) {
      var _a2;
      if (vueEditor !== null) {
        if (typeof ((_a2 = vueEditor.mode) === null || _a2 === void 0 ? void 0 : _a2.set) === "function") {
          vueEditor.mode.set(disable ? "readonly" : "design");
        } else {
          vueEditor.setMode(disable ? "readonly" : "design");
        }
      }
    });
    watch(tagName, function(_) {
      var _a2;
      if (!modelBind) {
        cache = typeof vueEditor.getTpContent === "function" ? vueEditor.getTpContent() : vueEditor.getContent();
      }
      (_a2 = getTinymce()) === null || _a2 === void 0 ? void 0 : _a2.remove(vueEditor);
      nextTick(function() {
        return initWrapper();
      });
    });
    onMounted(function() {
      if (getTinymce() !== null) {
        initWrapper();
      } else if (element.value && element.value.ownerDocument) {
        var channel = props.cloudChannel ? props.cloudChannel : "5";
        var apiKey = props.apiKey ? props.apiKey : "no-api-key";
        var scriptSrc = isNullOrUndefined(props.tinymceScriptSrc) ? "https://cdn.tiny.cloud/1/" + apiKey + "/tinymce/" + channel + "/tinymce.min.js" : props.tinymceScriptSrc;
        ScriptLoader.load(element.value.ownerDocument, scriptSrc, initWrapper);
      }
    });
    onBeforeUnmount(function() {
      if (getTinymce() !== null) {
        getTinymce().remove(vueEditor);
      }
    });
    if (!inlineEditor) {
      onActivated(function() {
        if (!mounting) {
          initWrapper();
        }
      });
      onDeactivated(function() {
        var _a2;
        if (!modelBind) {
          cache = typeof vueEditor.getTpContent === "function" ? vueEditor.getTpContent() : vueEditor.getContent();
        }
        (_a2 = getTinymce()) === null || _a2 === void 0 ? void 0 : _a2.remove(vueEditor);
      });
    }
    var rerender = function(init) {
      var _a2;
      cache = typeof vueEditor.getTpContent === "function" ? vueEditor.getTpContent() : vueEditor.getContent();
      (_a2 = getTinymce()) === null || _a2 === void 0 ? void 0 : _a2.remove(vueEditor);
      conf = __assign(__assign({}, conf), init);
      nextTick(function() {
        return initWrapper();
      });
    };
    ctx.expose({
      rerender
    });
    return function() {
      return inlineEditor ? renderInline(h, elementId, element, props.tagName) : renderIframe(h, elementId, element);
    };
  }
});
const TinymceEditor = Object.assign(tinymceVue, {
  install(app) {
    app.component(tinymceVue.name, tinymceVue);
  }
});
/*! 
*  @plugin @tinymce-plugin/tp-indent2em
*  @version 0.0.1 (2022-4-21)
*  @description 首行缩进
*  @copyright (2022) Five(Li Hailong) . All rights reserved. https://github.com/tinymce-plugin/tp-indent2em
*/
(function() {
  var r = function(e, n) {
    return function(t) {
      return e.selection.selectorChangedWithUnbind(n.join(","), function(g, o) {
        t.setActive(parseInt(e.dom.getStyle(e.dom.getParent(o.node, "li,p,div"), "text-indent")) > 0 && g);
      }).unbind;
    };
  }, i = function(e, n) {
    e.undoManager.transact(function() {
      e.focus();
      for (var t = e.selection.getStart(); t.nodeName !== "LI" && t.nodeName !== "P" && t.nodeName !== "DIV" && t.nodeName !== "BODY"; )
        t = t.parentNode;
      e.dom.getStyle(t, "text-indent") ? e.execCommand("tpIndent", false, "remove") : e.execCommand("tpIndent");
    });
  }, c = function(e, n) {
    e.ui.registry.getAll().icons[n.registryName] || e.ui.registry.addIcon(n.registryName, n.icon), e.ui.registry.addToggleButton(n.registryName, { icon: n.registryName, tooltip: n.title, onAction: function() {
      return i(e);
    }, onSetup: r(e, ['*[style*="text-indent"]', '*[data-mce-style*="text-indent"]']) }), e.ui.registry.addMenuItem(n.registryName, { icon: n.registryName, text: n.title, onAction: function() {
      return i(e);
    } });
  }, s = function(e, n) {
    e.addCommand("mce".concat(n.registryName.substring(0, 1).toUpperCase() + n.registryName.substring(1)), function() {
      i(e);
    });
  }, u = function(e) {
    tinymce.PluginManager.add(e.registryName, function(n, t) {
      return c(n, e), s(n, e), { getMetadata: function() {
        return { name: e.name, url: e.repo };
      } };
    });
  }, a = { name: "Indent2em", registryName: "tpIndent2em", title: "First line indent", repo: "https://github.com/tinymce-plugin/tp-indent2em", icon: '<svg viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" width="24" height="24"><path d="M170.666667 563.2v-102.4H887.466667v102.4zM170.666667 836.266667v-102.4H887.466667v102.4zM512 290.133333v-102.4H887.466667v102.4zM238.933333 341.333333V136.533333l204.8 102.4z"  p-id="5210"></path></svg>' };
  u(a);
  var m = { opt: a };
  return m;
})();
/*! 
*  @plugin @tinymce-plugin/tp-importword
*  @version 0.0.3-beta.4 (2022-5-28)
*  @description 导入word文档
*  @copyright (2022) Li Hailong . All rights reserved. https://github.com/tinymce-plugin/tp-importword
*/
var Wr = Object.defineProperty, Hr = Object.defineProperties;
var Zr = Object.getOwnPropertyDescriptors;
var St = Object.getOwnPropertySymbols;
var $r = Object.prototype.hasOwnProperty, Vr = Object.prototype.propertyIsEnumerable;
var Qe = (ge, ae, ve) => ae in ge ? Wr(ge, ae, { enumerable: true, configurable: true, writable: true, value: ve }) : ge[ae] = ve, Ce = (ge, ae) => {
  for (var ve in ae || (ae = {}))
    $r.call(ae, ve) && Qe(ge, ve, ae[ve]);
  if (St)
    for (var ve of St(ae))
      Vr.call(ae, ve) && Qe(ge, ve, ae[ve]);
  return ge;
}, Pe = (ge, ae) => Hr(ge, Zr(ae));
var X = (ge, ae, ve) => (Qe(ge, typeof ae != "symbol" ? ae + "" : ae, ve), ve);
var tpDocsToHtml = function(ge) {
  var ae = ((f) => (f.OfficeDocument = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument", f.FontTable = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/fontTable", f.Image = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/image", f.Numbering = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/numbering", f.Styles = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles", f.StylesWithEffects = "http://schemas.microsoft.com/office/2007/relationships/stylesWithEffects", f.Theme = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme", f.Settings = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/settings", f.WebSettings = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/webSettings", f.Hyperlink = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink", f.Footnotes = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/footnotes", f.Endnotes = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/endnotes", f.Footer = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/footer", f.Header = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/header", f.ExtendedProperties = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties", f.CoreProperties = "http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties", f.CustomProperties = "http://schemas.openxmlformats.org/package/2006/relationships/metadata/custom-properties", f))(ae || {});
  function ve(f, t) {
    return t.elements(f).map((e) => ({ id: t.attr(e, "Id"), type: t.attr(e, "Type"), target: t.attr(e, "Target"), targetMode: t.attr(e, "TargetMode") }));
  }
  const et = { wordml: "http://schemas.openxmlformats.org/wordprocessingml/2006/main", drawingml: "http://schemas.openxmlformats.org/drawingml/2006/main", picture: "http://schemas.openxmlformats.org/drawingml/2006/picture", compatibility: "http://schemas.openxmlformats.org/markup-compatibility/2006" }, pe = { Dxa: { mul: 0.05, unit: "pt" }, Emu: { mul: 1 / 12700, unit: "pt" }, FontSize: { mul: 0.5, unit: "pt" }, Border: { mul: 0.125, unit: "pt" }, Point: { mul: 1, unit: "pt" }, Percent: { mul: 0.02, unit: "%" }, LineHeight: { mul: 1 / 240, unit: null } };
  function tt(f, t = pe.Dxa) {
    var e;
    return f == null || /.+(p[xt]|[%])$/.test(f) ? f : `${(parseInt(f) * t.mul).toFixed(2)}${(e = t.unit) != null ? e : ""}`;
  }
  function Ct(f, t = false) {
    switch (f) {
      case "1":
        return true;
      case "0":
        return false;
      case "on":
        return true;
      case "off":
        return false;
      case "true":
        return true;
      case "false":
        return false;
      default:
        return t;
    }
  }
  function rt(f, t, e) {
    if (f.namespaceURI != et.wordml)
      return false;
    switch (f.localName) {
      case "color":
        t.color = e.attr(f, "val");
        break;
      case "sz":
        t.fontSize = e.lengthAttr(f, "val", pe.FontSize);
        break;
      default:
        return false;
    }
    return true;
  }
  function At(f, t = false) {
    t && (f = f.replace(/<[?].*[?]>/, ""));
    const e = new DOMParser().parseFromString(f, "application/xml"), r = Pt(e);
    if (r)
      throw new Error(r);
    return e;
  }
  function Pt(f) {
    var t;
    return (t = f.getElementsByTagName("parsererror")[0]) == null ? void 0 : t.textContent;
  }
  function Et(f) {
    return new XMLSerializer().serializeToString(f);
  }
  class nt {
    elements(t, e = null) {
      const r = [];
      for (let a = 0, n = t.childNodes.length; a < n; a++) {
        let u = t.childNodes.item(a);
        u.nodeType == 1 && (e == null || u.localName == e) && r.push(u);
      }
      return r;
    }
    element(t, e) {
      for (let r = 0, a = t.childNodes.length; r < a; r++) {
        let n = t.childNodes.item(r);
        if (n.nodeType == 1 && n.localName == e)
          return n;
      }
      return null;
    }
    elementAttr(t, e, r) {
      var a = this.element(t, e);
      return a ? this.attr(a, r) : void 0;
    }
    attr(t, e) {
      for (let r = 0, a = t.attributes.length; r < a; r++) {
        let n = t.attributes.item(r);
        if (n.localName == e)
          return n.value;
      }
      return null;
    }
    intAttr(t, e, r = null) {
      var a = this.attr(t, e);
      return a ? parseInt(a) : r;
    }
    hexAttr(t, e, r = null) {
      var a = this.attr(t, e);
      return a ? parseInt(a, 16) : r;
    }
    floatAttr(t, e, r = null) {
      var a = this.attr(t, e);
      return a ? parseFloat(a) : r;
    }
    boolAttr(t, e, r = null) {
      return Ct(this.attr(t, e), r);
    }
    lengthAttr(t, e, r = pe.Dxa) {
      return tt(this.attr(t, e), r);
    }
  }
  const z = new nt();
  class _e {
    constructor(t, e) {
      X(this, "_xmlDocument");
      X(this, "rels");
      this._package = t, this.path = e;
    }
    load() {
      return Promise.all([this._package.loadRelationships(this.path).then((t) => {
        this.rels = t;
      }), this._package.load(this.path).then((t) => {
        const e = this._package.parseXmlDocument(t);
        this._package.options.keepOrigin && (this._xmlDocument = e), this.parseXml(e.firstElementChild);
      })]);
    }
    save() {
      this._package.update(this.path, Et(this._xmlDocument));
    }
    parseXml(t) {
    }
  }
  const xt = { embedRegular: "regular", embedBold: "bold", embedItalic: "italic", embedBoldItalic: "boldItalic" };
  function Bt(f, t) {
    return t.elements(f).map((e) => zt(e, t));
  }
  function zt(f, t) {
    let e = { name: t.attr(f, "name"), embedFontRefs: [] };
    for (let r of t.elements(f))
      switch (r.localName) {
        case "family":
          e.family = t.attr(r, "val");
          break;
        case "altName":
          e.altName = t.attr(r, "val");
          break;
        case "embedRegular":
        case "embedBold":
        case "embedItalic":
        case "embedBoldItalic":
          e.embedFontRefs.push(Nt(r, t));
          break;
      }
    return e;
  }
  function Nt(f, t) {
    return { id: t.attr(f, "id"), key: t.attr(f, "fontKey"), type: xt[f.localName] };
  }
  class Tt extends _e {
    constructor() {
      super(...arguments);
      X(this, "fonts");
    }
    parseXml(t) {
      this.fonts = Bt(t, this._package.xmlParser);
    }
  }
  var at = typeof globalThis != "undefined" ? globalThis : typeof window != "undefined" ? window : typeof commonjsGlobal != "undefined" ? commonjsGlobal : typeof self != "undefined" ? self : {};
  function Re(f) {
    throw new Error('Could not dynamically require "' + f + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
  }
  var st = { exports: {} };
  /*!
  
      JSZip v3.9.1 - A JavaScript class for generating and reading zip files
      <http://stuartk.com/jszip>
  
      (c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>
      Dual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.
  
      JSZip uses the library pako released under the MIT license :
      https://github.com/nodeca/pako/blob/master/LICENSE
      */
  (function(f, t) {
    (function(e) {
      f.exports = e();
    })(function() {
      return function e(r, a, n) {
        function u(d, p) {
          if (!a[d]) {
            if (!r[d]) {
              var m = typeof Re == "function" && Re;
              if (!p && m)
                return m(d, true);
              if (l)
                return l(d, true);
              var _ = new Error("Cannot find module '" + d + "'");
              throw _.code = "MODULE_NOT_FOUND", _;
            }
            var c = a[d] = { exports: {} };
            r[d][0].call(c.exports, function(y) {
              var w = r[d][1][y];
              return u(w || y);
            }, c, c.exports, e, r, a, n);
          }
          return a[d].exports;
        }
        for (var l = typeof Re == "function" && Re, i = 0; i < n.length; i++)
          u(n[i]);
        return u;
      }({ 1: [function(e, r, a) {
        var n = e("./utils"), u = e("./support"), l = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
        a.encode = function(i) {
          for (var d, p, m, _, c, y, w, h2 = [], g = 0, b = i.length, C = b, N = n.getTypeOf(i) !== "string"; g < i.length; )
            C = b - g, m = N ? (d = i[g++], p = g < b ? i[g++] : 0, g < b ? i[g++] : 0) : (d = i.charCodeAt(g++), p = g < b ? i.charCodeAt(g++) : 0, g < b ? i.charCodeAt(g++) : 0), _ = d >> 2, c = (3 & d) << 4 | p >> 4, y = 1 < C ? (15 & p) << 2 | m >> 6 : 64, w = 2 < C ? 63 & m : 64, h2.push(l.charAt(_) + l.charAt(c) + l.charAt(y) + l.charAt(w));
          return h2.join("");
        }, a.decode = function(i) {
          var d, p, m, _, c, y, w = 0, h2 = 0, g = "data:";
          if (i.substr(0, g.length) === g)
            throw new Error("Invalid base64 input, it looks like a data url.");
          var b, C = 3 * (i = i.replace(/[^A-Za-z0-9\+\/\=]/g, "")).length / 4;
          if (i.charAt(i.length - 1) === l.charAt(64) && C--, i.charAt(i.length - 2) === l.charAt(64) && C--, C % 1 != 0)
            throw new Error("Invalid base64 input, bad content length.");
          for (b = u.uint8array ? new Uint8Array(0 | C) : new Array(0 | C); w < i.length; )
            d = l.indexOf(i.charAt(w++)) << 2 | (_ = l.indexOf(i.charAt(w++))) >> 4, p = (15 & _) << 4 | (c = l.indexOf(i.charAt(w++))) >> 2, m = (3 & c) << 6 | (y = l.indexOf(i.charAt(w++))), b[h2++] = d, c !== 64 && (b[h2++] = p), y !== 64 && (b[h2++] = m);
          return b;
        };
      }, { "./support": 30, "./utils": 32 }], 2: [function(e, r, a) {
        var n = e("./external"), u = e("./stream/DataWorker"), l = e("./stream/Crc32Probe"), i = e("./stream/DataLengthProbe");
        function d(p, m, _, c, y) {
          this.compressedSize = p, this.uncompressedSize = m, this.crc32 = _, this.compression = c, this.compressedContent = y;
        }
        d.prototype = { getContentWorker: function() {
          var p = new u(n.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new i("data_length")), m = this;
          return p.on("end", function() {
            if (this.streamInfo.data_length !== m.uncompressedSize)
              throw new Error("Bug : uncompressed data size mismatch");
          }), p;
        }, getCompressedWorker: function() {
          return new u(n.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize", this.compressedSize).withStreamInfo("uncompressedSize", this.uncompressedSize).withStreamInfo("crc32", this.crc32).withStreamInfo("compression", this.compression);
        } }, d.createWorkerFrom = function(p, m, _) {
          return p.pipe(new l()).pipe(new i("uncompressedSize")).pipe(m.compressWorker(_)).pipe(new i("compressedSize")).withStreamInfo("compression", m);
        }, r.exports = d;
      }, { "./external": 6, "./stream/Crc32Probe": 25, "./stream/DataLengthProbe": 26, "./stream/DataWorker": 27 }], 3: [function(e, r, a) {
        var n = e("./stream/GenericWorker");
        a.STORE = { magic: "\0\0", compressWorker: function(u) {
          return new n("STORE compression");
        }, uncompressWorker: function() {
          return new n("STORE decompression");
        } }, a.DEFLATE = e("./flate");
      }, { "./flate": 7, "./stream/GenericWorker": 28 }], 4: [function(e, r, a) {
        var n = e("./utils"), u = function() {
          for (var l, i = [], d = 0; d < 256; d++) {
            l = d;
            for (var p = 0; p < 8; p++)
              l = 1 & l ? 3988292384 ^ l >>> 1 : l >>> 1;
            i[d] = l;
          }
          return i;
        }();
        r.exports = function(l, i) {
          return l !== void 0 && l.length ? n.getTypeOf(l) !== "string" ? function(d, p, m, _) {
            var c = u, y = _ + m;
            d ^= -1;
            for (var w = _; w < y; w++)
              d = d >>> 8 ^ c[255 & (d ^ p[w])];
            return -1 ^ d;
          }(0 | i, l, l.length, 0) : function(d, p, m, _) {
            var c = u, y = _ + m;
            d ^= -1;
            for (var w = _; w < y; w++)
              d = d >>> 8 ^ c[255 & (d ^ p.charCodeAt(w))];
            return -1 ^ d;
          }(0 | i, l, l.length, 0) : 0;
        };
      }, { "./utils": 32 }], 5: [function(e, r, a) {
        a.base64 = false, a.binary = false, a.dir = false, a.createFolders = true, a.date = null, a.compression = null, a.compressionOptions = null, a.comment = null, a.unixPermissions = null, a.dosPermissions = null;
      }, {}], 6: [function(e, r, a) {
        var n = null;
        n = typeof Promise != "undefined" ? Promise : e("lie"), r.exports = { Promise: n };
      }, { lie: 37 }], 7: [function(e, r, a) {
        var n = typeof Uint8Array != "undefined" && typeof Uint16Array != "undefined" && typeof Uint32Array != "undefined", u = e("pako"), l = e("./utils"), i = e("./stream/GenericWorker"), d = n ? "uint8array" : "array";
        function p(m, _) {
          i.call(this, "FlateWorker/" + m), this._pako = null, this._pakoAction = m, this._pakoOptions = _, this.meta = {};
        }
        a.magic = "\b\0", l.inherits(p, i), p.prototype.processChunk = function(m) {
          this.meta = m.meta, this._pako === null && this._createPako(), this._pako.push(l.transformTo(d, m.data), false);
        }, p.prototype.flush = function() {
          i.prototype.flush.call(this), this._pako === null && this._createPako(), this._pako.push([], true);
        }, p.prototype.cleanUp = function() {
          i.prototype.cleanUp.call(this), this._pako = null;
        }, p.prototype._createPako = function() {
          this._pako = new u[this._pakoAction]({ raw: true, level: this._pakoOptions.level || -1 });
          var m = this;
          this._pako.onData = function(_) {
            m.push({ data: _, meta: m.meta });
          };
        }, a.compressWorker = function(m) {
          return new p("Deflate", m);
        }, a.uncompressWorker = function() {
          return new p("Inflate", {});
        };
      }, { "./stream/GenericWorker": 28, "./utils": 32, pako: 38 }], 8: [function(e, r, a) {
        function n(c, y) {
          var w, h2 = "";
          for (w = 0; w < y; w++)
            h2 += String.fromCharCode(255 & c), c >>>= 8;
          return h2;
        }
        function u(c, y, w, h2, g, b) {
          var C, N, P = c.file, U = c.compression, I = b !== d.utf8encode, H = l.transformTo("string", b(P.name)), T = l.transformTo("string", d.utf8encode(P.name)), V = P.comment, ee = l.transformTo("string", b(V)), S = l.transformTo("string", d.utf8encode(V)), R = T.length !== P.name.length, o = S.length !== V.length, D = "", re = "", M = "", ne = P.dir, W = P.date, te = { crc32: 0, compressedSize: 0, uncompressedSize: 0 };
          y && !w || (te.crc32 = c.crc32, te.compressedSize = c.compressedSize, te.uncompressedSize = c.uncompressedSize);
          var B = 0;
          y && (B |= 8), I || !R && !o || (B |= 2048);
          var x = 0, Q = 0;
          ne && (x |= 16), g === "UNIX" ? (Q = 798, x |= function(G, he) {
            var be = G;
            return G || (be = he ? 16893 : 33204), (65535 & be) << 16;
          }(P.unixPermissions, ne)) : (Q = 20, x |= function(G) {
            return 63 & (G || 0);
          }(P.dosPermissions)), C = W.getUTCHours(), C <<= 6, C |= W.getUTCMinutes(), C <<= 5, C |= W.getUTCSeconds() / 2, N = W.getUTCFullYear() - 1980, N <<= 4, N |= W.getUTCMonth() + 1, N <<= 5, N |= W.getUTCDate(), R && (re = n(1, 1) + n(p(H), 4) + T, D += "up" + n(re.length, 2) + re), o && (M = n(1, 1) + n(p(ee), 4) + S, D += "uc" + n(M.length, 2) + M);
          var K = "";
          return K += `
\0`, K += n(B, 2), K += U.magic, K += n(C, 2), K += n(N, 2), K += n(te.crc32, 4), K += n(te.compressedSize, 4), K += n(te.uncompressedSize, 4), K += n(H.length, 2), K += n(D.length, 2), { fileRecord: m.LOCAL_FILE_HEADER + K + H + D, dirRecord: m.CENTRAL_FILE_HEADER + n(Q, 2) + K + n(ee.length, 2) + "\0\0\0\0" + n(x, 4) + n(h2, 4) + H + D + ee };
        }
        var l = e("../utils"), i = e("../stream/GenericWorker"), d = e("../utf8"), p = e("../crc32"), m = e("../signature");
        function _(c, y, w, h2) {
          i.call(this, "ZipFileWorker"), this.bytesWritten = 0, this.zipComment = y, this.zipPlatform = w, this.encodeFileName = h2, this.streamFiles = c, this.accumulate = false, this.contentBuffer = [], this.dirRecords = [], this.currentSourceOffset = 0, this.entriesCount = 0, this.currentFile = null, this._sources = [];
        }
        l.inherits(_, i), _.prototype.push = function(c) {
          var y = c.meta.percent || 0, w = this.entriesCount, h2 = this._sources.length;
          this.accumulate ? this.contentBuffer.push(c) : (this.bytesWritten += c.data.length, i.prototype.push.call(this, { data: c.data, meta: { currentFile: this.currentFile, percent: w ? (y + 100 * (w - h2 - 1)) / w : 100 } }));
        }, _.prototype.openedSource = function(c) {
          this.currentSourceOffset = this.bytesWritten, this.currentFile = c.file.name;
          var y = this.streamFiles && !c.file.dir;
          if (y) {
            var w = u(c, y, false, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
            this.push({ data: w.fileRecord, meta: { percent: 0 } });
          } else
            this.accumulate = true;
        }, _.prototype.closedSource = function(c) {
          this.accumulate = false;
          var y = this.streamFiles && !c.file.dir, w = u(c, y, true, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
          if (this.dirRecords.push(w.dirRecord), y)
            this.push({ data: function(h2) {
              return m.DATA_DESCRIPTOR + n(h2.crc32, 4) + n(h2.compressedSize, 4) + n(h2.uncompressedSize, 4);
            }(c), meta: { percent: 100 } });
          else
            for (this.push({ data: w.fileRecord, meta: { percent: 0 } }); this.contentBuffer.length; )
              this.push(this.contentBuffer.shift());
          this.currentFile = null;
        }, _.prototype.flush = function() {
          for (var c = this.bytesWritten, y = 0; y < this.dirRecords.length; y++)
            this.push({ data: this.dirRecords[y], meta: { percent: 100 } });
          var w = this.bytesWritten - c, h2 = function(g, b, C, N, P) {
            var U = l.transformTo("string", P(N));
            return m.CENTRAL_DIRECTORY_END + "\0\0\0\0" + n(g, 2) + n(g, 2) + n(b, 4) + n(C, 4) + n(U.length, 2) + U;
          }(this.dirRecords.length, w, c, this.zipComment, this.encodeFileName);
          this.push({ data: h2, meta: { percent: 100 } });
        }, _.prototype.prepareNextSource = function() {
          this.previous = this._sources.shift(), this.openedSource(this.previous.streamInfo), this.isPaused ? this.previous.pause() : this.previous.resume();
        }, _.prototype.registerPrevious = function(c) {
          this._sources.push(c);
          var y = this;
          return c.on("data", function(w) {
            y.processChunk(w);
          }), c.on("end", function() {
            y.closedSource(y.previous.streamInfo), y._sources.length ? y.prepareNextSource() : y.end();
          }), c.on("error", function(w) {
            y.error(w);
          }), this;
        }, _.prototype.resume = function() {
          return !!i.prototype.resume.call(this) && (!this.previous && this._sources.length ? (this.prepareNextSource(), true) : this.previous || this._sources.length || this.generatedError ? void 0 : (this.end(), true));
        }, _.prototype.error = function(c) {
          var y = this._sources;
          if (!i.prototype.error.call(this, c))
            return false;
          for (var w = 0; w < y.length; w++)
            try {
              y[w].error(c);
            } catch {
            }
          return true;
        }, _.prototype.lock = function() {
          i.prototype.lock.call(this);
          for (var c = this._sources, y = 0; y < c.length; y++)
            c[y].lock();
        }, r.exports = _;
      }, { "../crc32": 4, "../signature": 23, "../stream/GenericWorker": 28, "../utf8": 31, "../utils": 32 }], 9: [function(e, r, a) {
        var n = e("../compressions"), u = e("./ZipFileWorker");
        a.generateWorker = function(l, i, d) {
          var p = new u(i.streamFiles, d, i.platform, i.encodeFileName), m = 0;
          try {
            l.forEach(function(_, c) {
              m++;
              var y = function(b, C) {
                var N = b || C, P = n[N];
                if (!P)
                  throw new Error(N + " is not a valid compression method !");
                return P;
              }(c.options.compression, i.compression), w = c.options.compressionOptions || i.compressionOptions || {}, h2 = c.dir, g = c.date;
              c._compressWorker(y, w).withStreamInfo("file", { name: _, dir: h2, date: g, comment: c.comment || "", unixPermissions: c.unixPermissions, dosPermissions: c.dosPermissions }).pipe(p);
            }), p.entriesCount = m;
          } catch (_) {
            p.error(_);
          }
          return p;
        };
      }, { "../compressions": 3, "./ZipFileWorker": 8 }], 10: [function(e, r, a) {
        function n() {
          if (!(this instanceof n))
            return new n();
          if (arguments.length)
            throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");
          this.files = /* @__PURE__ */ Object.create(null), this.comment = null, this.root = "", this.clone = function() {
            var u = new n();
            for (var l in this)
              typeof this[l] != "function" && (u[l] = this[l]);
            return u;
          };
        }
        (n.prototype = e("./object")).loadAsync = e("./load"), n.support = e("./support"), n.defaults = e("./defaults"), n.version = "3.9.1", n.loadAsync = function(u, l) {
          return new n().loadAsync(u, l);
        }, n.external = e("./external"), r.exports = n;
      }, { "./defaults": 5, "./external": 6, "./load": 11, "./object": 15, "./support": 30 }], 11: [function(e, r, a) {
        var n = e("./utils"), u = e("./external"), l = e("./utf8"), i = e("./zipEntries"), d = e("./stream/Crc32Probe"), p = e("./nodejsUtils");
        function m(_) {
          return new u.Promise(function(c, y) {
            var w = _.decompressed.getContentWorker().pipe(new d());
            w.on("error", function(h2) {
              y(h2);
            }).on("end", function() {
              w.streamInfo.crc32 !== _.decompressed.crc32 ? y(new Error("Corrupted zip : CRC32 mismatch")) : c();
            }).resume();
          });
        }
        r.exports = function(_, c) {
          var y = this;
          return c = n.extend(c || {}, { base64: false, checkCRC32: false, optimizedBinaryString: false, createFolders: false, decodeFileName: l.utf8decode }), p.isNode && p.isStream(_) ? u.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")) : n.prepareContent("the loaded zip file", _, true, c.optimizedBinaryString, c.base64).then(function(w) {
            var h2 = new i(c);
            return h2.load(w), h2;
          }).then(function(w) {
            var h2 = [u.Promise.resolve(w)], g = w.files;
            if (c.checkCRC32)
              for (var b = 0; b < g.length; b++)
                h2.push(m(g[b]));
            return u.Promise.all(h2);
          }).then(function(w) {
            for (var h2 = w.shift(), g = h2.files, b = 0; b < g.length; b++) {
              var C = g[b], N = C.fileNameStr, P = n.resolve(C.fileNameStr);
              y.file(P, C.decompressed, { binary: true, optimizedBinaryString: true, date: C.date, dir: C.dir, comment: C.fileCommentStr.length ? C.fileCommentStr : null, unixPermissions: C.unixPermissions, dosPermissions: C.dosPermissions, createFolders: c.createFolders }), C.dir || (y.file(P).unsafeOriginalName = N);
            }
            return h2.zipComment.length && (y.comment = h2.zipComment), y;
          });
        };
      }, { "./external": 6, "./nodejsUtils": 14, "./stream/Crc32Probe": 25, "./utf8": 31, "./utils": 32, "./zipEntries": 33 }], 12: [function(e, r, a) {
        var n = e("../utils"), u = e("../stream/GenericWorker");
        function l(i, d) {
          u.call(this, "Nodejs stream input adapter for " + i), this._upstreamEnded = false, this._bindStream(d);
        }
        n.inherits(l, u), l.prototype._bindStream = function(i) {
          var d = this;
          (this._stream = i).pause(), i.on("data", function(p) {
            d.push({ data: p, meta: { percent: 0 } });
          }).on("error", function(p) {
            d.isPaused ? this.generatedError = p : d.error(p);
          }).on("end", function() {
            d.isPaused ? d._upstreamEnded = true : d.end();
          });
        }, l.prototype.pause = function() {
          return !!u.prototype.pause.call(this) && (this._stream.pause(), true);
        }, l.prototype.resume = function() {
          return !!u.prototype.resume.call(this) && (this._upstreamEnded ? this.end() : this._stream.resume(), true);
        }, r.exports = l;
      }, { "../stream/GenericWorker": 28, "../utils": 32 }], 13: [function(e, r, a) {
        var n = e("readable-stream").Readable;
        function u(l, i, d) {
          n.call(this, i), this._helper = l;
          var p = this;
          l.on("data", function(m, _) {
            p.push(m) || p._helper.pause(), d && d(_);
          }).on("error", function(m) {
            p.emit("error", m);
          }).on("end", function() {
            p.push(null);
          });
        }
        e("../utils").inherits(u, n), u.prototype._read = function() {
          this._helper.resume();
        }, r.exports = u;
      }, { "../utils": 32, "readable-stream": 16 }], 14: [function(e, r, a) {
        r.exports = { isNode: typeof Buffer != "undefined", newBufferFrom: function(n, u) {
          if (Buffer.from && Buffer.from !== Uint8Array.from)
            return Buffer.from(n, u);
          if (typeof n == "number")
            throw new Error('The "data" argument must not be a number');
          return new Buffer(n, u);
        }, allocBuffer: function(n) {
          if (Buffer.alloc)
            return Buffer.alloc(n);
          var u = new Buffer(n);
          return u.fill(0), u;
        }, isBuffer: function(n) {
          return Buffer.isBuffer(n);
        }, isStream: function(n) {
          return n && typeof n.on == "function" && typeof n.pause == "function" && typeof n.resume == "function";
        } };
      }, {}], 15: [function(e, r, a) {
        function n(P, U, I) {
          var H, T = l.getTypeOf(U), V = l.extend(I || {}, p);
          V.date = V.date || new Date(), V.compression !== null && (V.compression = V.compression.toUpperCase()), typeof V.unixPermissions == "string" && (V.unixPermissions = parseInt(V.unixPermissions, 8)), V.unixPermissions && 16384 & V.unixPermissions && (V.dir = true), V.dosPermissions && 16 & V.dosPermissions && (V.dir = true), V.dir && (P = g(P)), V.createFolders && (H = h2(P)) && b.call(this, H, true);
          var ee = T === "string" && V.binary === false && V.base64 === false;
          I && I.binary !== void 0 || (V.binary = !ee), (U instanceof m && U.uncompressedSize === 0 || V.dir || !U || U.length === 0) && (V.base64 = false, V.binary = true, U = "", V.compression = "STORE", T = "string");
          var S = null;
          S = U instanceof m || U instanceof i ? U : y.isNode && y.isStream(U) ? new w(P, U) : l.prepareContent(P, U, V.binary, V.optimizedBinaryString, V.base64);
          var R = new _(P, S, V);
          this.files[P] = R;
        }
        var u = e("./utf8"), l = e("./utils"), i = e("./stream/GenericWorker"), d = e("./stream/StreamHelper"), p = e("./defaults"), m = e("./compressedObject"), _ = e("./zipObject"), c = e("./generate"), y = e("./nodejsUtils"), w = e("./nodejs/NodejsStreamInputAdapter"), h2 = function(P) {
          P.slice(-1) === "/" && (P = P.substring(0, P.length - 1));
          var U = P.lastIndexOf("/");
          return 0 < U ? P.substring(0, U) : "";
        }, g = function(P) {
          return P.slice(-1) !== "/" && (P += "/"), P;
        }, b = function(P, U) {
          return U = U !== void 0 ? U : p.createFolders, P = g(P), this.files[P] || n.call(this, P, null, { dir: true, createFolders: U }), this.files[P];
        };
        function C(P) {
          return Object.prototype.toString.call(P) === "[object RegExp]";
        }
        var N = { load: function() {
          throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
        }, forEach: function(P) {
          var U, I, H;
          for (U in this.files)
            H = this.files[U], (I = U.slice(this.root.length, U.length)) && U.slice(0, this.root.length) === this.root && P(I, H);
        }, filter: function(P) {
          var U = [];
          return this.forEach(function(I, H) {
            P(I, H) && U.push(H);
          }), U;
        }, file: function(P, U, I) {
          if (arguments.length !== 1)
            return P = this.root + P, n.call(this, P, U, I), this;
          if (C(P)) {
            var H = P;
            return this.filter(function(V, ee) {
              return !ee.dir && H.test(V);
            });
          }
          var T = this.files[this.root + P];
          return T && !T.dir ? T : null;
        }, folder: function(P) {
          if (!P)
            return this;
          if (C(P))
            return this.filter(function(T, V) {
              return V.dir && P.test(T);
            });
          var U = this.root + P, I = b.call(this, U), H = this.clone();
          return H.root = I.name, H;
        }, remove: function(P) {
          P = this.root + P;
          var U = this.files[P];
          if (U || (P.slice(-1) !== "/" && (P += "/"), U = this.files[P]), U && !U.dir)
            delete this.files[P];
          else
            for (var I = this.filter(function(T, V) {
              return V.name.slice(0, P.length) === P;
            }), H = 0; H < I.length; H++)
              delete this.files[I[H].name];
          return this;
        }, generate: function(P) {
          throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
        }, generateInternalStream: function(P) {
          var U, I = {};
          try {
            if ((I = l.extend(P || {}, { streamFiles: false, compression: "STORE", compressionOptions: null, type: "", platform: "DOS", comment: null, mimeType: "application/zip", encodeFileName: u.utf8encode })).type = I.type.toLowerCase(), I.compression = I.compression.toUpperCase(), I.type === "binarystring" && (I.type = "string"), !I.type)
              throw new Error("No output type specified.");
            l.checkSupport(I.type), I.platform !== "darwin" && I.platform !== "freebsd" && I.platform !== "linux" && I.platform !== "sunos" || (I.platform = "UNIX"), I.platform === "win32" && (I.platform = "DOS");
            var H = I.comment || this.comment || "";
            U = c.generateWorker(this, I, H);
          } catch (T) {
            (U = new i("error")).error(T);
          }
          return new d(U, I.type || "string", I.mimeType);
        }, generateAsync: function(P, U) {
          return this.generateInternalStream(P).accumulate(U);
        }, generateNodeStream: function(P, U) {
          return (P = P || {}).type || (P.type = "nodebuffer"), this.generateInternalStream(P).toNodejsStream(U);
        } };
        r.exports = N;
      }, { "./compressedObject": 2, "./defaults": 5, "./generate": 9, "./nodejs/NodejsStreamInputAdapter": 12, "./nodejsUtils": 14, "./stream/GenericWorker": 28, "./stream/StreamHelper": 29, "./utf8": 31, "./utils": 32, "./zipObject": 35 }], 16: [function(e, r, a) {
        r.exports = e("stream");
      }, { stream: void 0 }], 17: [function(e, r, a) {
        var n = e("./DataReader");
        function u(l) {
          n.call(this, l);
          for (var i = 0; i < this.data.length; i++)
            l[i] = 255 & l[i];
        }
        e("../utils").inherits(u, n), u.prototype.byteAt = function(l) {
          return this.data[this.zero + l];
        }, u.prototype.lastIndexOfSignature = function(l) {
          for (var i = l.charCodeAt(0), d = l.charCodeAt(1), p = l.charCodeAt(2), m = l.charCodeAt(3), _ = this.length - 4; 0 <= _; --_)
            if (this.data[_] === i && this.data[_ + 1] === d && this.data[_ + 2] === p && this.data[_ + 3] === m)
              return _ - this.zero;
          return -1;
        }, u.prototype.readAndCheckSignature = function(l) {
          var i = l.charCodeAt(0), d = l.charCodeAt(1), p = l.charCodeAt(2), m = l.charCodeAt(3), _ = this.readData(4);
          return i === _[0] && d === _[1] && p === _[2] && m === _[3];
        }, u.prototype.readData = function(l) {
          if (this.checkOffset(l), l === 0)
            return [];
          var i = this.data.slice(this.zero + this.index, this.zero + this.index + l);
          return this.index += l, i;
        }, r.exports = u;
      }, { "../utils": 32, "./DataReader": 18 }], 18: [function(e, r, a) {
        var n = e("../utils");
        function u(l) {
          this.data = l, this.length = l.length, this.index = 0, this.zero = 0;
        }
        u.prototype = { checkOffset: function(l) {
          this.checkIndex(this.index + l);
        }, checkIndex: function(l) {
          if (this.length < this.zero + l || l < 0)
            throw new Error("End of data reached (data length = " + this.length + ", asked index = " + l + "). Corrupted zip ?");
        }, setIndex: function(l) {
          this.checkIndex(l), this.index = l;
        }, skip: function(l) {
          this.setIndex(this.index + l);
        }, byteAt: function(l) {
        }, readInt: function(l) {
          var i, d = 0;
          for (this.checkOffset(l), i = this.index + l - 1; i >= this.index; i--)
            d = (d << 8) + this.byteAt(i);
          return this.index += l, d;
        }, readString: function(l) {
          return n.transformTo("string", this.readData(l));
        }, readData: function(l) {
        }, lastIndexOfSignature: function(l) {
        }, readAndCheckSignature: function(l) {
        }, readDate: function() {
          var l = this.readInt(4);
          return new Date(Date.UTC(1980 + (l >> 25 & 127), (l >> 21 & 15) - 1, l >> 16 & 31, l >> 11 & 31, l >> 5 & 63, (31 & l) << 1));
        } }, r.exports = u;
      }, { "../utils": 32 }], 19: [function(e, r, a) {
        var n = e("./Uint8ArrayReader");
        function u(l) {
          n.call(this, l);
        }
        e("../utils").inherits(u, n), u.prototype.readData = function(l) {
          this.checkOffset(l);
          var i = this.data.slice(this.zero + this.index, this.zero + this.index + l);
          return this.index += l, i;
        }, r.exports = u;
      }, { "../utils": 32, "./Uint8ArrayReader": 21 }], 20: [function(e, r, a) {
        var n = e("./DataReader");
        function u(l) {
          n.call(this, l);
        }
        e("../utils").inherits(u, n), u.prototype.byteAt = function(l) {
          return this.data.charCodeAt(this.zero + l);
        }, u.prototype.lastIndexOfSignature = function(l) {
          return this.data.lastIndexOf(l) - this.zero;
        }, u.prototype.readAndCheckSignature = function(l) {
          return l === this.readData(4);
        }, u.prototype.readData = function(l) {
          this.checkOffset(l);
          var i = this.data.slice(this.zero + this.index, this.zero + this.index + l);
          return this.index += l, i;
        }, r.exports = u;
      }, { "../utils": 32, "./DataReader": 18 }], 21: [function(e, r, a) {
        var n = e("./ArrayReader");
        function u(l) {
          n.call(this, l);
        }
        e("../utils").inherits(u, n), u.prototype.readData = function(l) {
          if (this.checkOffset(l), l === 0)
            return new Uint8Array(0);
          var i = this.data.subarray(this.zero + this.index, this.zero + this.index + l);
          return this.index += l, i;
        }, r.exports = u;
      }, { "../utils": 32, "./ArrayReader": 17 }], 22: [function(e, r, a) {
        var n = e("../utils"), u = e("../support"), l = e("./ArrayReader"), i = e("./StringReader"), d = e("./NodeBufferReader"), p = e("./Uint8ArrayReader");
        r.exports = function(m) {
          var _ = n.getTypeOf(m);
          return n.checkSupport(_), _ !== "string" || u.uint8array ? _ === "nodebuffer" ? new d(m) : u.uint8array ? new p(n.transformTo("uint8array", m)) : new l(n.transformTo("array", m)) : new i(m);
        };
      }, { "../support": 30, "../utils": 32, "./ArrayReader": 17, "./NodeBufferReader": 19, "./StringReader": 20, "./Uint8ArrayReader": 21 }], 23: [function(e, r, a) {
        a.LOCAL_FILE_HEADER = "PK", a.CENTRAL_FILE_HEADER = "PK", a.CENTRAL_DIRECTORY_END = "PK", a.ZIP64_CENTRAL_DIRECTORY_LOCATOR = "PK\x07", a.ZIP64_CENTRAL_DIRECTORY_END = "PK", a.DATA_DESCRIPTOR = "PK\x07\b";
      }, {}], 24: [function(e, r, a) {
        var n = e("./GenericWorker"), u = e("../utils");
        function l(i) {
          n.call(this, "ConvertWorker to " + i), this.destType = i;
        }
        u.inherits(l, n), l.prototype.processChunk = function(i) {
          this.push({ data: u.transformTo(this.destType, i.data), meta: i.meta });
        }, r.exports = l;
      }, { "../utils": 32, "./GenericWorker": 28 }], 25: [function(e, r, a) {
        var n = e("./GenericWorker"), u = e("../crc32");
        function l() {
          n.call(this, "Crc32Probe"), this.withStreamInfo("crc32", 0);
        }
        e("../utils").inherits(l, n), l.prototype.processChunk = function(i) {
          this.streamInfo.crc32 = u(i.data, this.streamInfo.crc32 || 0), this.push(i);
        }, r.exports = l;
      }, { "../crc32": 4, "../utils": 32, "./GenericWorker": 28 }], 26: [function(e, r, a) {
        var n = e("../utils"), u = e("./GenericWorker");
        function l(i) {
          u.call(this, "DataLengthProbe for " + i), this.propName = i, this.withStreamInfo(i, 0);
        }
        n.inherits(l, u), l.prototype.processChunk = function(i) {
          if (i) {
            var d = this.streamInfo[this.propName] || 0;
            this.streamInfo[this.propName] = d + i.data.length;
          }
          u.prototype.processChunk.call(this, i);
        }, r.exports = l;
      }, { "../utils": 32, "./GenericWorker": 28 }], 27: [function(e, r, a) {
        var n = e("../utils"), u = e("./GenericWorker");
        function l(i) {
          u.call(this, "DataWorker");
          var d = this;
          this.dataIsReady = false, this.index = 0, this.max = 0, this.data = null, this.type = "", this._tickScheduled = false, i.then(function(p) {
            d.dataIsReady = true, d.data = p, d.max = p && p.length || 0, d.type = n.getTypeOf(p), d.isPaused || d._tickAndRepeat();
          }, function(p) {
            d.error(p);
          });
        }
        n.inherits(l, u), l.prototype.cleanUp = function() {
          u.prototype.cleanUp.call(this), this.data = null;
        }, l.prototype.resume = function() {
          return !!u.prototype.resume.call(this) && (!this._tickScheduled && this.dataIsReady && (this._tickScheduled = true, n.delay(this._tickAndRepeat, [], this)), true);
        }, l.prototype._tickAndRepeat = function() {
          this._tickScheduled = false, this.isPaused || this.isFinished || (this._tick(), this.isFinished || (n.delay(this._tickAndRepeat, [], this), this._tickScheduled = true));
        }, l.prototype._tick = function() {
          if (this.isPaused || this.isFinished)
            return false;
          var i = null, d = Math.min(this.max, this.index + 16384);
          if (this.index >= this.max)
            return this.end();
          switch (this.type) {
            case "string":
              i = this.data.substring(this.index, d);
              break;
            case "uint8array":
              i = this.data.subarray(this.index, d);
              break;
            case "array":
            case "nodebuffer":
              i = this.data.slice(this.index, d);
          }
          return this.index = d, this.push({ data: i, meta: { percent: this.max ? this.index / this.max * 100 : 0 } });
        }, r.exports = l;
      }, { "../utils": 32, "./GenericWorker": 28 }], 28: [function(e, r, a) {
        function n(u) {
          this.name = u || "default", this.streamInfo = {}, this.generatedError = null, this.extraStreamInfo = {}, this.isPaused = true, this.isFinished = false, this.isLocked = false, this._listeners = { data: [], end: [], error: [] }, this.previous = null;
        }
        n.prototype = { push: function(u) {
          this.emit("data", u);
        }, end: function() {
          if (this.isFinished)
            return false;
          this.flush();
          try {
            this.emit("end"), this.cleanUp(), this.isFinished = true;
          } catch (u) {
            this.emit("error", u);
          }
          return true;
        }, error: function(u) {
          return !this.isFinished && (this.isPaused ? this.generatedError = u : (this.isFinished = true, this.emit("error", u), this.previous && this.previous.error(u), this.cleanUp()), true);
        }, on: function(u, l) {
          return this._listeners[u].push(l), this;
        }, cleanUp: function() {
          this.streamInfo = this.generatedError = this.extraStreamInfo = null, this._listeners = [];
        }, emit: function(u, l) {
          if (this._listeners[u])
            for (var i = 0; i < this._listeners[u].length; i++)
              this._listeners[u][i].call(this, l);
        }, pipe: function(u) {
          return u.registerPrevious(this);
        }, registerPrevious: function(u) {
          if (this.isLocked)
            throw new Error("The stream '" + this + "' has already been used.");
          this.streamInfo = u.streamInfo, this.mergeStreamInfo(), this.previous = u;
          var l = this;
          return u.on("data", function(i) {
            l.processChunk(i);
          }), u.on("end", function() {
            l.end();
          }), u.on("error", function(i) {
            l.error(i);
          }), this;
        }, pause: function() {
          return !this.isPaused && !this.isFinished && (this.isPaused = true, this.previous && this.previous.pause(), true);
        }, resume: function() {
          if (!this.isPaused || this.isFinished)
            return false;
          var u = this.isPaused = false;
          return this.generatedError && (this.error(this.generatedError), u = true), this.previous && this.previous.resume(), !u;
        }, flush: function() {
        }, processChunk: function(u) {
          this.push(u);
        }, withStreamInfo: function(u, l) {
          return this.extraStreamInfo[u] = l, this.mergeStreamInfo(), this;
        }, mergeStreamInfo: function() {
          for (var u in this.extraStreamInfo)
            this.extraStreamInfo.hasOwnProperty(u) && (this.streamInfo[u] = this.extraStreamInfo[u]);
        }, lock: function() {
          if (this.isLocked)
            throw new Error("The stream '" + this + "' has already been used.");
          this.isLocked = true, this.previous && this.previous.lock();
        }, toString: function() {
          var u = "Worker " + this.name;
          return this.previous ? this.previous + " -> " + u : u;
        } }, r.exports = n;
      }, {}], 29: [function(e, r, a) {
        var n = e("../utils"), u = e("./ConvertWorker"), l = e("./GenericWorker"), i = e("../base64"), d = e("../support"), p = e("../external"), m = null;
        if (d.nodestream)
          try {
            m = e("../nodejs/NodejsStreamOutputAdapter");
          } catch {
          }
        function _(y, w) {
          return new p.Promise(function(h2, g) {
            var b = [], C = y._internalType, N = y._outputType, P = y._mimeType;
            y.on("data", function(U, I) {
              b.push(U), w && w(I);
            }).on("error", function(U) {
              b = [], g(U);
            }).on("end", function() {
              try {
                var U = function(I, H, T) {
                  switch (I) {
                    case "blob":
                      return n.newBlob(n.transformTo("arraybuffer", H), T);
                    case "base64":
                      return i.encode(H);
                    default:
                      return n.transformTo(I, H);
                  }
                }(N, function(I, H) {
                  var T, V = 0, ee = null, S = 0;
                  for (T = 0; T < H.length; T++)
                    S += H[T].length;
                  switch (I) {
                    case "string":
                      return H.join("");
                    case "array":
                      return Array.prototype.concat.apply([], H);
                    case "uint8array":
                      for (ee = new Uint8Array(S), T = 0; T < H.length; T++)
                        ee.set(H[T], V), V += H[T].length;
                      return ee;
                    case "nodebuffer":
                      return Buffer.concat(H);
                    default:
                      throw new Error("concat : unsupported type '" + I + "'");
                  }
                }(C, b), P);
                h2(U);
              } catch (I) {
                g(I);
              }
              b = [];
            }).resume();
          });
        }
        function c(y, w, h2) {
          var g = w;
          switch (w) {
            case "blob":
            case "arraybuffer":
              g = "uint8array";
              break;
            case "base64":
              g = "string";
          }
          try {
            this._internalType = g, this._outputType = w, this._mimeType = h2, n.checkSupport(g), this._worker = y.pipe(new u(g)), y.lock();
          } catch (b) {
            this._worker = new l("error"), this._worker.error(b);
          }
        }
        c.prototype = { accumulate: function(y) {
          return _(this, y);
        }, on: function(y, w) {
          var h2 = this;
          return y === "data" ? this._worker.on(y, function(g) {
            w.call(h2, g.data, g.meta);
          }) : this._worker.on(y, function() {
            n.delay(w, arguments, h2);
          }), this;
        }, resume: function() {
          return n.delay(this._worker.resume, [], this._worker), this;
        }, pause: function() {
          return this._worker.pause(), this;
        }, toNodejsStream: function(y) {
          if (n.checkSupport("nodestream"), this._outputType !== "nodebuffer")
            throw new Error(this._outputType + " is not supported by this method");
          return new m(this, { objectMode: this._outputType !== "nodebuffer" }, y);
        } }, r.exports = c;
      }, { "../base64": 1, "../external": 6, "../nodejs/NodejsStreamOutputAdapter": 13, "../support": 30, "../utils": 32, "./ConvertWorker": 24, "./GenericWorker": 28 }], 30: [function(e, r, a) {
        if (a.base64 = true, a.array = true, a.string = true, a.arraybuffer = typeof ArrayBuffer != "undefined" && typeof Uint8Array != "undefined", a.nodebuffer = typeof Buffer != "undefined", a.uint8array = typeof Uint8Array != "undefined", typeof ArrayBuffer == "undefined")
          a.blob = false;
        else {
          var n = new ArrayBuffer(0);
          try {
            a.blob = new Blob([n], { type: "application/zip" }).size === 0;
          } catch {
            try {
              var u = new (self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder)();
              u.append(n), a.blob = u.getBlob("application/zip").size === 0;
            } catch {
              a.blob = false;
            }
          }
        }
        try {
          a.nodestream = !!e("readable-stream").Readable;
        } catch {
          a.nodestream = false;
        }
      }, { "readable-stream": 16 }], 31: [function(e, r, a) {
        for (var n = e("./utils"), u = e("./support"), l = e("./nodejsUtils"), i = e("./stream/GenericWorker"), d = new Array(256), p = 0; p < 256; p++)
          d[p] = 252 <= p ? 6 : 248 <= p ? 5 : 240 <= p ? 4 : 224 <= p ? 3 : 192 <= p ? 2 : 1;
        d[254] = d[254] = 1;
        function m() {
          i.call(this, "utf-8 decode"), this.leftOver = null;
        }
        function _() {
          i.call(this, "utf-8 encode");
        }
        a.utf8encode = function(c) {
          return u.nodebuffer ? l.newBufferFrom(c, "utf-8") : function(y) {
            var w, h2, g, b, C, N = y.length, P = 0;
            for (b = 0; b < N; b++)
              (64512 & (h2 = y.charCodeAt(b))) == 55296 && b + 1 < N && (64512 & (g = y.charCodeAt(b + 1))) == 56320 && (h2 = 65536 + (h2 - 55296 << 10) + (g - 56320), b++), P += h2 < 128 ? 1 : h2 < 2048 ? 2 : h2 < 65536 ? 3 : 4;
            for (w = u.uint8array ? new Uint8Array(P) : new Array(P), b = C = 0; C < P; b++)
              (64512 & (h2 = y.charCodeAt(b))) == 55296 && b + 1 < N && (64512 & (g = y.charCodeAt(b + 1))) == 56320 && (h2 = 65536 + (h2 - 55296 << 10) + (g - 56320), b++), h2 < 128 ? w[C++] = h2 : (h2 < 2048 ? w[C++] = 192 | h2 >>> 6 : (h2 < 65536 ? w[C++] = 224 | h2 >>> 12 : (w[C++] = 240 | h2 >>> 18, w[C++] = 128 | h2 >>> 12 & 63), w[C++] = 128 | h2 >>> 6 & 63), w[C++] = 128 | 63 & h2);
            return w;
          }(c);
        }, a.utf8decode = function(c) {
          return u.nodebuffer ? n.transformTo("nodebuffer", c).toString("utf-8") : function(y) {
            var w, h2, g, b, C = y.length, N = new Array(2 * C);
            for (w = h2 = 0; w < C; )
              if ((g = y[w++]) < 128)
                N[h2++] = g;
              else if (4 < (b = d[g]))
                N[h2++] = 65533, w += b - 1;
              else {
                for (g &= b === 2 ? 31 : b === 3 ? 15 : 7; 1 < b && w < C; )
                  g = g << 6 | 63 & y[w++], b--;
                1 < b ? N[h2++] = 65533 : g < 65536 ? N[h2++] = g : (g -= 65536, N[h2++] = 55296 | g >> 10 & 1023, N[h2++] = 56320 | 1023 & g);
              }
            return N.length !== h2 && (N.subarray ? N = N.subarray(0, h2) : N.length = h2), n.applyFromCharCode(N);
          }(c = n.transformTo(u.uint8array ? "uint8array" : "array", c));
        }, n.inherits(m, i), m.prototype.processChunk = function(c) {
          var y = n.transformTo(u.uint8array ? "uint8array" : "array", c.data);
          if (this.leftOver && this.leftOver.length) {
            if (u.uint8array) {
              var w = y;
              (y = new Uint8Array(w.length + this.leftOver.length)).set(this.leftOver, 0), y.set(w, this.leftOver.length);
            } else
              y = this.leftOver.concat(y);
            this.leftOver = null;
          }
          var h2 = function(b, C) {
            var N;
            for ((C = C || b.length) > b.length && (C = b.length), N = C - 1; 0 <= N && (192 & b[N]) == 128; )
              N--;
            return N < 0 || N === 0 ? C : N + d[b[N]] > C ? N : C;
          }(y), g = y;
          h2 !== y.length && (u.uint8array ? (g = y.subarray(0, h2), this.leftOver = y.subarray(h2, y.length)) : (g = y.slice(0, h2), this.leftOver = y.slice(h2, y.length))), this.push({ data: a.utf8decode(g), meta: c.meta });
        }, m.prototype.flush = function() {
          this.leftOver && this.leftOver.length && (this.push({ data: a.utf8decode(this.leftOver), meta: {} }), this.leftOver = null);
        }, a.Utf8DecodeWorker = m, n.inherits(_, i), _.prototype.processChunk = function(c) {
          this.push({ data: a.utf8encode(c.data), meta: c.meta });
        }, a.Utf8EncodeWorker = _;
      }, { "./nodejsUtils": 14, "./stream/GenericWorker": 28, "./support": 30, "./utils": 32 }], 32: [function(e, r, a) {
        var n = e("./support"), u = e("./base64"), l = e("./nodejsUtils"), i = e("set-immediate-shim"), d = e("./external");
        function p(h2) {
          return h2;
        }
        function m(h2, g) {
          for (var b = 0; b < h2.length; ++b)
            g[b] = 255 & h2.charCodeAt(b);
          return g;
        }
        a.newBlob = function(h2, g) {
          a.checkSupport("blob");
          try {
            return new Blob([h2], { type: g });
          } catch {
            try {
              var b = new (self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder)();
              return b.append(h2), b.getBlob(g);
            } catch {
              throw new Error("Bug : can't construct the Blob.");
            }
          }
        };
        var _ = { stringifyByChunk: function(h2, g, b) {
          var C = [], N = 0, P = h2.length;
          if (P <= b)
            return String.fromCharCode.apply(null, h2);
          for (; N < P; )
            g === "array" || g === "nodebuffer" ? C.push(String.fromCharCode.apply(null, h2.slice(N, Math.min(N + b, P)))) : C.push(String.fromCharCode.apply(null, h2.subarray(N, Math.min(N + b, P)))), N += b;
          return C.join("");
        }, stringifyByChar: function(h2) {
          for (var g = "", b = 0; b < h2.length; b++)
            g += String.fromCharCode(h2[b]);
          return g;
        }, applyCanBeUsed: { uint8array: function() {
          try {
            return n.uint8array && String.fromCharCode.apply(null, new Uint8Array(1)).length === 1;
          } catch {
            return false;
          }
        }(), nodebuffer: function() {
          try {
            return n.nodebuffer && String.fromCharCode.apply(null, l.allocBuffer(1)).length === 1;
          } catch {
            return false;
          }
        }() } };
        function c(h2) {
          var g = 65536, b = a.getTypeOf(h2), C = true;
          if (b === "uint8array" ? C = _.applyCanBeUsed.uint8array : b === "nodebuffer" && (C = _.applyCanBeUsed.nodebuffer), C)
            for (; 1 < g; )
              try {
                return _.stringifyByChunk(h2, b, g);
              } catch {
                g = Math.floor(g / 2);
              }
          return _.stringifyByChar(h2);
        }
        function y(h2, g) {
          for (var b = 0; b < h2.length; b++)
            g[b] = h2[b];
          return g;
        }
        a.applyFromCharCode = c;
        var w = {};
        w.string = { string: p, array: function(h2) {
          return m(h2, new Array(h2.length));
        }, arraybuffer: function(h2) {
          return w.string.uint8array(h2).buffer;
        }, uint8array: function(h2) {
          return m(h2, new Uint8Array(h2.length));
        }, nodebuffer: function(h2) {
          return m(h2, l.allocBuffer(h2.length));
        } }, w.array = { string: c, array: p, arraybuffer: function(h2) {
          return new Uint8Array(h2).buffer;
        }, uint8array: function(h2) {
          return new Uint8Array(h2);
        }, nodebuffer: function(h2) {
          return l.newBufferFrom(h2);
        } }, w.arraybuffer = { string: function(h2) {
          return c(new Uint8Array(h2));
        }, array: function(h2) {
          return y(new Uint8Array(h2), new Array(h2.byteLength));
        }, arraybuffer: p, uint8array: function(h2) {
          return new Uint8Array(h2);
        }, nodebuffer: function(h2) {
          return l.newBufferFrom(new Uint8Array(h2));
        } }, w.uint8array = { string: c, array: function(h2) {
          return y(h2, new Array(h2.length));
        }, arraybuffer: function(h2) {
          return h2.buffer;
        }, uint8array: p, nodebuffer: function(h2) {
          return l.newBufferFrom(h2);
        } }, w.nodebuffer = { string: c, array: function(h2) {
          return y(h2, new Array(h2.length));
        }, arraybuffer: function(h2) {
          return w.nodebuffer.uint8array(h2).buffer;
        }, uint8array: function(h2) {
          return y(h2, new Uint8Array(h2.length));
        }, nodebuffer: p }, a.transformTo = function(h2, g) {
          if (g = g || "", !h2)
            return g;
          a.checkSupport(h2);
          var b = a.getTypeOf(g);
          return w[b][h2](g);
        }, a.resolve = function(h2) {
          for (var g = h2.split("/"), b = [], C = 0; C < g.length; C++) {
            var N = g[C];
            N === "." || N === "" && C !== 0 && C !== g.length - 1 || (N === ".." ? b.pop() : b.push(N));
          }
          return b.join("/");
        }, a.getTypeOf = function(h2) {
          return typeof h2 == "string" ? "string" : Object.prototype.toString.call(h2) === "[object Array]" ? "array" : n.nodebuffer && l.isBuffer(h2) ? "nodebuffer" : n.uint8array && h2 instanceof Uint8Array ? "uint8array" : n.arraybuffer && h2 instanceof ArrayBuffer ? "arraybuffer" : void 0;
        }, a.checkSupport = function(h2) {
          if (!n[h2.toLowerCase()])
            throw new Error(h2 + " is not supported by this platform");
        }, a.MAX_VALUE_16BITS = 65535, a.MAX_VALUE_32BITS = -1, a.pretty = function(h2) {
          var g, b, C = "";
          for (b = 0; b < (h2 || "").length; b++)
            C += "\\x" + ((g = h2.charCodeAt(b)) < 16 ? "0" : "") + g.toString(16).toUpperCase();
          return C;
        }, a.delay = function(h2, g, b) {
          i(function() {
            h2.apply(b || null, g || []);
          });
        }, a.inherits = function(h2, g) {
          function b() {
          }
          b.prototype = g.prototype, h2.prototype = new b();
        }, a.extend = function() {
          var h2, g, b = {};
          for (h2 = 0; h2 < arguments.length; h2++)
            for (g in arguments[h2])
              arguments[h2].hasOwnProperty(g) && b[g] === void 0 && (b[g] = arguments[h2][g]);
          return b;
        }, a.prepareContent = function(h2, g, b, C, N) {
          return d.Promise.resolve(g).then(function(P) {
            return n.blob && (P instanceof Blob || ["[object File]", "[object Blob]"].indexOf(Object.prototype.toString.call(P)) !== -1) && typeof FileReader != "undefined" ? new d.Promise(function(U, I) {
              var H = new FileReader();
              H.onload = function(T) {
                U(T.target.result);
              }, H.onerror = function(T) {
                I(T.target.error);
              }, H.readAsArrayBuffer(P);
            }) : P;
          }).then(function(P) {
            var U = a.getTypeOf(P);
            return U ? (U === "arraybuffer" ? P = a.transformTo("uint8array", P) : U === "string" && (N ? P = u.decode(P) : b && C !== true && (P = function(I) {
              return m(I, n.uint8array ? new Uint8Array(I.length) : new Array(I.length));
            }(P))), P) : d.Promise.reject(new Error("Can't read the data of '" + h2 + "'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"));
          });
        };
      }, { "./base64": 1, "./external": 6, "./nodejsUtils": 14, "./support": 30, "set-immediate-shim": 54 }], 33: [function(e, r, a) {
        var n = e("./reader/readerFor"), u = e("./utils"), l = e("./signature"), i = e("./zipEntry"), d = (e("./utf8"), e("./support"));
        function p(m) {
          this.files = [], this.loadOptions = m;
        }
        p.prototype = { checkSignature: function(m) {
          if (!this.reader.readAndCheckSignature(m)) {
            this.reader.index -= 4;
            var _ = this.reader.readString(4);
            throw new Error("Corrupted zip or bug: unexpected signature (" + u.pretty(_) + ", expected " + u.pretty(m) + ")");
          }
        }, isSignature: function(m, _) {
          var c = this.reader.index;
          this.reader.setIndex(m);
          var y = this.reader.readString(4) === _;
          return this.reader.setIndex(c), y;
        }, readBlockEndOfCentral: function() {
          this.diskNumber = this.reader.readInt(2), this.diskWithCentralDirStart = this.reader.readInt(2), this.centralDirRecordsOnThisDisk = this.reader.readInt(2), this.centralDirRecords = this.reader.readInt(2), this.centralDirSize = this.reader.readInt(4), this.centralDirOffset = this.reader.readInt(4), this.zipCommentLength = this.reader.readInt(2);
          var m = this.reader.readData(this.zipCommentLength), _ = d.uint8array ? "uint8array" : "array", c = u.transformTo(_, m);
          this.zipComment = this.loadOptions.decodeFileName(c);
        }, readBlockZip64EndOfCentral: function() {
          this.zip64EndOfCentralSize = this.reader.readInt(8), this.reader.skip(4), this.diskNumber = this.reader.readInt(4), this.diskWithCentralDirStart = this.reader.readInt(4), this.centralDirRecordsOnThisDisk = this.reader.readInt(8), this.centralDirRecords = this.reader.readInt(8), this.centralDirSize = this.reader.readInt(8), this.centralDirOffset = this.reader.readInt(8), this.zip64ExtensibleData = {};
          for (var m, _, c, y = this.zip64EndOfCentralSize - 44; 0 < y; )
            m = this.reader.readInt(2), _ = this.reader.readInt(4), c = this.reader.readData(_), this.zip64ExtensibleData[m] = { id: m, length: _, value: c };
        }, readBlockZip64EndOfCentralLocator: function() {
          if (this.diskWithZip64CentralDirStart = this.reader.readInt(4), this.relativeOffsetEndOfZip64CentralDir = this.reader.readInt(8), this.disksCount = this.reader.readInt(4), 1 < this.disksCount)
            throw new Error("Multi-volumes zip are not supported");
        }, readLocalFiles: function() {
          var m, _;
          for (m = 0; m < this.files.length; m++)
            _ = this.files[m], this.reader.setIndex(_.localHeaderOffset), this.checkSignature(l.LOCAL_FILE_HEADER), _.readLocalPart(this.reader), _.handleUTF8(), _.processAttributes();
        }, readCentralDir: function() {
          var m;
          for (this.reader.setIndex(this.centralDirOffset); this.reader.readAndCheckSignature(l.CENTRAL_FILE_HEADER); )
            (m = new i({ zip64: this.zip64 }, this.loadOptions)).readCentralPart(this.reader), this.files.push(m);
          if (this.centralDirRecords !== this.files.length && this.centralDirRecords !== 0 && this.files.length === 0)
            throw new Error("Corrupted zip or bug: expected " + this.centralDirRecords + " records in central dir, got " + this.files.length);
        }, readEndOfCentral: function() {
          var m = this.reader.lastIndexOfSignature(l.CENTRAL_DIRECTORY_END);
          if (m < 0)
            throw this.isSignature(0, l.LOCAL_FILE_HEADER) ? new Error("Corrupted zip: can't find end of central directory") : new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html");
          this.reader.setIndex(m);
          var _ = m;
          if (this.checkSignature(l.CENTRAL_DIRECTORY_END), this.readBlockEndOfCentral(), this.diskNumber === u.MAX_VALUE_16BITS || this.diskWithCentralDirStart === u.MAX_VALUE_16BITS || this.centralDirRecordsOnThisDisk === u.MAX_VALUE_16BITS || this.centralDirRecords === u.MAX_VALUE_16BITS || this.centralDirSize === u.MAX_VALUE_32BITS || this.centralDirOffset === u.MAX_VALUE_32BITS) {
            if (this.zip64 = true, (m = this.reader.lastIndexOfSignature(l.ZIP64_CENTRAL_DIRECTORY_LOCATOR)) < 0)
              throw new Error("Corrupted zip: can't find the ZIP64 end of central directory locator");
            if (this.reader.setIndex(m), this.checkSignature(l.ZIP64_CENTRAL_DIRECTORY_LOCATOR), this.readBlockZip64EndOfCentralLocator(), !this.isSignature(this.relativeOffsetEndOfZip64CentralDir, l.ZIP64_CENTRAL_DIRECTORY_END) && (this.relativeOffsetEndOfZip64CentralDir = this.reader.lastIndexOfSignature(l.ZIP64_CENTRAL_DIRECTORY_END), this.relativeOffsetEndOfZip64CentralDir < 0))
              throw new Error("Corrupted zip: can't find the ZIP64 end of central directory");
            this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir), this.checkSignature(l.ZIP64_CENTRAL_DIRECTORY_END), this.readBlockZip64EndOfCentral();
          }
          var c = this.centralDirOffset + this.centralDirSize;
          this.zip64 && (c += 20, c += 12 + this.zip64EndOfCentralSize);
          var y = _ - c;
          if (0 < y)
            this.isSignature(_, l.CENTRAL_FILE_HEADER) || (this.reader.zero = y);
          else if (y < 0)
            throw new Error("Corrupted zip: missing " + Math.abs(y) + " bytes.");
        }, prepareReader: function(m) {
          this.reader = n(m);
        }, load: function(m) {
          this.prepareReader(m), this.readEndOfCentral(), this.readCentralDir(), this.readLocalFiles();
        } }, r.exports = p;
      }, { "./reader/readerFor": 22, "./signature": 23, "./support": 30, "./utf8": 31, "./utils": 32, "./zipEntry": 34 }], 34: [function(e, r, a) {
        var n = e("./reader/readerFor"), u = e("./utils"), l = e("./compressedObject"), i = e("./crc32"), d = e("./utf8"), p = e("./compressions"), m = e("./support");
        function _(c, y) {
          this.options = c, this.loadOptions = y;
        }
        _.prototype = { isEncrypted: function() {
          return (1 & this.bitFlag) == 1;
        }, useUTF8: function() {
          return (2048 & this.bitFlag) == 2048;
        }, readLocalPart: function(c) {
          var y, w;
          if (c.skip(22), this.fileNameLength = c.readInt(2), w = c.readInt(2), this.fileName = c.readData(this.fileNameLength), c.skip(w), this.compressedSize === -1 || this.uncompressedSize === -1)
            throw new Error("Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)");
          if ((y = function(h2) {
            for (var g in p)
              if (p.hasOwnProperty(g) && p[g].magic === h2)
                return p[g];
            return null;
          }(this.compressionMethod)) === null)
            throw new Error("Corrupted zip : compression " + u.pretty(this.compressionMethod) + " unknown (inner file : " + u.transformTo("string", this.fileName) + ")");
          this.decompressed = new l(this.compressedSize, this.uncompressedSize, this.crc32, y, c.readData(this.compressedSize));
        }, readCentralPart: function(c) {
          this.versionMadeBy = c.readInt(2), c.skip(2), this.bitFlag = c.readInt(2), this.compressionMethod = c.readString(2), this.date = c.readDate(), this.crc32 = c.readInt(4), this.compressedSize = c.readInt(4), this.uncompressedSize = c.readInt(4);
          var y = c.readInt(2);
          if (this.extraFieldsLength = c.readInt(2), this.fileCommentLength = c.readInt(2), this.diskNumberStart = c.readInt(2), this.internalFileAttributes = c.readInt(2), this.externalFileAttributes = c.readInt(4), this.localHeaderOffset = c.readInt(4), this.isEncrypted())
            throw new Error("Encrypted zip are not supported");
          c.skip(y), this.readExtraFields(c), this.parseZIP64ExtraField(c), this.fileComment = c.readData(this.fileCommentLength);
        }, processAttributes: function() {
          this.unixPermissions = null, this.dosPermissions = null;
          var c = this.versionMadeBy >> 8;
          this.dir = !!(16 & this.externalFileAttributes), c == 0 && (this.dosPermissions = 63 & this.externalFileAttributes), c == 3 && (this.unixPermissions = this.externalFileAttributes >> 16 & 65535), this.dir || this.fileNameStr.slice(-1) !== "/" || (this.dir = true);
        }, parseZIP64ExtraField: function(c) {
          if (this.extraFields[1]) {
            var y = n(this.extraFields[1].value);
            this.uncompressedSize === u.MAX_VALUE_32BITS && (this.uncompressedSize = y.readInt(8)), this.compressedSize === u.MAX_VALUE_32BITS && (this.compressedSize = y.readInt(8)), this.localHeaderOffset === u.MAX_VALUE_32BITS && (this.localHeaderOffset = y.readInt(8)), this.diskNumberStart === u.MAX_VALUE_32BITS && (this.diskNumberStart = y.readInt(4));
          }
        }, readExtraFields: function(c) {
          var y, w, h2, g = c.index + this.extraFieldsLength;
          for (this.extraFields || (this.extraFields = {}); c.index + 4 < g; )
            y = c.readInt(2), w = c.readInt(2), h2 = c.readData(w), this.extraFields[y] = { id: y, length: w, value: h2 };
          c.setIndex(g);
        }, handleUTF8: function() {
          var c = m.uint8array ? "uint8array" : "array";
          if (this.useUTF8())
            this.fileNameStr = d.utf8decode(this.fileName), this.fileCommentStr = d.utf8decode(this.fileComment);
          else {
            var y = this.findExtraFieldUnicodePath();
            if (y !== null)
              this.fileNameStr = y;
            else {
              var w = u.transformTo(c, this.fileName);
              this.fileNameStr = this.loadOptions.decodeFileName(w);
            }
            var h2 = this.findExtraFieldUnicodeComment();
            if (h2 !== null)
              this.fileCommentStr = h2;
            else {
              var g = u.transformTo(c, this.fileComment);
              this.fileCommentStr = this.loadOptions.decodeFileName(g);
            }
          }
        }, findExtraFieldUnicodePath: function() {
          var c = this.extraFields[28789];
          if (c) {
            var y = n(c.value);
            return y.readInt(1) !== 1 || i(this.fileName) !== y.readInt(4) ? null : d.utf8decode(y.readData(c.length - 5));
          }
          return null;
        }, findExtraFieldUnicodeComment: function() {
          var c = this.extraFields[25461];
          if (c) {
            var y = n(c.value);
            return y.readInt(1) !== 1 || i(this.fileComment) !== y.readInt(4) ? null : d.utf8decode(y.readData(c.length - 5));
          }
          return null;
        } }, r.exports = _;
      }, { "./compressedObject": 2, "./compressions": 3, "./crc32": 4, "./reader/readerFor": 22, "./support": 30, "./utf8": 31, "./utils": 32 }], 35: [function(e, r, a) {
        function n(y, w, h2) {
          this.name = y, this.dir = h2.dir, this.date = h2.date, this.comment = h2.comment, this.unixPermissions = h2.unixPermissions, this.dosPermissions = h2.dosPermissions, this._data = w, this._dataBinary = h2.binary, this.options = { compression: h2.compression, compressionOptions: h2.compressionOptions };
        }
        var u = e("./stream/StreamHelper"), l = e("./stream/DataWorker"), i = e("./utf8"), d = e("./compressedObject"), p = e("./stream/GenericWorker");
        n.prototype = { internalStream: function(y) {
          var w = null, h2 = "string";
          try {
            if (!y)
              throw new Error("No output type specified.");
            var g = (h2 = y.toLowerCase()) === "string" || h2 === "text";
            h2 !== "binarystring" && h2 !== "text" || (h2 = "string"), w = this._decompressWorker();
            var b = !this._dataBinary;
            b && !g && (w = w.pipe(new i.Utf8EncodeWorker())), !b && g && (w = w.pipe(new i.Utf8DecodeWorker()));
          } catch (C) {
            (w = new p("error")).error(C);
          }
          return new u(w, h2, "");
        }, async: function(y, w) {
          return this.internalStream(y).accumulate(w);
        }, nodeStream: function(y, w) {
          return this.internalStream(y || "nodebuffer").toNodejsStream(w);
        }, _compressWorker: function(y, w) {
          if (this._data instanceof d && this._data.compression.magic === y.magic)
            return this._data.getCompressedWorker();
          var h2 = this._decompressWorker();
          return this._dataBinary || (h2 = h2.pipe(new i.Utf8EncodeWorker())), d.createWorkerFrom(h2, y, w);
        }, _decompressWorker: function() {
          return this._data instanceof d ? this._data.getContentWorker() : this._data instanceof p ? this._data : new l(this._data);
        } };
        for (var m = ["asText", "asBinary", "asNodeBuffer", "asUint8Array", "asArrayBuffer"], _ = function() {
          throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
        }, c = 0; c < m.length; c++)
          n.prototype[m[c]] = _;
        r.exports = n;
      }, { "./compressedObject": 2, "./stream/DataWorker": 27, "./stream/GenericWorker": 28, "./stream/StreamHelper": 29, "./utf8": 31 }], 36: [function(e, r, a) {
        (function(n) {
          var u, l, i = n.MutationObserver || n.WebKitMutationObserver;
          if (i) {
            var d = 0, p = new i(y), m = n.document.createTextNode("");
            p.observe(m, { characterData: true }), u = function() {
              m.data = d = ++d % 2;
            };
          } else if (n.setImmediate || n.MessageChannel === void 0)
            u = "document" in n && "onreadystatechange" in n.document.createElement("script") ? function() {
              var w = n.document.createElement("script");
              w.onreadystatechange = function() {
                y(), w.onreadystatechange = null, w.parentNode.removeChild(w), w = null;
              }, n.document.documentElement.appendChild(w);
            } : function() {
              setTimeout(y, 0);
            };
          else {
            var _ = new n.MessageChannel();
            _.port1.onmessage = y, u = function() {
              _.port2.postMessage(0);
            };
          }
          var c = [];
          function y() {
            var w, h2;
            l = true;
            for (var g = c.length; g; ) {
              for (h2 = c, c = [], w = -1; ++w < g; )
                h2[w]();
              g = c.length;
            }
            l = false;
          }
          r.exports = function(w) {
            c.push(w) !== 1 || l || u();
          };
        }).call(this, typeof at != "undefined" ? at : typeof self != "undefined" ? self : typeof window != "undefined" ? window : {});
      }, {}], 37: [function(e, r, a) {
        var n = e("immediate");
        function u() {
        }
        var l = {}, i = ["REJECTED"], d = ["FULFILLED"], p = ["PENDING"];
        function m(g) {
          if (typeof g != "function")
            throw new TypeError("resolver must be a function");
          this.state = p, this.queue = [], this.outcome = void 0, g !== u && w(this, g);
        }
        function _(g, b, C) {
          this.promise = g, typeof b == "function" && (this.onFulfilled = b, this.callFulfilled = this.otherCallFulfilled), typeof C == "function" && (this.onRejected = C, this.callRejected = this.otherCallRejected);
        }
        function c(g, b, C) {
          n(function() {
            var N;
            try {
              N = b(C);
            } catch (P) {
              return l.reject(g, P);
            }
            N === g ? l.reject(g, new TypeError("Cannot resolve promise with itself")) : l.resolve(g, N);
          });
        }
        function y(g) {
          var b = g && g.then;
          if (g && (typeof g == "object" || typeof g == "function") && typeof b == "function")
            return function() {
              b.apply(g, arguments);
            };
        }
        function w(g, b) {
          var C = false;
          function N(I) {
            C || (C = true, l.reject(g, I));
          }
          function P(I) {
            C || (C = true, l.resolve(g, I));
          }
          var U = h2(function() {
            b(P, N);
          });
          U.status === "error" && N(U.value);
        }
        function h2(g, b) {
          var C = {};
          try {
            C.value = g(b), C.status = "success";
          } catch (N) {
            C.status = "error", C.value = N;
          }
          return C;
        }
        (r.exports = m).prototype.finally = function(g) {
          if (typeof g != "function")
            return this;
          var b = this.constructor;
          return this.then(function(C) {
            return b.resolve(g()).then(function() {
              return C;
            });
          }, function(C) {
            return b.resolve(g()).then(function() {
              throw C;
            });
          });
        }, m.prototype.catch = function(g) {
          return this.then(null, g);
        }, m.prototype.then = function(g, b) {
          if (typeof g != "function" && this.state === d || typeof b != "function" && this.state === i)
            return this;
          var C = new this.constructor(u);
          return this.state !== p ? c(C, this.state === d ? g : b, this.outcome) : this.queue.push(new _(C, g, b)), C;
        }, _.prototype.callFulfilled = function(g) {
          l.resolve(this.promise, g);
        }, _.prototype.otherCallFulfilled = function(g) {
          c(this.promise, this.onFulfilled, g);
        }, _.prototype.callRejected = function(g) {
          l.reject(this.promise, g);
        }, _.prototype.otherCallRejected = function(g) {
          c(this.promise, this.onRejected, g);
        }, l.resolve = function(g, b) {
          var C = h2(y, b);
          if (C.status === "error")
            return l.reject(g, C.value);
          var N = C.value;
          if (N)
            w(g, N);
          else {
            g.state = d, g.outcome = b;
            for (var P = -1, U = g.queue.length; ++P < U; )
              g.queue[P].callFulfilled(b);
          }
          return g;
        }, l.reject = function(g, b) {
          g.state = i, g.outcome = b;
          for (var C = -1, N = g.queue.length; ++C < N; )
            g.queue[C].callRejected(b);
          return g;
        }, m.resolve = function(g) {
          return g instanceof this ? g : l.resolve(new this(u), g);
        }, m.reject = function(g) {
          var b = new this(u);
          return l.reject(b, g);
        }, m.all = function(g) {
          var b = this;
          if (Object.prototype.toString.call(g) !== "[object Array]")
            return this.reject(new TypeError("must be an array"));
          var C = g.length, N = false;
          if (!C)
            return this.resolve([]);
          for (var P = new Array(C), U = 0, I = -1, H = new this(u); ++I < C; )
            T(g[I], I);
          return H;
          function T(V, ee) {
            b.resolve(V).then(function(S) {
              P[ee] = S, ++U !== C || N || (N = true, l.resolve(H, P));
            }, function(S) {
              N || (N = true, l.reject(H, S));
            });
          }
        }, m.race = function(g) {
          var b = this;
          if (Object.prototype.toString.call(g) !== "[object Array]")
            return this.reject(new TypeError("must be an array"));
          var C = g.length, N = false;
          if (!C)
            return this.resolve([]);
          for (var P = -1, U = new this(u); ++P < C; )
            I = g[P], b.resolve(I).then(function(H) {
              N || (N = true, l.resolve(U, H));
            }, function(H) {
              N || (N = true, l.reject(U, H));
            });
          var I;
          return U;
        };
      }, { immediate: 36 }], 38: [function(e, r, a) {
        var n = {};
        (0, e("./lib/utils/common").assign)(n, e("./lib/deflate"), e("./lib/inflate"), e("./lib/zlib/constants")), r.exports = n;
      }, { "./lib/deflate": 39, "./lib/inflate": 40, "./lib/utils/common": 41, "./lib/zlib/constants": 44 }], 39: [function(e, r, a) {
        var n = e("./zlib/deflate"), u = e("./utils/common"), l = e("./utils/strings"), i = e("./zlib/messages"), d = e("./zlib/zstream"), p = Object.prototype.toString, m = 0, _ = -1, c = 0, y = 8;
        function w(g) {
          if (!(this instanceof w))
            return new w(g);
          this.options = u.assign({ level: _, method: y, chunkSize: 16384, windowBits: 15, memLevel: 8, strategy: c, to: "" }, g || {});
          var b = this.options;
          b.raw && 0 < b.windowBits ? b.windowBits = -b.windowBits : b.gzip && 0 < b.windowBits && b.windowBits < 16 && (b.windowBits += 16), this.err = 0, this.msg = "", this.ended = false, this.chunks = [], this.strm = new d(), this.strm.avail_out = 0;
          var C = n.deflateInit2(this.strm, b.level, b.method, b.windowBits, b.memLevel, b.strategy);
          if (C !== m)
            throw new Error(i[C]);
          if (b.header && n.deflateSetHeader(this.strm, b.header), b.dictionary) {
            var N;
            if (N = typeof b.dictionary == "string" ? l.string2buf(b.dictionary) : p.call(b.dictionary) === "[object ArrayBuffer]" ? new Uint8Array(b.dictionary) : b.dictionary, (C = n.deflateSetDictionary(this.strm, N)) !== m)
              throw new Error(i[C]);
            this._dict_set = true;
          }
        }
        function h2(g, b) {
          var C = new w(b);
          if (C.push(g, true), C.err)
            throw C.msg || i[C.err];
          return C.result;
        }
        w.prototype.push = function(g, b) {
          var C, N, P = this.strm, U = this.options.chunkSize;
          if (this.ended)
            return false;
          N = b === ~~b ? b : b === true ? 4 : 0, typeof g == "string" ? P.input = l.string2buf(g) : p.call(g) === "[object ArrayBuffer]" ? P.input = new Uint8Array(g) : P.input = g, P.next_in = 0, P.avail_in = P.input.length;
          do {
            if (P.avail_out === 0 && (P.output = new u.Buf8(U), P.next_out = 0, P.avail_out = U), (C = n.deflate(P, N)) !== 1 && C !== m)
              return this.onEnd(C), !(this.ended = true);
            P.avail_out !== 0 && (P.avail_in !== 0 || N !== 4 && N !== 2) || (this.options.to === "string" ? this.onData(l.buf2binstring(u.shrinkBuf(P.output, P.next_out))) : this.onData(u.shrinkBuf(P.output, P.next_out)));
          } while ((0 < P.avail_in || P.avail_out === 0) && C !== 1);
          return N === 4 ? (C = n.deflateEnd(this.strm), this.onEnd(C), this.ended = true, C === m) : N !== 2 || (this.onEnd(m), !(P.avail_out = 0));
        }, w.prototype.onData = function(g) {
          this.chunks.push(g);
        }, w.prototype.onEnd = function(g) {
          g === m && (this.options.to === "string" ? this.result = this.chunks.join("") : this.result = u.flattenChunks(this.chunks)), this.chunks = [], this.err = g, this.msg = this.strm.msg;
        }, a.Deflate = w, a.deflate = h2, a.deflateRaw = function(g, b) {
          return (b = b || {}).raw = true, h2(g, b);
        }, a.gzip = function(g, b) {
          return (b = b || {}).gzip = true, h2(g, b);
        };
      }, { "./utils/common": 41, "./utils/strings": 42, "./zlib/deflate": 46, "./zlib/messages": 51, "./zlib/zstream": 53 }], 40: [function(e, r, a) {
        var n = e("./zlib/inflate"), u = e("./utils/common"), l = e("./utils/strings"), i = e("./zlib/constants"), d = e("./zlib/messages"), p = e("./zlib/zstream"), m = e("./zlib/gzheader"), _ = Object.prototype.toString;
        function c(w) {
          if (!(this instanceof c))
            return new c(w);
          this.options = u.assign({ chunkSize: 16384, windowBits: 0, to: "" }, w || {});
          var h2 = this.options;
          h2.raw && 0 <= h2.windowBits && h2.windowBits < 16 && (h2.windowBits = -h2.windowBits, h2.windowBits === 0 && (h2.windowBits = -15)), !(0 <= h2.windowBits && h2.windowBits < 16) || w && w.windowBits || (h2.windowBits += 32), 15 < h2.windowBits && h2.windowBits < 48 && (15 & h2.windowBits) == 0 && (h2.windowBits |= 15), this.err = 0, this.msg = "", this.ended = false, this.chunks = [], this.strm = new p(), this.strm.avail_out = 0;
          var g = n.inflateInit2(this.strm, h2.windowBits);
          if (g !== i.Z_OK)
            throw new Error(d[g]);
          this.header = new m(), n.inflateGetHeader(this.strm, this.header);
        }
        function y(w, h2) {
          var g = new c(h2);
          if (g.push(w, true), g.err)
            throw g.msg || d[g.err];
          return g.result;
        }
        c.prototype.push = function(w, h2) {
          var g, b, C, N, P, U, I = this.strm, H = this.options.chunkSize, T = this.options.dictionary, V = false;
          if (this.ended)
            return false;
          b = h2 === ~~h2 ? h2 : h2 === true ? i.Z_FINISH : i.Z_NO_FLUSH, typeof w == "string" ? I.input = l.binstring2buf(w) : _.call(w) === "[object ArrayBuffer]" ? I.input = new Uint8Array(w) : I.input = w, I.next_in = 0, I.avail_in = I.input.length;
          do {
            if (I.avail_out === 0 && (I.output = new u.Buf8(H), I.next_out = 0, I.avail_out = H), (g = n.inflate(I, i.Z_NO_FLUSH)) === i.Z_NEED_DICT && T && (U = typeof T == "string" ? l.string2buf(T) : _.call(T) === "[object ArrayBuffer]" ? new Uint8Array(T) : T, g = n.inflateSetDictionary(this.strm, U)), g === i.Z_BUF_ERROR && V === true && (g = i.Z_OK, V = false), g !== i.Z_STREAM_END && g !== i.Z_OK)
              return this.onEnd(g), !(this.ended = true);
            I.next_out && (I.avail_out !== 0 && g !== i.Z_STREAM_END && (I.avail_in !== 0 || b !== i.Z_FINISH && b !== i.Z_SYNC_FLUSH) || (this.options.to === "string" ? (C = l.utf8border(I.output, I.next_out), N = I.next_out - C, P = l.buf2string(I.output, C), I.next_out = N, I.avail_out = H - N, N && u.arraySet(I.output, I.output, C, N, 0), this.onData(P)) : this.onData(u.shrinkBuf(I.output, I.next_out)))), I.avail_in === 0 && I.avail_out === 0 && (V = true);
          } while ((0 < I.avail_in || I.avail_out === 0) && g !== i.Z_STREAM_END);
          return g === i.Z_STREAM_END && (b = i.Z_FINISH), b === i.Z_FINISH ? (g = n.inflateEnd(this.strm), this.onEnd(g), this.ended = true, g === i.Z_OK) : b !== i.Z_SYNC_FLUSH || (this.onEnd(i.Z_OK), !(I.avail_out = 0));
        }, c.prototype.onData = function(w) {
          this.chunks.push(w);
        }, c.prototype.onEnd = function(w) {
          w === i.Z_OK && (this.options.to === "string" ? this.result = this.chunks.join("") : this.result = u.flattenChunks(this.chunks)), this.chunks = [], this.err = w, this.msg = this.strm.msg;
        }, a.Inflate = c, a.inflate = y, a.inflateRaw = function(w, h2) {
          return (h2 = h2 || {}).raw = true, y(w, h2);
        }, a.ungzip = y;
      }, { "./utils/common": 41, "./utils/strings": 42, "./zlib/constants": 44, "./zlib/gzheader": 47, "./zlib/inflate": 49, "./zlib/messages": 51, "./zlib/zstream": 53 }], 41: [function(e, r, a) {
        var n = typeof Uint8Array != "undefined" && typeof Uint16Array != "undefined" && typeof Int32Array != "undefined";
        a.assign = function(i) {
          for (var d = Array.prototype.slice.call(arguments, 1); d.length; ) {
            var p = d.shift();
            if (p) {
              if (typeof p != "object")
                throw new TypeError(p + "must be non-object");
              for (var m in p)
                p.hasOwnProperty(m) && (i[m] = p[m]);
            }
          }
          return i;
        }, a.shrinkBuf = function(i, d) {
          return i.length === d ? i : i.subarray ? i.subarray(0, d) : (i.length = d, i);
        };
        var u = { arraySet: function(i, d, p, m, _) {
          if (d.subarray && i.subarray)
            i.set(d.subarray(p, p + m), _);
          else
            for (var c = 0; c < m; c++)
              i[_ + c] = d[p + c];
        }, flattenChunks: function(i) {
          var d, p, m, _, c, y;
          for (d = m = 0, p = i.length; d < p; d++)
            m += i[d].length;
          for (y = new Uint8Array(m), d = _ = 0, p = i.length; d < p; d++)
            c = i[d], y.set(c, _), _ += c.length;
          return y;
        } }, l = { arraySet: function(i, d, p, m, _) {
          for (var c = 0; c < m; c++)
            i[_ + c] = d[p + c];
        }, flattenChunks: function(i) {
          return [].concat.apply([], i);
        } };
        a.setTyped = function(i) {
          i ? (a.Buf8 = Uint8Array, a.Buf16 = Uint16Array, a.Buf32 = Int32Array, a.assign(a, u)) : (a.Buf8 = Array, a.Buf16 = Array, a.Buf32 = Array, a.assign(a, l));
        }, a.setTyped(n);
      }, {}], 42: [function(e, r, a) {
        var n = e("./common"), u = true, l = true;
        try {
          String.fromCharCode.apply(null, [0]);
        } catch {
          u = false;
        }
        try {
          String.fromCharCode.apply(null, new Uint8Array(1));
        } catch {
          l = false;
        }
        for (var i = new n.Buf8(256), d = 0; d < 256; d++)
          i[d] = 252 <= d ? 6 : 248 <= d ? 5 : 240 <= d ? 4 : 224 <= d ? 3 : 192 <= d ? 2 : 1;
        function p(m, _) {
          if (_ < 65537 && (m.subarray && l || !m.subarray && u))
            return String.fromCharCode.apply(null, n.shrinkBuf(m, _));
          for (var c = "", y = 0; y < _; y++)
            c += String.fromCharCode(m[y]);
          return c;
        }
        i[254] = i[254] = 1, a.string2buf = function(m) {
          var _, c, y, w, h2, g = m.length, b = 0;
          for (w = 0; w < g; w++)
            (64512 & (c = m.charCodeAt(w))) == 55296 && w + 1 < g && (64512 & (y = m.charCodeAt(w + 1))) == 56320 && (c = 65536 + (c - 55296 << 10) + (y - 56320), w++), b += c < 128 ? 1 : c < 2048 ? 2 : c < 65536 ? 3 : 4;
          for (_ = new n.Buf8(b), w = h2 = 0; h2 < b; w++)
            (64512 & (c = m.charCodeAt(w))) == 55296 && w + 1 < g && (64512 & (y = m.charCodeAt(w + 1))) == 56320 && (c = 65536 + (c - 55296 << 10) + (y - 56320), w++), c < 128 ? _[h2++] = c : (c < 2048 ? _[h2++] = 192 | c >>> 6 : (c < 65536 ? _[h2++] = 224 | c >>> 12 : (_[h2++] = 240 | c >>> 18, _[h2++] = 128 | c >>> 12 & 63), _[h2++] = 128 | c >>> 6 & 63), _[h2++] = 128 | 63 & c);
          return _;
        }, a.buf2binstring = function(m) {
          return p(m, m.length);
        }, a.binstring2buf = function(m) {
          for (var _ = new n.Buf8(m.length), c = 0, y = _.length; c < y; c++)
            _[c] = m.charCodeAt(c);
          return _;
        }, a.buf2string = function(m, _) {
          var c, y, w, h2, g = _ || m.length, b = new Array(2 * g);
          for (c = y = 0; c < g; )
            if ((w = m[c++]) < 128)
              b[y++] = w;
            else if (4 < (h2 = i[w]))
              b[y++] = 65533, c += h2 - 1;
            else {
              for (w &= h2 === 2 ? 31 : h2 === 3 ? 15 : 7; 1 < h2 && c < g; )
                w = w << 6 | 63 & m[c++], h2--;
              1 < h2 ? b[y++] = 65533 : w < 65536 ? b[y++] = w : (w -= 65536, b[y++] = 55296 | w >> 10 & 1023, b[y++] = 56320 | 1023 & w);
            }
          return p(b, y);
        }, a.utf8border = function(m, _) {
          var c;
          for ((_ = _ || m.length) > m.length && (_ = m.length), c = _ - 1; 0 <= c && (192 & m[c]) == 128; )
            c--;
          return c < 0 || c === 0 ? _ : c + i[m[c]] > _ ? c : _;
        };
      }, { "./common": 41 }], 43: [function(e, r, a) {
        r.exports = function(n, u, l, i) {
          for (var d = 65535 & n | 0, p = n >>> 16 & 65535 | 0, m = 0; l !== 0; ) {
            for (l -= m = 2e3 < l ? 2e3 : l; p = p + (d = d + u[i++] | 0) | 0, --m; )
              ;
            d %= 65521, p %= 65521;
          }
          return d | p << 16 | 0;
        };
      }, {}], 44: [function(e, r, a) {
        r.exports = { Z_NO_FLUSH: 0, Z_PARTIAL_FLUSH: 1, Z_SYNC_FLUSH: 2, Z_FULL_FLUSH: 3, Z_FINISH: 4, Z_BLOCK: 5, Z_TREES: 6, Z_OK: 0, Z_STREAM_END: 1, Z_NEED_DICT: 2, Z_ERRNO: -1, Z_STREAM_ERROR: -2, Z_DATA_ERROR: -3, Z_BUF_ERROR: -5, Z_NO_COMPRESSION: 0, Z_BEST_SPEED: 1, Z_BEST_COMPRESSION: 9, Z_DEFAULT_COMPRESSION: -1, Z_FILTERED: 1, Z_HUFFMAN_ONLY: 2, Z_RLE: 3, Z_FIXED: 4, Z_DEFAULT_STRATEGY: 0, Z_BINARY: 0, Z_TEXT: 1, Z_UNKNOWN: 2, Z_DEFLATED: 8 };
      }, {}], 45: [function(e, r, a) {
        var n = function() {
          for (var u, l = [], i = 0; i < 256; i++) {
            u = i;
            for (var d = 0; d < 8; d++)
              u = 1 & u ? 3988292384 ^ u >>> 1 : u >>> 1;
            l[i] = u;
          }
          return l;
        }();
        r.exports = function(u, l, i, d) {
          var p = n, m = d + i;
          u ^= -1;
          for (var _ = d; _ < m; _++)
            u = u >>> 8 ^ p[255 & (u ^ l[_])];
          return -1 ^ u;
        };
      }, {}], 46: [function(e, r, a) {
        var n, u = e("../utils/common"), l = e("./trees"), i = e("./adler32"), d = e("./crc32"), p = e("./messages"), m = 0, _ = 4, c = 0, y = -2, w = -1, h2 = 4, g = 2, b = 8, C = 9, N = 286, P = 30, U = 19, I = 2 * N + 1, H = 15, T = 3, V = 258, ee = V + T + 1, S = 42, R = 113, o = 1, D = 2, re = 3, M = 4;
        function ne(s, O) {
          return s.msg = p[O], O;
        }
        function W(s) {
          return (s << 1) - (4 < s ? 9 : 0);
        }
        function te(s) {
          for (var O = s.length; 0 <= --O; )
            s[O] = 0;
        }
        function B(s) {
          var O = s.state, F = O.pending;
          F > s.avail_out && (F = s.avail_out), F !== 0 && (u.arraySet(s.output, O.pending_buf, O.pending_out, F, s.next_out), s.next_out += F, O.pending_out += F, s.total_out += F, s.avail_out -= F, O.pending -= F, O.pending === 0 && (O.pending_out = 0));
        }
        function x(s, O) {
          l._tr_flush_block(s, 0 <= s.block_start ? s.block_start : -1, s.strstart - s.block_start, O), s.block_start = s.strstart, B(s.strm);
        }
        function Q(s, O) {
          s.pending_buf[s.pending++] = O;
        }
        function K(s, O) {
          s.pending_buf[s.pending++] = O >>> 8 & 255, s.pending_buf[s.pending++] = 255 & O;
        }
        function G(s, O) {
          var F, k, v = s.max_chain_length, A = s.strstart, L = s.prev_length, j = s.nice_match, E = s.strstart > s.w_size - ee ? s.strstart - (s.w_size - ee) : 0, Z = s.window, Y = s.w_mask, $ = s.prev, J = s.strstart + V, le = Z[A + L - 1], ie = Z[A + L];
          s.prev_length >= s.good_match && (v >>= 2), j > s.lookahead && (j = s.lookahead);
          do
            if (Z[(F = O) + L] === ie && Z[F + L - 1] === le && Z[F] === Z[A] && Z[++F] === Z[A + 1]) {
              A += 2, F++;
              do
                ;
              while (Z[++A] === Z[++F] && Z[++A] === Z[++F] && Z[++A] === Z[++F] && Z[++A] === Z[++F] && Z[++A] === Z[++F] && Z[++A] === Z[++F] && Z[++A] === Z[++F] && Z[++A] === Z[++F] && A < J);
              if (k = V - (J - A), A = J - V, L < k) {
                if (s.match_start = O, j <= (L = k))
                  break;
                le = Z[A + L - 1], ie = Z[A + L];
              }
            }
          while ((O = $[O & Y]) > E && --v != 0);
          return L <= s.lookahead ? L : s.lookahead;
        }
        function he(s) {
          var O, F, k, v, A, L, j, E, Z, Y, $ = s.w_size;
          do {
            if (v = s.window_size - s.lookahead - s.strstart, s.strstart >= $ + ($ - ee)) {
              for (u.arraySet(s.window, s.window, $, $, 0), s.match_start -= $, s.strstart -= $, s.block_start -= $, O = F = s.hash_size; k = s.head[--O], s.head[O] = $ <= k ? k - $ : 0, --F; )
                ;
              for (O = F = $; k = s.prev[--O], s.prev[O] = $ <= k ? k - $ : 0, --F; )
                ;
              v += $;
            }
            if (s.strm.avail_in === 0)
              break;
            if (L = s.strm, j = s.window, E = s.strstart + s.lookahead, Z = v, Y = void 0, Y = L.avail_in, Z < Y && (Y = Z), F = Y === 0 ? 0 : (L.avail_in -= Y, u.arraySet(j, L.input, L.next_in, Y, E), L.state.wrap === 1 ? L.adler = i(L.adler, j, Y, E) : L.state.wrap === 2 && (L.adler = d(L.adler, j, Y, E)), L.next_in += Y, L.total_in += Y, Y), s.lookahead += F, s.lookahead + s.insert >= T)
              for (A = s.strstart - s.insert, s.ins_h = s.window[A], s.ins_h = (s.ins_h << s.hash_shift ^ s.window[A + 1]) & s.hash_mask; s.insert && (s.ins_h = (s.ins_h << s.hash_shift ^ s.window[A + T - 1]) & s.hash_mask, s.prev[A & s.w_mask] = s.head[s.ins_h], s.head[s.ins_h] = A, A++, s.insert--, !(s.lookahead + s.insert < T)); )
                ;
          } while (s.lookahead < ee && s.strm.avail_in !== 0);
        }
        function be(s, O) {
          for (var F, k; ; ) {
            if (s.lookahead < ee) {
              if (he(s), s.lookahead < ee && O === m)
                return o;
              if (s.lookahead === 0)
                break;
            }
            if (F = 0, s.lookahead >= T && (s.ins_h = (s.ins_h << s.hash_shift ^ s.window[s.strstart + T - 1]) & s.hash_mask, F = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h], s.head[s.ins_h] = s.strstart), F !== 0 && s.strstart - F <= s.w_size - ee && (s.match_length = G(s, F)), s.match_length >= T)
              if (k = l._tr_tally(s, s.strstart - s.match_start, s.match_length - T), s.lookahead -= s.match_length, s.match_length <= s.max_lazy_match && s.lookahead >= T) {
                for (s.match_length--; s.strstart++, s.ins_h = (s.ins_h << s.hash_shift ^ s.window[s.strstart + T - 1]) & s.hash_mask, F = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h], s.head[s.ins_h] = s.strstart, --s.match_length != 0; )
                  ;
                s.strstart++;
              } else
                s.strstart += s.match_length, s.match_length = 0, s.ins_h = s.window[s.strstart], s.ins_h = (s.ins_h << s.hash_shift ^ s.window[s.strstart + 1]) & s.hash_mask;
            else
              k = l._tr_tally(s, 0, s.window[s.strstart]), s.lookahead--, s.strstart++;
            if (k && (x(s, false), s.strm.avail_out === 0))
              return o;
          }
          return s.insert = s.strstart < T - 1 ? s.strstart : T - 1, O === _ ? (x(s, true), s.strm.avail_out === 0 ? re : M) : s.last_lit && (x(s, false), s.strm.avail_out === 0) ? o : D;
        }
        function se(s, O) {
          for (var F, k, v; ; ) {
            if (s.lookahead < ee) {
              if (he(s), s.lookahead < ee && O === m)
                return o;
              if (s.lookahead === 0)
                break;
            }
            if (F = 0, s.lookahead >= T && (s.ins_h = (s.ins_h << s.hash_shift ^ s.window[s.strstart + T - 1]) & s.hash_mask, F = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h], s.head[s.ins_h] = s.strstart), s.prev_length = s.match_length, s.prev_match = s.match_start, s.match_length = T - 1, F !== 0 && s.prev_length < s.max_lazy_match && s.strstart - F <= s.w_size - ee && (s.match_length = G(s, F), s.match_length <= 5 && (s.strategy === 1 || s.match_length === T && 4096 < s.strstart - s.match_start) && (s.match_length = T - 1)), s.prev_length >= T && s.match_length <= s.prev_length) {
              for (v = s.strstart + s.lookahead - T, k = l._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - T), s.lookahead -= s.prev_length - 1, s.prev_length -= 2; ++s.strstart <= v && (s.ins_h = (s.ins_h << s.hash_shift ^ s.window[s.strstart + T - 1]) & s.hash_mask, F = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h], s.head[s.ins_h] = s.strstart), --s.prev_length != 0; )
                ;
              if (s.match_available = 0, s.match_length = T - 1, s.strstart++, k && (x(s, false), s.strm.avail_out === 0))
                return o;
            } else if (s.match_available) {
              if ((k = l._tr_tally(s, 0, s.window[s.strstart - 1])) && x(s, false), s.strstart++, s.lookahead--, s.strm.avail_out === 0)
                return o;
            } else
              s.match_available = 1, s.strstart++, s.lookahead--;
          }
          return s.match_available && (k = l._tr_tally(s, 0, s.window[s.strstart - 1]), s.match_available = 0), s.insert = s.strstart < T - 1 ? s.strstart : T - 1, O === _ ? (x(s, true), s.strm.avail_out === 0 ? re : M) : s.last_lit && (x(s, false), s.strm.avail_out === 0) ? o : D;
        }
        function oe(s, O, F, k, v) {
          this.good_length = s, this.max_lazy = O, this.nice_length = F, this.max_chain = k, this.func = v;
        }
        function me() {
          this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = b, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new u.Buf16(2 * I), this.dyn_dtree = new u.Buf16(2 * (2 * P + 1)), this.bl_tree = new u.Buf16(2 * (2 * U + 1)), te(this.dyn_ltree), te(this.dyn_dtree), te(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new u.Buf16(H + 1), this.heap = new u.Buf16(2 * N + 1), te(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new u.Buf16(2 * N + 1), te(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;
        }
        function fe(s) {
          var O;
          return s && s.state ? (s.total_in = s.total_out = 0, s.data_type = g, (O = s.state).pending = 0, O.pending_out = 0, O.wrap < 0 && (O.wrap = -O.wrap), O.status = O.wrap ? S : R, s.adler = O.wrap === 2 ? 0 : 1, O.last_flush = m, l._tr_init(O), c) : ne(s, y);
        }
        function we(s) {
          var O = fe(s);
          return O === c && function(F) {
            F.window_size = 2 * F.w_size, te(F.head), F.max_lazy_match = n[F.level].max_lazy, F.good_match = n[F.level].good_length, F.nice_match = n[F.level].nice_length, F.max_chain_length = n[F.level].max_chain, F.strstart = 0, F.block_start = 0, F.lookahead = 0, F.insert = 0, F.match_length = F.prev_length = T - 1, F.match_available = 0, F.ins_h = 0;
          }(s.state), O;
        }
        function ke(s, O, F, k, v, A) {
          if (!s)
            return y;
          var L = 1;
          if (O === w && (O = 6), k < 0 ? (L = 0, k = -k) : 15 < k && (L = 2, k -= 16), v < 1 || C < v || F !== b || k < 8 || 15 < k || O < 0 || 9 < O || A < 0 || h2 < A)
            return ne(s, y);
          k === 8 && (k = 9);
          var j = new me();
          return (s.state = j).strm = s, j.wrap = L, j.gzhead = null, j.w_bits = k, j.w_size = 1 << j.w_bits, j.w_mask = j.w_size - 1, j.hash_bits = v + 7, j.hash_size = 1 << j.hash_bits, j.hash_mask = j.hash_size - 1, j.hash_shift = ~~((j.hash_bits + T - 1) / T), j.window = new u.Buf8(2 * j.w_size), j.head = new u.Buf16(j.hash_size), j.prev = new u.Buf16(j.w_size), j.lit_bufsize = 1 << v + 6, j.pending_buf_size = 4 * j.lit_bufsize, j.pending_buf = new u.Buf8(j.pending_buf_size), j.d_buf = 1 * j.lit_bufsize, j.l_buf = 3 * j.lit_bufsize, j.level = O, j.strategy = A, j.method = F, we(s);
        }
        n = [new oe(0, 0, 0, 0, function(s, O) {
          var F = 65535;
          for (F > s.pending_buf_size - 5 && (F = s.pending_buf_size - 5); ; ) {
            if (s.lookahead <= 1) {
              if (he(s), s.lookahead === 0 && O === m)
                return o;
              if (s.lookahead === 0)
                break;
            }
            s.strstart += s.lookahead, s.lookahead = 0;
            var k = s.block_start + F;
            if ((s.strstart === 0 || s.strstart >= k) && (s.lookahead = s.strstart - k, s.strstart = k, x(s, false), s.strm.avail_out === 0) || s.strstart - s.block_start >= s.w_size - ee && (x(s, false), s.strm.avail_out === 0))
              return o;
          }
          return s.insert = 0, O === _ ? (x(s, true), s.strm.avail_out === 0 ? re : M) : (s.strstart > s.block_start && (x(s, false), s.strm.avail_out), o);
        }), new oe(4, 4, 8, 4, be), new oe(4, 5, 16, 8, be), new oe(4, 6, 32, 32, be), new oe(4, 4, 16, 16, se), new oe(8, 16, 32, 32, se), new oe(8, 16, 128, 128, se), new oe(8, 32, 128, 256, se), new oe(32, 128, 258, 1024, se), new oe(32, 258, 258, 4096, se)], a.deflateInit = function(s, O) {
          return ke(s, O, b, 15, 8, 0);
        }, a.deflateInit2 = ke, a.deflateReset = we, a.deflateResetKeep = fe, a.deflateSetHeader = function(s, O) {
          return s && s.state ? s.state.wrap !== 2 ? y : (s.state.gzhead = O, c) : y;
        }, a.deflate = function(s, O) {
          var F, k, v, A;
          if (!s || !s.state || 5 < O || O < 0)
            return s ? ne(s, y) : y;
          if (k = s.state, !s.output || !s.input && s.avail_in !== 0 || k.status === 666 && O !== _)
            return ne(s, s.avail_out === 0 ? -5 : y);
          if (k.strm = s, F = k.last_flush, k.last_flush = O, k.status === S)
            if (k.wrap === 2)
              s.adler = 0, Q(k, 31), Q(k, 139), Q(k, 8), k.gzhead ? (Q(k, (k.gzhead.text ? 1 : 0) + (k.gzhead.hcrc ? 2 : 0) + (k.gzhead.extra ? 4 : 0) + (k.gzhead.name ? 8 : 0) + (k.gzhead.comment ? 16 : 0)), Q(k, 255 & k.gzhead.time), Q(k, k.gzhead.time >> 8 & 255), Q(k, k.gzhead.time >> 16 & 255), Q(k, k.gzhead.time >> 24 & 255), Q(k, k.level === 9 ? 2 : 2 <= k.strategy || k.level < 2 ? 4 : 0), Q(k, 255 & k.gzhead.os), k.gzhead.extra && k.gzhead.extra.length && (Q(k, 255 & k.gzhead.extra.length), Q(k, k.gzhead.extra.length >> 8 & 255)), k.gzhead.hcrc && (s.adler = d(s.adler, k.pending_buf, k.pending, 0)), k.gzindex = 0, k.status = 69) : (Q(k, 0), Q(k, 0), Q(k, 0), Q(k, 0), Q(k, 0), Q(k, k.level === 9 ? 2 : 2 <= k.strategy || k.level < 2 ? 4 : 0), Q(k, 3), k.status = R);
            else {
              var L = b + (k.w_bits - 8 << 4) << 8;
              L |= (2 <= k.strategy || k.level < 2 ? 0 : k.level < 6 ? 1 : k.level === 6 ? 2 : 3) << 6, k.strstart !== 0 && (L |= 32), L += 31 - L % 31, k.status = R, K(k, L), k.strstart !== 0 && (K(k, s.adler >>> 16), K(k, 65535 & s.adler)), s.adler = 1;
            }
          if (k.status === 69)
            if (k.gzhead.extra) {
              for (v = k.pending; k.gzindex < (65535 & k.gzhead.extra.length) && (k.pending !== k.pending_buf_size || (k.gzhead.hcrc && k.pending > v && (s.adler = d(s.adler, k.pending_buf, k.pending - v, v)), B(s), v = k.pending, k.pending !== k.pending_buf_size)); )
                Q(k, 255 & k.gzhead.extra[k.gzindex]), k.gzindex++;
              k.gzhead.hcrc && k.pending > v && (s.adler = d(s.adler, k.pending_buf, k.pending - v, v)), k.gzindex === k.gzhead.extra.length && (k.gzindex = 0, k.status = 73);
            } else
              k.status = 73;
          if (k.status === 73)
            if (k.gzhead.name) {
              v = k.pending;
              do {
                if (k.pending === k.pending_buf_size && (k.gzhead.hcrc && k.pending > v && (s.adler = d(s.adler, k.pending_buf, k.pending - v, v)), B(s), v = k.pending, k.pending === k.pending_buf_size)) {
                  A = 1;
                  break;
                }
                A = k.gzindex < k.gzhead.name.length ? 255 & k.gzhead.name.charCodeAt(k.gzindex++) : 0, Q(k, A);
              } while (A !== 0);
              k.gzhead.hcrc && k.pending > v && (s.adler = d(s.adler, k.pending_buf, k.pending - v, v)), A === 0 && (k.gzindex = 0, k.status = 91);
            } else
              k.status = 91;
          if (k.status === 91)
            if (k.gzhead.comment) {
              v = k.pending;
              do {
                if (k.pending === k.pending_buf_size && (k.gzhead.hcrc && k.pending > v && (s.adler = d(s.adler, k.pending_buf, k.pending - v, v)), B(s), v = k.pending, k.pending === k.pending_buf_size)) {
                  A = 1;
                  break;
                }
                A = k.gzindex < k.gzhead.comment.length ? 255 & k.gzhead.comment.charCodeAt(k.gzindex++) : 0, Q(k, A);
              } while (A !== 0);
              k.gzhead.hcrc && k.pending > v && (s.adler = d(s.adler, k.pending_buf, k.pending - v, v)), A === 0 && (k.status = 103);
            } else
              k.status = 103;
          if (k.status === 103 && (k.gzhead.hcrc ? (k.pending + 2 > k.pending_buf_size && B(s), k.pending + 2 <= k.pending_buf_size && (Q(k, 255 & s.adler), Q(k, s.adler >> 8 & 255), s.adler = 0, k.status = R)) : k.status = R), k.pending !== 0) {
            if (B(s), s.avail_out === 0)
              return k.last_flush = -1, c;
          } else if (s.avail_in === 0 && W(O) <= W(F) && O !== _)
            return ne(s, -5);
          if (k.status === 666 && s.avail_in !== 0)
            return ne(s, -5);
          if (s.avail_in !== 0 || k.lookahead !== 0 || O !== m && k.status !== 666) {
            var j = k.strategy === 2 ? function(E, Z) {
              for (var Y; ; ) {
                if (E.lookahead === 0 && (he(E), E.lookahead === 0)) {
                  if (Z === m)
                    return o;
                  break;
                }
                if (E.match_length = 0, Y = l._tr_tally(E, 0, E.window[E.strstart]), E.lookahead--, E.strstart++, Y && (x(E, false), E.strm.avail_out === 0))
                  return o;
              }
              return E.insert = 0, Z === _ ? (x(E, true), E.strm.avail_out === 0 ? re : M) : E.last_lit && (x(E, false), E.strm.avail_out === 0) ? o : D;
            }(k, O) : k.strategy === 3 ? function(E, Z) {
              for (var Y, $, J, le, ie = E.window; ; ) {
                if (E.lookahead <= V) {
                  if (he(E), E.lookahead <= V && Z === m)
                    return o;
                  if (E.lookahead === 0)
                    break;
                }
                if (E.match_length = 0, E.lookahead >= T && 0 < E.strstart && ($ = ie[J = E.strstart - 1]) === ie[++J] && $ === ie[++J] && $ === ie[++J]) {
                  le = E.strstart + V;
                  do
                    ;
                  while ($ === ie[++J] && $ === ie[++J] && $ === ie[++J] && $ === ie[++J] && $ === ie[++J] && $ === ie[++J] && $ === ie[++J] && $ === ie[++J] && J < le);
                  E.match_length = V - (le - J), E.match_length > E.lookahead && (E.match_length = E.lookahead);
                }
                if (E.match_length >= T ? (Y = l._tr_tally(E, 1, E.match_length - T), E.lookahead -= E.match_length, E.strstart += E.match_length, E.match_length = 0) : (Y = l._tr_tally(E, 0, E.window[E.strstart]), E.lookahead--, E.strstart++), Y && (x(E, false), E.strm.avail_out === 0))
                  return o;
              }
              return E.insert = 0, Z === _ ? (x(E, true), E.strm.avail_out === 0 ? re : M) : E.last_lit && (x(E, false), E.strm.avail_out === 0) ? o : D;
            }(k, O) : n[k.level].func(k, O);
            if (j !== re && j !== M || (k.status = 666), j === o || j === re)
              return s.avail_out === 0 && (k.last_flush = -1), c;
            if (j === D && (O === 1 ? l._tr_align(k) : O !== 5 && (l._tr_stored_block(k, 0, 0, false), O === 3 && (te(k.head), k.lookahead === 0 && (k.strstart = 0, k.block_start = 0, k.insert = 0))), B(s), s.avail_out === 0))
              return k.last_flush = -1, c;
          }
          return O !== _ ? c : k.wrap <= 0 ? 1 : (k.wrap === 2 ? (Q(k, 255 & s.adler), Q(k, s.adler >> 8 & 255), Q(k, s.adler >> 16 & 255), Q(k, s.adler >> 24 & 255), Q(k, 255 & s.total_in), Q(k, s.total_in >> 8 & 255), Q(k, s.total_in >> 16 & 255), Q(k, s.total_in >> 24 & 255)) : (K(k, s.adler >>> 16), K(k, 65535 & s.adler)), B(s), 0 < k.wrap && (k.wrap = -k.wrap), k.pending !== 0 ? c : 1);
        }, a.deflateEnd = function(s) {
          var O;
          return s && s.state ? (O = s.state.status) !== S && O !== 69 && O !== 73 && O !== 91 && O !== 103 && O !== R && O !== 666 ? ne(s, y) : (s.state = null, O === R ? ne(s, -3) : c) : y;
        }, a.deflateSetDictionary = function(s, O) {
          var F, k, v, A, L, j, E, Z, Y = O.length;
          if (!s || !s.state || (A = (F = s.state).wrap) === 2 || A === 1 && F.status !== S || F.lookahead)
            return y;
          for (A === 1 && (s.adler = i(s.adler, O, Y, 0)), F.wrap = 0, Y >= F.w_size && (A === 0 && (te(F.head), F.strstart = 0, F.block_start = 0, F.insert = 0), Z = new u.Buf8(F.w_size), u.arraySet(Z, O, Y - F.w_size, F.w_size, 0), O = Z, Y = F.w_size), L = s.avail_in, j = s.next_in, E = s.input, s.avail_in = Y, s.next_in = 0, s.input = O, he(F); F.lookahead >= T; ) {
            for (k = F.strstart, v = F.lookahead - (T - 1); F.ins_h = (F.ins_h << F.hash_shift ^ F.window[k + T - 1]) & F.hash_mask, F.prev[k & F.w_mask] = F.head[F.ins_h], F.head[F.ins_h] = k, k++, --v; )
              ;
            F.strstart = k, F.lookahead = T - 1, he(F);
          }
          return F.strstart += F.lookahead, F.block_start = F.strstart, F.insert = F.lookahead, F.lookahead = 0, F.match_length = F.prev_length = T - 1, F.match_available = 0, s.next_in = j, s.input = E, s.avail_in = L, F.wrap = A, c;
        }, a.deflateInfo = "pako deflate (from Nodeca project)";
      }, { "../utils/common": 41, "./adler32": 43, "./crc32": 45, "./messages": 51, "./trees": 52 }], 47: [function(e, r, a) {
        r.exports = function() {
          this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = "", this.comment = "", this.hcrc = 0, this.done = false;
        };
      }, {}], 48: [function(e, r, a) {
        r.exports = function(n, u) {
          var l, i, d, p, m, _, c, y, w, h2, g, b, C, N, P, U, I, H, T, V, ee, S, R, o, D;
          l = n.state, i = n.next_in, o = n.input, d = i + (n.avail_in - 5), p = n.next_out, D = n.output, m = p - (u - n.avail_out), _ = p + (n.avail_out - 257), c = l.dmax, y = l.wsize, w = l.whave, h2 = l.wnext, g = l.window, b = l.hold, C = l.bits, N = l.lencode, P = l.distcode, U = (1 << l.lenbits) - 1, I = (1 << l.distbits) - 1;
          e:
            do {
              C < 15 && (b += o[i++] << C, C += 8, b += o[i++] << C, C += 8), H = N[b & U];
              t:
                for (; ; ) {
                  if (b >>>= T = H >>> 24, C -= T, (T = H >>> 16 & 255) === 0)
                    D[p++] = 65535 & H;
                  else {
                    if (!(16 & T)) {
                      if ((64 & T) == 0) {
                        H = N[(65535 & H) + (b & (1 << T) - 1)];
                        continue t;
                      }
                      if (32 & T) {
                        l.mode = 12;
                        break e;
                      }
                      n.msg = "invalid literal/length code", l.mode = 30;
                      break e;
                    }
                    V = 65535 & H, (T &= 15) && (C < T && (b += o[i++] << C, C += 8), V += b & (1 << T) - 1, b >>>= T, C -= T), C < 15 && (b += o[i++] << C, C += 8, b += o[i++] << C, C += 8), H = P[b & I];
                    r:
                      for (; ; ) {
                        if (b >>>= T = H >>> 24, C -= T, !(16 & (T = H >>> 16 & 255))) {
                          if ((64 & T) == 0) {
                            H = P[(65535 & H) + (b & (1 << T) - 1)];
                            continue r;
                          }
                          n.msg = "invalid distance code", l.mode = 30;
                          break e;
                        }
                        if (ee = 65535 & H, C < (T &= 15) && (b += o[i++] << C, (C += 8) < T && (b += o[i++] << C, C += 8)), c < (ee += b & (1 << T) - 1)) {
                          n.msg = "invalid distance too far back", l.mode = 30;
                          break e;
                        }
                        if (b >>>= T, C -= T, (T = p - m) < ee) {
                          if (w < (T = ee - T) && l.sane) {
                            n.msg = "invalid distance too far back", l.mode = 30;
                            break e;
                          }
                          if (R = g, (S = 0) === h2) {
                            if (S += y - T, T < V) {
                              for (V -= T; D[p++] = g[S++], --T; )
                                ;
                              S = p - ee, R = D;
                            }
                          } else if (h2 < T) {
                            if (S += y + h2 - T, (T -= h2) < V) {
                              for (V -= T; D[p++] = g[S++], --T; )
                                ;
                              if (S = 0, h2 < V) {
                                for (V -= T = h2; D[p++] = g[S++], --T; )
                                  ;
                                S = p - ee, R = D;
                              }
                            }
                          } else if (S += h2 - T, T < V) {
                            for (V -= T; D[p++] = g[S++], --T; )
                              ;
                            S = p - ee, R = D;
                          }
                          for (; 2 < V; )
                            D[p++] = R[S++], D[p++] = R[S++], D[p++] = R[S++], V -= 3;
                          V && (D[p++] = R[S++], 1 < V && (D[p++] = R[S++]));
                        } else {
                          for (S = p - ee; D[p++] = D[S++], D[p++] = D[S++], D[p++] = D[S++], 2 < (V -= 3); )
                            ;
                          V && (D[p++] = D[S++], 1 < V && (D[p++] = D[S++]));
                        }
                        break;
                      }
                  }
                  break;
                }
            } while (i < d && p < _);
          i -= V = C >> 3, b &= (1 << (C -= V << 3)) - 1, n.next_in = i, n.next_out = p, n.avail_in = i < d ? d - i + 5 : 5 - (i - d), n.avail_out = p < _ ? _ - p + 257 : 257 - (p - _), l.hold = b, l.bits = C;
        };
      }, {}], 49: [function(e, r, a) {
        var n = e("../utils/common"), u = e("./adler32"), l = e("./crc32"), i = e("./inffast"), d = e("./inftrees"), p = 1, m = 2, _ = 0, c = -2, y = 1, w = 852, h2 = 592;
        function g(S) {
          return (S >>> 24 & 255) + (S >>> 8 & 65280) + ((65280 & S) << 8) + ((255 & S) << 24);
        }
        function b() {
          this.mode = 0, this.last = false, this.wrap = 0, this.havedict = false, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new n.Buf16(320), this.work = new n.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;
        }
        function C(S) {
          var R;
          return S && S.state ? (R = S.state, S.total_in = S.total_out = R.total = 0, S.msg = "", R.wrap && (S.adler = 1 & R.wrap), R.mode = y, R.last = 0, R.havedict = 0, R.dmax = 32768, R.head = null, R.hold = 0, R.bits = 0, R.lencode = R.lendyn = new n.Buf32(w), R.distcode = R.distdyn = new n.Buf32(h2), R.sane = 1, R.back = -1, _) : c;
        }
        function N(S) {
          var R;
          return S && S.state ? ((R = S.state).wsize = 0, R.whave = 0, R.wnext = 0, C(S)) : c;
        }
        function P(S, R) {
          var o, D;
          return S && S.state ? (D = S.state, R < 0 ? (o = 0, R = -R) : (o = 1 + (R >> 4), R < 48 && (R &= 15)), R && (R < 8 || 15 < R) ? c : (D.window !== null && D.wbits !== R && (D.window = null), D.wrap = o, D.wbits = R, N(S))) : c;
        }
        function U(S, R) {
          var o, D;
          return S ? (D = new b(), (S.state = D).window = null, (o = P(S, R)) !== _ && (S.state = null), o) : c;
        }
        var I, H, T = true;
        function V(S) {
          if (T) {
            var R;
            for (I = new n.Buf32(512), H = new n.Buf32(32), R = 0; R < 144; )
              S.lens[R++] = 8;
            for (; R < 256; )
              S.lens[R++] = 9;
            for (; R < 280; )
              S.lens[R++] = 7;
            for (; R < 288; )
              S.lens[R++] = 8;
            for (d(p, S.lens, 0, 288, I, 0, S.work, { bits: 9 }), R = 0; R < 32; )
              S.lens[R++] = 5;
            d(m, S.lens, 0, 32, H, 0, S.work, { bits: 5 }), T = false;
          }
          S.lencode = I, S.lenbits = 9, S.distcode = H, S.distbits = 5;
        }
        function ee(S, R, o, D) {
          var re, M = S.state;
          return M.window === null && (M.wsize = 1 << M.wbits, M.wnext = 0, M.whave = 0, M.window = new n.Buf8(M.wsize)), D >= M.wsize ? (n.arraySet(M.window, R, o - M.wsize, M.wsize, 0), M.wnext = 0, M.whave = M.wsize) : (D < (re = M.wsize - M.wnext) && (re = D), n.arraySet(M.window, R, o - D, re, M.wnext), (D -= re) ? (n.arraySet(M.window, R, o - D, D, 0), M.wnext = D, M.whave = M.wsize) : (M.wnext += re, M.wnext === M.wsize && (M.wnext = 0), M.whave < M.wsize && (M.whave += re))), 0;
        }
        a.inflateReset = N, a.inflateReset2 = P, a.inflateResetKeep = C, a.inflateInit = function(S) {
          return U(S, 15);
        }, a.inflateInit2 = U, a.inflate = function(S, R) {
          var o, D, re, M, ne, W, te, B, x, Q, K, G, he, be, se, oe, me, fe, we, ke, s, O, F, k, v = 0, A = new n.Buf8(4), L = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
          if (!S || !S.state || !S.output || !S.input && S.avail_in !== 0)
            return c;
          (o = S.state).mode === 12 && (o.mode = 13), ne = S.next_out, re = S.output, te = S.avail_out, M = S.next_in, D = S.input, W = S.avail_in, B = o.hold, x = o.bits, Q = W, K = te, O = _;
          e:
            for (; ; )
              switch (o.mode) {
                case y:
                  if (o.wrap === 0) {
                    o.mode = 13;
                    break;
                  }
                  for (; x < 16; ) {
                    if (W === 0)
                      break e;
                    W--, B += D[M++] << x, x += 8;
                  }
                  if (2 & o.wrap && B === 35615) {
                    A[o.check = 0] = 255 & B, A[1] = B >>> 8 & 255, o.check = l(o.check, A, 2, 0), x = B = 0, o.mode = 2;
                    break;
                  }
                  if (o.flags = 0, o.head && (o.head.done = false), !(1 & o.wrap) || (((255 & B) << 8) + (B >> 8)) % 31) {
                    S.msg = "incorrect header check", o.mode = 30;
                    break;
                  }
                  if ((15 & B) != 8) {
                    S.msg = "unknown compression method", o.mode = 30;
                    break;
                  }
                  if (x -= 4, s = 8 + (15 & (B >>>= 4)), o.wbits === 0)
                    o.wbits = s;
                  else if (s > o.wbits) {
                    S.msg = "invalid window size", o.mode = 30;
                    break;
                  }
                  o.dmax = 1 << s, S.adler = o.check = 1, o.mode = 512 & B ? 10 : 12, x = B = 0;
                  break;
                case 2:
                  for (; x < 16; ) {
                    if (W === 0)
                      break e;
                    W--, B += D[M++] << x, x += 8;
                  }
                  if (o.flags = B, (255 & o.flags) != 8) {
                    S.msg = "unknown compression method", o.mode = 30;
                    break;
                  }
                  if (57344 & o.flags) {
                    S.msg = "unknown header flags set", o.mode = 30;
                    break;
                  }
                  o.head && (o.head.text = B >> 8 & 1), 512 & o.flags && (A[0] = 255 & B, A[1] = B >>> 8 & 255, o.check = l(o.check, A, 2, 0)), x = B = 0, o.mode = 3;
                case 3:
                  for (; x < 32; ) {
                    if (W === 0)
                      break e;
                    W--, B += D[M++] << x, x += 8;
                  }
                  o.head && (o.head.time = B), 512 & o.flags && (A[0] = 255 & B, A[1] = B >>> 8 & 255, A[2] = B >>> 16 & 255, A[3] = B >>> 24 & 255, o.check = l(o.check, A, 4, 0)), x = B = 0, o.mode = 4;
                case 4:
                  for (; x < 16; ) {
                    if (W === 0)
                      break e;
                    W--, B += D[M++] << x, x += 8;
                  }
                  o.head && (o.head.xflags = 255 & B, o.head.os = B >> 8), 512 & o.flags && (A[0] = 255 & B, A[1] = B >>> 8 & 255, o.check = l(o.check, A, 2, 0)), x = B = 0, o.mode = 5;
                case 5:
                  if (1024 & o.flags) {
                    for (; x < 16; ) {
                      if (W === 0)
                        break e;
                      W--, B += D[M++] << x, x += 8;
                    }
                    o.length = B, o.head && (o.head.extra_len = B), 512 & o.flags && (A[0] = 255 & B, A[1] = B >>> 8 & 255, o.check = l(o.check, A, 2, 0)), x = B = 0;
                  } else
                    o.head && (o.head.extra = null);
                  o.mode = 6;
                case 6:
                  if (1024 & o.flags && (W < (G = o.length) && (G = W), G && (o.head && (s = o.head.extra_len - o.length, o.head.extra || (o.head.extra = new Array(o.head.extra_len)), n.arraySet(o.head.extra, D, M, G, s)), 512 & o.flags && (o.check = l(o.check, D, G, M)), W -= G, M += G, o.length -= G), o.length))
                    break e;
                  o.length = 0, o.mode = 7;
                case 7:
                  if (2048 & o.flags) {
                    if (W === 0)
                      break e;
                    for (G = 0; s = D[M + G++], o.head && s && o.length < 65536 && (o.head.name += String.fromCharCode(s)), s && G < W; )
                      ;
                    if (512 & o.flags && (o.check = l(o.check, D, G, M)), W -= G, M += G, s)
                      break e;
                  } else
                    o.head && (o.head.name = null);
                  o.length = 0, o.mode = 8;
                case 8:
                  if (4096 & o.flags) {
                    if (W === 0)
                      break e;
                    for (G = 0; s = D[M + G++], o.head && s && o.length < 65536 && (o.head.comment += String.fromCharCode(s)), s && G < W; )
                      ;
                    if (512 & o.flags && (o.check = l(o.check, D, G, M)), W -= G, M += G, s)
                      break e;
                  } else
                    o.head && (o.head.comment = null);
                  o.mode = 9;
                case 9:
                  if (512 & o.flags) {
                    for (; x < 16; ) {
                      if (W === 0)
                        break e;
                      W--, B += D[M++] << x, x += 8;
                    }
                    if (B !== (65535 & o.check)) {
                      S.msg = "header crc mismatch", o.mode = 30;
                      break;
                    }
                    x = B = 0;
                  }
                  o.head && (o.head.hcrc = o.flags >> 9 & 1, o.head.done = true), S.adler = o.check = 0, o.mode = 12;
                  break;
                case 10:
                  for (; x < 32; ) {
                    if (W === 0)
                      break e;
                    W--, B += D[M++] << x, x += 8;
                  }
                  S.adler = o.check = g(B), x = B = 0, o.mode = 11;
                case 11:
                  if (o.havedict === 0)
                    return S.next_out = ne, S.avail_out = te, S.next_in = M, S.avail_in = W, o.hold = B, o.bits = x, 2;
                  S.adler = o.check = 1, o.mode = 12;
                case 12:
                  if (R === 5 || R === 6)
                    break e;
                case 13:
                  if (o.last) {
                    B >>>= 7 & x, x -= 7 & x, o.mode = 27;
                    break;
                  }
                  for (; x < 3; ) {
                    if (W === 0)
                      break e;
                    W--, B += D[M++] << x, x += 8;
                  }
                  switch (o.last = 1 & B, x -= 1, 3 & (B >>>= 1)) {
                    case 0:
                      o.mode = 14;
                      break;
                    case 1:
                      if (V(o), o.mode = 20, R !== 6)
                        break;
                      B >>>= 2, x -= 2;
                      break e;
                    case 2:
                      o.mode = 17;
                      break;
                    case 3:
                      S.msg = "invalid block type", o.mode = 30;
                  }
                  B >>>= 2, x -= 2;
                  break;
                case 14:
                  for (B >>>= 7 & x, x -= 7 & x; x < 32; ) {
                    if (W === 0)
                      break e;
                    W--, B += D[M++] << x, x += 8;
                  }
                  if ((65535 & B) != (B >>> 16 ^ 65535)) {
                    S.msg = "invalid stored block lengths", o.mode = 30;
                    break;
                  }
                  if (o.length = 65535 & B, x = B = 0, o.mode = 15, R === 6)
                    break e;
                case 15:
                  o.mode = 16;
                case 16:
                  if (G = o.length) {
                    if (W < G && (G = W), te < G && (G = te), G === 0)
                      break e;
                    n.arraySet(re, D, M, G, ne), W -= G, M += G, te -= G, ne += G, o.length -= G;
                    break;
                  }
                  o.mode = 12;
                  break;
                case 17:
                  for (; x < 14; ) {
                    if (W === 0)
                      break e;
                    W--, B += D[M++] << x, x += 8;
                  }
                  if (o.nlen = 257 + (31 & B), B >>>= 5, x -= 5, o.ndist = 1 + (31 & B), B >>>= 5, x -= 5, o.ncode = 4 + (15 & B), B >>>= 4, x -= 4, 286 < o.nlen || 30 < o.ndist) {
                    S.msg = "too many length or distance symbols", o.mode = 30;
                    break;
                  }
                  o.have = 0, o.mode = 18;
                case 18:
                  for (; o.have < o.ncode; ) {
                    for (; x < 3; ) {
                      if (W === 0)
                        break e;
                      W--, B += D[M++] << x, x += 8;
                    }
                    o.lens[L[o.have++]] = 7 & B, B >>>= 3, x -= 3;
                  }
                  for (; o.have < 19; )
                    o.lens[L[o.have++]] = 0;
                  if (o.lencode = o.lendyn, o.lenbits = 7, F = { bits: o.lenbits }, O = d(0, o.lens, 0, 19, o.lencode, 0, o.work, F), o.lenbits = F.bits, O) {
                    S.msg = "invalid code lengths set", o.mode = 30;
                    break;
                  }
                  o.have = 0, o.mode = 19;
                case 19:
                  for (; o.have < o.nlen + o.ndist; ) {
                    for (; oe = (v = o.lencode[B & (1 << o.lenbits) - 1]) >>> 16 & 255, me = 65535 & v, !((se = v >>> 24) <= x); ) {
                      if (W === 0)
                        break e;
                      W--, B += D[M++] << x, x += 8;
                    }
                    if (me < 16)
                      B >>>= se, x -= se, o.lens[o.have++] = me;
                    else {
                      if (me === 16) {
                        for (k = se + 2; x < k; ) {
                          if (W === 0)
                            break e;
                          W--, B += D[M++] << x, x += 8;
                        }
                        if (B >>>= se, x -= se, o.have === 0) {
                          S.msg = "invalid bit length repeat", o.mode = 30;
                          break;
                        }
                        s = o.lens[o.have - 1], G = 3 + (3 & B), B >>>= 2, x -= 2;
                      } else if (me === 17) {
                        for (k = se + 3; x < k; ) {
                          if (W === 0)
                            break e;
                          W--, B += D[M++] << x, x += 8;
                        }
                        x -= se, s = 0, G = 3 + (7 & (B >>>= se)), B >>>= 3, x -= 3;
                      } else {
                        for (k = se + 7; x < k; ) {
                          if (W === 0)
                            break e;
                          W--, B += D[M++] << x, x += 8;
                        }
                        x -= se, s = 0, G = 11 + (127 & (B >>>= se)), B >>>= 7, x -= 7;
                      }
                      if (o.have + G > o.nlen + o.ndist) {
                        S.msg = "invalid bit length repeat", o.mode = 30;
                        break;
                      }
                      for (; G--; )
                        o.lens[o.have++] = s;
                    }
                  }
                  if (o.mode === 30)
                    break;
                  if (o.lens[256] === 0) {
                    S.msg = "invalid code -- missing end-of-block", o.mode = 30;
                    break;
                  }
                  if (o.lenbits = 9, F = { bits: o.lenbits }, O = d(p, o.lens, 0, o.nlen, o.lencode, 0, o.work, F), o.lenbits = F.bits, O) {
                    S.msg = "invalid literal/lengths set", o.mode = 30;
                    break;
                  }
                  if (o.distbits = 6, o.distcode = o.distdyn, F = { bits: o.distbits }, O = d(m, o.lens, o.nlen, o.ndist, o.distcode, 0, o.work, F), o.distbits = F.bits, O) {
                    S.msg = "invalid distances set", o.mode = 30;
                    break;
                  }
                  if (o.mode = 20, R === 6)
                    break e;
                case 20:
                  o.mode = 21;
                case 21:
                  if (6 <= W && 258 <= te) {
                    S.next_out = ne, S.avail_out = te, S.next_in = M, S.avail_in = W, o.hold = B, o.bits = x, i(S, K), ne = S.next_out, re = S.output, te = S.avail_out, M = S.next_in, D = S.input, W = S.avail_in, B = o.hold, x = o.bits, o.mode === 12 && (o.back = -1);
                    break;
                  }
                  for (o.back = 0; oe = (v = o.lencode[B & (1 << o.lenbits) - 1]) >>> 16 & 255, me = 65535 & v, !((se = v >>> 24) <= x); ) {
                    if (W === 0)
                      break e;
                    W--, B += D[M++] << x, x += 8;
                  }
                  if (oe && (240 & oe) == 0) {
                    for (fe = se, we = oe, ke = me; oe = (v = o.lencode[ke + ((B & (1 << fe + we) - 1) >> fe)]) >>> 16 & 255, me = 65535 & v, !(fe + (se = v >>> 24) <= x); ) {
                      if (W === 0)
                        break e;
                      W--, B += D[M++] << x, x += 8;
                    }
                    B >>>= fe, x -= fe, o.back += fe;
                  }
                  if (B >>>= se, x -= se, o.back += se, o.length = me, oe === 0) {
                    o.mode = 26;
                    break;
                  }
                  if (32 & oe) {
                    o.back = -1, o.mode = 12;
                    break;
                  }
                  if (64 & oe) {
                    S.msg = "invalid literal/length code", o.mode = 30;
                    break;
                  }
                  o.extra = 15 & oe, o.mode = 22;
                case 22:
                  if (o.extra) {
                    for (k = o.extra; x < k; ) {
                      if (W === 0)
                        break e;
                      W--, B += D[M++] << x, x += 8;
                    }
                    o.length += B & (1 << o.extra) - 1, B >>>= o.extra, x -= o.extra, o.back += o.extra;
                  }
                  o.was = o.length, o.mode = 23;
                case 23:
                  for (; oe = (v = o.distcode[B & (1 << o.distbits) - 1]) >>> 16 & 255, me = 65535 & v, !((se = v >>> 24) <= x); ) {
                    if (W === 0)
                      break e;
                    W--, B += D[M++] << x, x += 8;
                  }
                  if ((240 & oe) == 0) {
                    for (fe = se, we = oe, ke = me; oe = (v = o.distcode[ke + ((B & (1 << fe + we) - 1) >> fe)]) >>> 16 & 255, me = 65535 & v, !(fe + (se = v >>> 24) <= x); ) {
                      if (W === 0)
                        break e;
                      W--, B += D[M++] << x, x += 8;
                    }
                    B >>>= fe, x -= fe, o.back += fe;
                  }
                  if (B >>>= se, x -= se, o.back += se, 64 & oe) {
                    S.msg = "invalid distance code", o.mode = 30;
                    break;
                  }
                  o.offset = me, o.extra = 15 & oe, o.mode = 24;
                case 24:
                  if (o.extra) {
                    for (k = o.extra; x < k; ) {
                      if (W === 0)
                        break e;
                      W--, B += D[M++] << x, x += 8;
                    }
                    o.offset += B & (1 << o.extra) - 1, B >>>= o.extra, x -= o.extra, o.back += o.extra;
                  }
                  if (o.offset > o.dmax) {
                    S.msg = "invalid distance too far back", o.mode = 30;
                    break;
                  }
                  o.mode = 25;
                case 25:
                  if (te === 0)
                    break e;
                  if (G = K - te, o.offset > G) {
                    if ((G = o.offset - G) > o.whave && o.sane) {
                      S.msg = "invalid distance too far back", o.mode = 30;
                      break;
                    }
                    he = G > o.wnext ? (G -= o.wnext, o.wsize - G) : o.wnext - G, G > o.length && (G = o.length), be = o.window;
                  } else
                    be = re, he = ne - o.offset, G = o.length;
                  for (te < G && (G = te), te -= G, o.length -= G; re[ne++] = be[he++], --G; )
                    ;
                  o.length === 0 && (o.mode = 21);
                  break;
                case 26:
                  if (te === 0)
                    break e;
                  re[ne++] = o.length, te--, o.mode = 21;
                  break;
                case 27:
                  if (o.wrap) {
                    for (; x < 32; ) {
                      if (W === 0)
                        break e;
                      W--, B |= D[M++] << x, x += 8;
                    }
                    if (K -= te, S.total_out += K, o.total += K, K && (S.adler = o.check = o.flags ? l(o.check, re, K, ne - K) : u(o.check, re, K, ne - K)), K = te, (o.flags ? B : g(B)) !== o.check) {
                      S.msg = "incorrect data check", o.mode = 30;
                      break;
                    }
                    x = B = 0;
                  }
                  o.mode = 28;
                case 28:
                  if (o.wrap && o.flags) {
                    for (; x < 32; ) {
                      if (W === 0)
                        break e;
                      W--, B += D[M++] << x, x += 8;
                    }
                    if (B !== (4294967295 & o.total)) {
                      S.msg = "incorrect length check", o.mode = 30;
                      break;
                    }
                    x = B = 0;
                  }
                  o.mode = 29;
                case 29:
                  O = 1;
                  break e;
                case 30:
                  O = -3;
                  break e;
                case 31:
                  return -4;
                case 32:
                default:
                  return c;
              }
          return S.next_out = ne, S.avail_out = te, S.next_in = M, S.avail_in = W, o.hold = B, o.bits = x, (o.wsize || K !== S.avail_out && o.mode < 30 && (o.mode < 27 || R !== 4)) && ee(S, S.output, S.next_out, K - S.avail_out) ? (o.mode = 31, -4) : (Q -= S.avail_in, K -= S.avail_out, S.total_in += Q, S.total_out += K, o.total += K, o.wrap && K && (S.adler = o.check = o.flags ? l(o.check, re, K, S.next_out - K) : u(o.check, re, K, S.next_out - K)), S.data_type = o.bits + (o.last ? 64 : 0) + (o.mode === 12 ? 128 : 0) + (o.mode === 20 || o.mode === 15 ? 256 : 0), (Q == 0 && K === 0 || R === 4) && O === _ && (O = -5), O);
        }, a.inflateEnd = function(S) {
          if (!S || !S.state)
            return c;
          var R = S.state;
          return R.window && (R.window = null), S.state = null, _;
        }, a.inflateGetHeader = function(S, R) {
          var o;
          return S && S.state ? (2 & (o = S.state).wrap) == 0 ? c : ((o.head = R).done = false, _) : c;
        }, a.inflateSetDictionary = function(S, R) {
          var o, D = R.length;
          return S && S.state ? (o = S.state).wrap !== 0 && o.mode !== 11 ? c : o.mode === 11 && u(1, R, D, 0) !== o.check ? -3 : ee(S, R, D, D) ? (o.mode = 31, -4) : (o.havedict = 1, _) : c;
        }, a.inflateInfo = "pako inflate (from Nodeca project)";
      }, { "../utils/common": 41, "./adler32": 43, "./crc32": 45, "./inffast": 48, "./inftrees": 50 }], 50: [function(e, r, a) {
        var n = e("../utils/common"), u = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0], l = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78], i = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0], d = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
        r.exports = function(p, m, _, c, y, w, h2, g) {
          var b, C, N, P, U, I, H, T, V, ee = g.bits, S = 0, R = 0, o = 0, D = 0, re = 0, M = 0, ne = 0, W = 0, te = 0, B = 0, x = null, Q = 0, K = new n.Buf16(16), G = new n.Buf16(16), he = null, be = 0;
          for (S = 0; S <= 15; S++)
            K[S] = 0;
          for (R = 0; R < c; R++)
            K[m[_ + R]]++;
          for (re = ee, D = 15; 1 <= D && K[D] === 0; D--)
            ;
          if (D < re && (re = D), D === 0)
            return y[w++] = 20971520, y[w++] = 20971520, g.bits = 1, 0;
          for (o = 1; o < D && K[o] === 0; o++)
            ;
          for (re < o && (re = o), S = W = 1; S <= 15; S++)
            if (W <<= 1, (W -= K[S]) < 0)
              return -1;
          if (0 < W && (p === 0 || D !== 1))
            return -1;
          for (G[1] = 0, S = 1; S < 15; S++)
            G[S + 1] = G[S] + K[S];
          for (R = 0; R < c; R++)
            m[_ + R] !== 0 && (h2[G[m[_ + R]]++] = R);
          if (I = p === 0 ? (x = he = h2, 19) : p === 1 ? (x = u, Q -= 257, he = l, be -= 257, 256) : (x = i, he = d, -1), S = o, U = w, ne = R = B = 0, N = -1, P = (te = 1 << (M = re)) - 1, p === 1 && 852 < te || p === 2 && 592 < te)
            return 1;
          for (; ; ) {
            for (H = S - ne, V = h2[R] < I ? (T = 0, h2[R]) : h2[R] > I ? (T = he[be + h2[R]], x[Q + h2[R]]) : (T = 96, 0), b = 1 << S - ne, o = C = 1 << M; y[U + (B >> ne) + (C -= b)] = H << 24 | T << 16 | V | 0, C !== 0; )
              ;
            for (b = 1 << S - 1; B & b; )
              b >>= 1;
            if (b !== 0 ? (B &= b - 1, B += b) : B = 0, R++, --K[S] == 0) {
              if (S === D)
                break;
              S = m[_ + h2[R]];
            }
            if (re < S && (B & P) !== N) {
              for (ne === 0 && (ne = re), U += o, W = 1 << (M = S - ne); M + ne < D && !((W -= K[M + ne]) <= 0); )
                M++, W <<= 1;
              if (te += 1 << M, p === 1 && 852 < te || p === 2 && 592 < te)
                return 1;
              y[N = B & P] = re << 24 | M << 16 | U - w | 0;
            }
          }
          return B !== 0 && (y[U + B] = S - ne << 24 | 4194304 | 0), g.bits = re, 0;
        };
      }, { "../utils/common": 41 }], 51: [function(e, r, a) {
        r.exports = { 2: "need dictionary", 1: "stream end", 0: "", "-1": "file error", "-2": "stream error", "-3": "data error", "-4": "insufficient memory", "-5": "buffer error", "-6": "incompatible version" };
      }, {}], 52: [function(e, r, a) {
        var n = e("../utils/common"), u = 0, l = 1;
        function i(v) {
          for (var A = v.length; 0 <= --A; )
            v[A] = 0;
        }
        var d = 0, p = 29, m = 256, _ = m + 1 + p, c = 30, y = 19, w = 2 * _ + 1, h2 = 15, g = 16, b = 7, C = 256, N = 16, P = 17, U = 18, I = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0], H = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13], T = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7], V = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], ee = new Array(2 * (_ + 2));
        i(ee);
        var S = new Array(2 * c);
        i(S);
        var R = new Array(512);
        i(R);
        var o = new Array(256);
        i(o);
        var D = new Array(p);
        i(D);
        var re, M, ne, W = new Array(c);
        function te(v, A, L, j, E) {
          this.static_tree = v, this.extra_bits = A, this.extra_base = L, this.elems = j, this.max_length = E, this.has_stree = v && v.length;
        }
        function B(v, A) {
          this.dyn_tree = v, this.max_code = 0, this.stat_desc = A;
        }
        function x(v) {
          return v < 256 ? R[v] : R[256 + (v >>> 7)];
        }
        function Q(v, A) {
          v.pending_buf[v.pending++] = 255 & A, v.pending_buf[v.pending++] = A >>> 8 & 255;
        }
        function K(v, A, L) {
          v.bi_valid > g - L ? (v.bi_buf |= A << v.bi_valid & 65535, Q(v, v.bi_buf), v.bi_buf = A >> g - v.bi_valid, v.bi_valid += L - g) : (v.bi_buf |= A << v.bi_valid & 65535, v.bi_valid += L);
        }
        function G(v, A, L) {
          K(v, L[2 * A], L[2 * A + 1]);
        }
        function he(v, A) {
          for (var L = 0; L |= 1 & v, v >>>= 1, L <<= 1, 0 < --A; )
            ;
          return L >>> 1;
        }
        function be(v, A, L) {
          var j, E, Z = new Array(h2 + 1), Y = 0;
          for (j = 1; j <= h2; j++)
            Z[j] = Y = Y + L[j - 1] << 1;
          for (E = 0; E <= A; E++) {
            var $ = v[2 * E + 1];
            $ !== 0 && (v[2 * E] = he(Z[$]++, $));
          }
        }
        function se(v) {
          var A;
          for (A = 0; A < _; A++)
            v.dyn_ltree[2 * A] = 0;
          for (A = 0; A < c; A++)
            v.dyn_dtree[2 * A] = 0;
          for (A = 0; A < y; A++)
            v.bl_tree[2 * A] = 0;
          v.dyn_ltree[2 * C] = 1, v.opt_len = v.static_len = 0, v.last_lit = v.matches = 0;
        }
        function oe(v) {
          8 < v.bi_valid ? Q(v, v.bi_buf) : 0 < v.bi_valid && (v.pending_buf[v.pending++] = v.bi_buf), v.bi_buf = 0, v.bi_valid = 0;
        }
        function me(v, A, L, j) {
          var E = 2 * A, Z = 2 * L;
          return v[E] < v[Z] || v[E] === v[Z] && j[A] <= j[L];
        }
        function fe(v, A, L) {
          for (var j = v.heap[L], E = L << 1; E <= v.heap_len && (E < v.heap_len && me(A, v.heap[E + 1], v.heap[E], v.depth) && E++, !me(A, j, v.heap[E], v.depth)); )
            v.heap[L] = v.heap[E], L = E, E <<= 1;
          v.heap[L] = j;
        }
        function we(v, A, L) {
          var j, E, Z, Y, $ = 0;
          if (v.last_lit !== 0)
            for (; j = v.pending_buf[v.d_buf + 2 * $] << 8 | v.pending_buf[v.d_buf + 2 * $ + 1], E = v.pending_buf[v.l_buf + $], $++, j === 0 ? G(v, E, A) : (G(v, (Z = o[E]) + m + 1, A), (Y = I[Z]) !== 0 && K(v, E -= D[Z], Y), G(v, Z = x(--j), L), (Y = H[Z]) !== 0 && K(v, j -= W[Z], Y)), $ < v.last_lit; )
              ;
          G(v, C, A);
        }
        function ke(v, A) {
          var L, j, E, Z = A.dyn_tree, Y = A.stat_desc.static_tree, $ = A.stat_desc.has_stree, J = A.stat_desc.elems, le = -1;
          for (v.heap_len = 0, v.heap_max = w, L = 0; L < J; L++)
            Z[2 * L] !== 0 ? (v.heap[++v.heap_len] = le = L, v.depth[L] = 0) : Z[2 * L + 1] = 0;
          for (; v.heap_len < 2; )
            Z[2 * (E = v.heap[++v.heap_len] = le < 2 ? ++le : 0)] = 1, v.depth[E] = 0, v.opt_len--, $ && (v.static_len -= Y[2 * E + 1]);
          for (A.max_code = le, L = v.heap_len >> 1; 1 <= L; L--)
            fe(v, Z, L);
          for (E = J; L = v.heap[1], v.heap[1] = v.heap[v.heap_len--], fe(v, Z, 1), j = v.heap[1], v.heap[--v.heap_max] = L, v.heap[--v.heap_max] = j, Z[2 * E] = Z[2 * L] + Z[2 * j], v.depth[E] = (v.depth[L] >= v.depth[j] ? v.depth[L] : v.depth[j]) + 1, Z[2 * L + 1] = Z[2 * j + 1] = E, v.heap[1] = E++, fe(v, Z, 1), 2 <= v.heap_len; )
            ;
          v.heap[--v.heap_max] = v.heap[1], function(ie, ye) {
            var Te, Se, Fe, de, Me, Je, Ae = ye.dyn_tree, kt = ye.max_code, Ur = ye.stat_desc.static_tree, jr = ye.stat_desc.has_stree, Mr = ye.stat_desc.extra_bits, wt = ye.stat_desc.extra_base, Ie = ye.stat_desc.max_length, We = 0;
            for (de = 0; de <= h2; de++)
              ie.bl_count[de] = 0;
            for (Ae[2 * ie.heap[ie.heap_max] + 1] = 0, Te = ie.heap_max + 1; Te < w; Te++)
              Ie < (de = Ae[2 * Ae[2 * (Se = ie.heap[Te]) + 1] + 1] + 1) && (de = Ie, We++), Ae[2 * Se + 1] = de, kt < Se || (ie.bl_count[de]++, Me = 0, wt <= Se && (Me = Mr[Se - wt]), Je = Ae[2 * Se], ie.opt_len += Je * (de + Me), jr && (ie.static_len += Je * (Ur[2 * Se + 1] + Me)));
            if (We !== 0) {
              do {
                for (de = Ie - 1; ie.bl_count[de] === 0; )
                  de--;
                ie.bl_count[de]--, ie.bl_count[de + 1] += 2, ie.bl_count[Ie]--, We -= 2;
              } while (0 < We);
              for (de = Ie; de !== 0; de--)
                for (Se = ie.bl_count[de]; Se !== 0; )
                  kt < (Fe = ie.heap[--Te]) || (Ae[2 * Fe + 1] !== de && (ie.opt_len += (de - Ae[2 * Fe + 1]) * Ae[2 * Fe], Ae[2 * Fe + 1] = de), Se--);
            }
          }(v, A), be(Z, le, v.bl_count);
        }
        function s(v, A, L) {
          var j, E, Z = -1, Y = A[1], $ = 0, J = 7, le = 4;
          for (Y === 0 && (J = 138, le = 3), A[2 * (L + 1) + 1] = 65535, j = 0; j <= L; j++)
            E = Y, Y = A[2 * (j + 1) + 1], ++$ < J && E === Y || ($ < le ? v.bl_tree[2 * E] += $ : E !== 0 ? (E !== Z && v.bl_tree[2 * E]++, v.bl_tree[2 * N]++) : $ <= 10 ? v.bl_tree[2 * P]++ : v.bl_tree[2 * U]++, Z = E, le = ($ = 0) === Y ? (J = 138, 3) : E === Y ? (J = 6, 3) : (J = 7, 4));
        }
        function O(v, A, L) {
          var j, E, Z = -1, Y = A[1], $ = 0, J = 7, le = 4;
          for (Y === 0 && (J = 138, le = 3), j = 0; j <= L; j++)
            if (E = Y, Y = A[2 * (j + 1) + 1], !(++$ < J && E === Y)) {
              if ($ < le)
                for (; G(v, E, v.bl_tree), --$ != 0; )
                  ;
              else
                E !== 0 ? (E !== Z && (G(v, E, v.bl_tree), $--), G(v, N, v.bl_tree), K(v, $ - 3, 2)) : $ <= 10 ? (G(v, P, v.bl_tree), K(v, $ - 3, 3)) : (G(v, U, v.bl_tree), K(v, $ - 11, 7));
              Z = E, le = ($ = 0) === Y ? (J = 138, 3) : E === Y ? (J = 6, 3) : (J = 7, 4);
            }
        }
        i(W);
        var F = false;
        function k(v, A, L, j) {
          K(v, (d << 1) + (j ? 1 : 0), 3), function(E, Z, Y, $) {
            oe(E), $ && (Q(E, Y), Q(E, ~Y)), n.arraySet(E.pending_buf, E.window, Z, Y, E.pending), E.pending += Y;
          }(v, A, L, true);
        }
        a._tr_init = function(v) {
          F || (function() {
            var A, L, j, E, Z, Y = new Array(h2 + 1);
            for (E = j = 0; E < p - 1; E++)
              for (D[E] = j, A = 0; A < 1 << I[E]; A++)
                o[j++] = E;
            for (o[j - 1] = E, E = Z = 0; E < 16; E++)
              for (W[E] = Z, A = 0; A < 1 << H[E]; A++)
                R[Z++] = E;
            for (Z >>= 7; E < c; E++)
              for (W[E] = Z << 7, A = 0; A < 1 << H[E] - 7; A++)
                R[256 + Z++] = E;
            for (L = 0; L <= h2; L++)
              Y[L] = 0;
            for (A = 0; A <= 143; )
              ee[2 * A + 1] = 8, A++, Y[8]++;
            for (; A <= 255; )
              ee[2 * A + 1] = 9, A++, Y[9]++;
            for (; A <= 279; )
              ee[2 * A + 1] = 7, A++, Y[7]++;
            for (; A <= 287; )
              ee[2 * A + 1] = 8, A++, Y[8]++;
            for (be(ee, _ + 1, Y), A = 0; A < c; A++)
              S[2 * A + 1] = 5, S[2 * A] = he(A, 5);
            re = new te(ee, I, m + 1, _, h2), M = new te(S, H, 0, c, h2), ne = new te(new Array(0), T, 0, y, b);
          }(), F = true), v.l_desc = new B(v.dyn_ltree, re), v.d_desc = new B(v.dyn_dtree, M), v.bl_desc = new B(v.bl_tree, ne), v.bi_buf = 0, v.bi_valid = 0, se(v);
        }, a._tr_stored_block = k, a._tr_flush_block = function(v, A, L, j) {
          var E, Z, Y = 0;
          0 < v.level ? (v.strm.data_type === 2 && (v.strm.data_type = function($) {
            var J, le = 4093624447;
            for (J = 0; J <= 31; J++, le >>>= 1)
              if (1 & le && $.dyn_ltree[2 * J] !== 0)
                return u;
            if ($.dyn_ltree[18] !== 0 || $.dyn_ltree[20] !== 0 || $.dyn_ltree[26] !== 0)
              return l;
            for (J = 32; J < m; J++)
              if ($.dyn_ltree[2 * J] !== 0)
                return l;
            return u;
          }(v)), ke(v, v.l_desc), ke(v, v.d_desc), Y = function($) {
            var J;
            for (s($, $.dyn_ltree, $.l_desc.max_code), s($, $.dyn_dtree, $.d_desc.max_code), ke($, $.bl_desc), J = y - 1; 3 <= J && $.bl_tree[2 * V[J] + 1] === 0; J--)
              ;
            return $.opt_len += 3 * (J + 1) + 5 + 5 + 4, J;
          }(v), E = v.opt_len + 3 + 7 >>> 3, (Z = v.static_len + 3 + 7 >>> 3) <= E && (E = Z)) : E = Z = L + 5, L + 4 <= E && A !== -1 ? k(v, A, L, j) : v.strategy === 4 || Z === E ? (K(v, 2 + (j ? 1 : 0), 3), we(v, ee, S)) : (K(v, 4 + (j ? 1 : 0), 3), function($, J, le, ie) {
            var ye;
            for (K($, J - 257, 5), K($, le - 1, 5), K($, ie - 4, 4), ye = 0; ye < ie; ye++)
              K($, $.bl_tree[2 * V[ye] + 1], 3);
            O($, $.dyn_ltree, J - 1), O($, $.dyn_dtree, le - 1);
          }(v, v.l_desc.max_code + 1, v.d_desc.max_code + 1, Y + 1), we(v, v.dyn_ltree, v.dyn_dtree)), se(v), j && oe(v);
        }, a._tr_tally = function(v, A, L) {
          return v.pending_buf[v.d_buf + 2 * v.last_lit] = A >>> 8 & 255, v.pending_buf[v.d_buf + 2 * v.last_lit + 1] = 255 & A, v.pending_buf[v.l_buf + v.last_lit] = 255 & L, v.last_lit++, A === 0 ? v.dyn_ltree[2 * L]++ : (v.matches++, A--, v.dyn_ltree[2 * (o[L] + m + 1)]++, v.dyn_dtree[2 * x(A)]++), v.last_lit === v.lit_bufsize - 1;
        }, a._tr_align = function(v) {
          K(v, 2, 3), G(v, C, ee), function(A) {
            A.bi_valid === 16 ? (Q(A, A.bi_buf), A.bi_buf = 0, A.bi_valid = 0) : 8 <= A.bi_valid && (A.pending_buf[A.pending++] = 255 & A.bi_buf, A.bi_buf >>= 8, A.bi_valid -= 8);
          }(v);
        };
      }, { "../utils/common": 41 }], 53: [function(e, r, a) {
        r.exports = function() {
          this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
        };
      }, {}], 54: [function(e, r, a) {
        r.exports = typeof setImmediate == "function" ? setImmediate : function() {
          var n = [].slice.apply(arguments);
          n.splice(1, 0, 0), setTimeout.apply(null, n);
        };
      }, {}] }, {}, [10])(10);
    });
  })(st);
  function Ft(f) {
    return f == null ? void 0 : f.replace(/[ .]+/g, "-").replace(/[&]+/g, "and").toLowerCase();
  }
  function Oe(f) {
    let t = f.lastIndexOf("/") + 1, e = t == 0 ? "" : f.substring(0, t), r = t == 0 ? f : f.substring(t);
    return [e, r];
  }
  function He(f, t) {
    try {
      const e = "http://docx/";
      return new URL(f, e + t).toString().substring(e.length);
    } catch {
      return `${t}${f}`;
    }
  }
  function It(f, t) {
    return f.reduce((e, r) => (e[t(r)] = r, e), {});
  }
  function Rt(f) {
    return new Promise((t, e) => {
      const r = new FileReader();
      r.onloadend = () => t(r.result.replace(/application\/octet\-stream;/, "image/png;")), r.readAsDataURL(f);
    });
  }
  function Ze(f) {
    return f && typeof f == "object" && !Array.isArray(f);
  }
  function De(f, ...t) {
    var r;
    if (!t.length)
      return f;
    const e = t.shift();
    if (Ze(f) && Ze(e))
      for (const a in e)
        if (Ze(e[a])) {
          const n = (r = f[a]) != null ? r : f[a] = {};
          De(n, e[a]);
        } else
          f[a] = e[a];
    return De(f, ...t);
  }
  class $e {
    constructor(t, e) {
      X(this, "xmlParser", new nt());
      this._zip = t, this.options = e;
    }
    get(t) {
      return this._zip.files[Ot(t)];
    }
    update(t, e) {
      this._zip.file(t, e);
    }
    static load(t, e) {
      return st.exports.loadAsync(t).then((r) => new $e(r, e));
    }
    save(t = "blob") {
      return this._zip.generateAsync({ type: t });
    }
    load(t, e = "string") {
      var r, a;
      return (a = (r = this.get(t)) == null ? void 0 : r.async(e)) != null ? a : Promise.resolve(null);
    }
    loadRelationships(t = null) {
      let e = "_rels/.rels";
      if (t != null) {
        const [r, a] = Oe(t);
        e = `${r}_rels/${a}.rels`;
      }
      return this.load(e).then((r) => r ? ve(this.parseXmlDocument(r).firstElementChild, this.xmlParser) : null);
    }
    parseXmlDocument(t) {
      return At(t, this.options.trimXmlDeclaration);
    }
  }
  function Ot(f) {
    return f.startsWith("/") ? f.substr(1) : f;
  }
  class Dt extends _e {
    constructor(t, e, r) {
      super(t, e);
      X(this, "_documentParser");
      X(this, "body");
      this._documentParser = r;
    }
    parseXml(t) {
      this.body = this._documentParser.parseDocumentFile(t);
    }
  }
  function Le(f, t) {
    return { type: t.attr(f, "val"), color: t.attr(f, "color"), size: t.lengthAttr(f, "sz", pe.Border), offset: t.lengthAttr(f, "space", pe.Point), frame: t.boolAttr(f, "frame"), shadow: t.boolAttr(f, "shadow") };
  }
  function Lt(f, t) {
    var e = {};
    for (let r of t.elements(f))
      switch (r.localName) {
        case "left":
          e.left = Le(r, t);
          break;
        case "top":
          e.top = Le(r, t);
          break;
        case "right":
          e.right = Le(r, t);
          break;
        case "bottom":
          e.bottom = Le(r, t);
          break;
      }
    return e;
  }
  function it(f, t = z) {
    var r, a;
    var e = {};
    for (let n of t.elements(f))
      switch (n.localName) {
        case "pgSz":
          e.pageSize = { width: t.lengthAttr(n, "w"), height: t.lengthAttr(n, "h"), orientation: t.attr(n, "orient") };
          break;
        case "type":
          e.type = t.attr(n, "val");
          break;
        case "pgMar":
          e.pageMargins = { left: t.lengthAttr(n, "left"), right: t.lengthAttr(n, "right"), top: t.lengthAttr(n, "top"), bottom: t.lengthAttr(n, "bottom"), header: t.lengthAttr(n, "header"), footer: t.lengthAttr(n, "footer"), gutter: t.lengthAttr(n, "gutter") };
          break;
        case "cols":
          e.columns = Ut(n, t);
          break;
        case "headerReference":
          ((r = e.headerRefs) != null ? r : e.headerRefs = []).push(ot(n, t));
          break;
        case "footerReference":
          ((a = e.footerRefs) != null ? a : e.footerRefs = []).push(ot(n, t));
          break;
        case "titlePg":
          e.titlePage = t.boolAttr(n, "val", true);
          break;
        case "pgBorders":
          e.pageBorders = Lt(n, t);
          break;
        case "pgNumType":
          e.pageNumber = jt(n, t);
          break;
      }
    return e;
  }
  function Ut(f, t) {
    return { numberOfColumns: t.intAttr(f, "num"), space: t.lengthAttr(f, "space"), separator: t.boolAttr(f, "sep"), equalWidth: t.boolAttr(f, "equalWidth", true), columns: t.elements(f, "col").map((e) => ({ width: t.lengthAttr(e, "w"), space: t.lengthAttr(e, "space") })) };
  }
  function jt(f, t) {
    return { chapSep: t.attr(f, "chapSep"), chapStyle: t.attr(f, "chapStyle"), format: t.attr(f, "fmt"), start: t.intAttr(f, "start") };
  }
  function ot(f, t) {
    return { id: t.attr(f, "id"), type: t.attr(f, "type") };
  }
  function Mt(f, t) {
    return { before: t.lengthAttr(f, "before"), after: t.lengthAttr(f, "after"), line: t.intAttr(f, "line"), lineRule: t.attr(f, "lineRule") };
  }
  function Ve(f, t) {
    let e = {};
    for (let r of t.elements(f))
      Wt(r, e, t);
    return e;
  }
  function Wt(f, t, e) {
    return !!rt(f, t, e);
  }
  function lt(f, t) {
    let e = {};
    for (let r of t.elements(f))
      ut(r, e, t);
    return e;
  }
  function ut(f, t, e) {
    if (f.namespaceURI != et.wordml)
      return false;
    if (rt(f, t, e))
      return true;
    switch (f.localName) {
      case "tabs":
        t.tabs = Ht(f, e);
        break;
      case "sectPr":
        t.sectionProps = it(f, e);
        break;
      case "numPr":
        t.numbering = Zt(f, e);
        break;
      case "spacing":
        return t.lineSpacing = Mt(f, e), false;
      case "textAlignment":
        return t.textAlignment = e.attr(f, "val"), false;
      case "keepNext":
        t.keepLines = e.boolAttr(f, "val", true);
        break;
      case "pageBreakBefore":
        t.pageBreakBefore = e.boolAttr(f, "val", true);
        break;
      case "outlineLvl":
        t.outlineLevel = e.intAttr(f, "val");
        break;
      case "pStyle":
        t.styleName = e.attr(f, "val");
        break;
      case "rPr":
        t.runProps = Ve(f, e);
        break;
      default:
        return false;
    }
    return true;
  }
  function Ht(f, t) {
    return t.elements(f, "tab").map((e) => ({ position: t.lengthAttr(e, "pos"), leader: t.attr(e, "leader"), style: t.attr(e, "val") }));
  }
  function Zt(f, t) {
    var e = {};
    for (let r of t.elements(f))
      switch (r.localName) {
        case "numId":
          e.id = t.attr(r, "val");
          break;
        case "ilvl":
          e.level = t.intAttr(r, "val");
          break;
      }
    return e;
  }
  function $t(f, t) {
    let e = { numberings: [], abstractNumberings: [], bulletPictures: [] };
    for (let r of t.elements(f))
      switch (r.localName) {
        case "num":
          e.numberings.push(Vt(r, t));
          break;
        case "abstractNum":
          e.abstractNumberings.push(Xt(r, t));
          break;
        case "numPicBullet":
          e.bulletPictures.push(Kt(r, t));
          break;
      }
    return e;
  }
  function Vt(f, t) {
    let e = { id: t.attr(f, "numId"), overrides: [] };
    for (let r of t.elements(f))
      switch (r.localName) {
        case "abstractNumId":
          e.abstractId = t.attr(r, "val");
          break;
        case "lvlOverride":
          e.overrides.push(Gt(r, t));
          break;
      }
    return e;
  }
  function Xt(f, t) {
    let e = { id: t.attr(f, "abstractNumId"), levels: [] };
    for (let r of t.elements(f))
      switch (r.localName) {
        case "name":
          e.name = t.attr(r, "val");
          break;
        case "multiLevelType":
          e.multiLevelType = t.attr(r, "val");
          break;
        case "numStyleLink":
          e.numberingStyleLink = t.attr(r, "val");
          break;
        case "styleLink":
          e.styleLink = t.attr(r, "val");
          break;
        case "lvl":
          e.levels.push(ct(r, t));
          break;
      }
    return e;
  }
  function ct(f, t) {
    let e = { level: t.intAttr(f, "ilvl") };
    for (let r of t.elements(f))
      switch (r.localName) {
        case "start":
          e.start = t.attr(r, "val");
          break;
        case "lvlRestart":
          e.restart = t.intAttr(r, "val");
          break;
        case "numFmt":
          e.format = t.attr(r, "val");
          break;
        case "lvlText":
          e.text = t.attr(r, "val");
          break;
        case "lvlJc":
          e.justification = t.attr(r, "val");
          break;
        case "lvlPicBulletId":
          e.bulletPictureId = t.attr(r, "val");
          break;
        case "pStyle":
          e.paragraphStyle = t.attr(r, "val");
          break;
        case "pPr":
          e.paragraphProps = lt(r, t);
          break;
        case "rPr":
          e.runProps = Ve(r, t);
          break;
      }
    return e;
  }
  function Gt(f, t) {
    let e = { level: t.intAttr(f, "ilvl") };
    for (let r of t.elements(f))
      switch (r.localName) {
        case "startOverride":
          e.start = t.intAttr(r, "val");
          break;
        case "lvl":
          e.numberingLevel = ct(r, t);
          break;
      }
    return e;
  }
  function Kt(f, t) {
    var e = t.element(f, "pict"), r = e && t.element(e, "shape"), a = r && t.element(r, "imagedata");
    return a ? { id: t.attr(f, "numPicBulletId"), referenceId: t.attr(a, "id"), style: t.attr(r, "style") } : null;
  }
  class Yt extends _e {
    constructor(t, e, r) {
      super(t, e);
      X(this, "_documentParser");
      X(this, "numberings");
      X(this, "abstractNumberings");
      X(this, "bulletPictures");
      X(this, "domNumberings");
      this._documentParser = r;
    }
    parseXml(t) {
      Object.assign(this, $t(t, this._package.xmlParser)), this.domNumberings = this._documentParser.parseNumberingFile(t);
    }
  }
  class qt extends _e {
    constructor(t, e, r) {
      super(t, e);
      X(this, "styles");
      X(this, "_documentParser");
      this._documentParser = r;
    }
    parseXml(t) {
      this.styles = this._documentParser.parseStylesFile(t);
    }
  }
  var q = ((f) => (f.Document = "document", f.Paragraph = "paragraph", f.Run = "run", f.Break = "break", f.NoBreakHyphen = "noBreakHyphen", f.Table = "table", f.Row = "row", f.Cell = "cell", f.Hyperlink = "hyperlink", f.Drawing = "drawing", f.Image = "image", f.Text = "text", f.Tab = "tab", f.Symbol = "symbol", f.BookmarkStart = "bookmarkStart", f.BookmarkEnd = "bookmarkEnd", f.Footer = "footer", f.Header = "header", f.FootnoteReference = "footnoteReference", f.EndnoteReference = "endnoteReference", f.Footnote = "footnote", f.Endnote = "endnote", f.SimpleField = "simpleField", f.ComplexField = "complexField", f.Instruction = "instruction", f))(q || {});
  class Jt {
    constructor() {
      X(this, "type", q.Header);
      X(this, "children", []);
      X(this, "cssStyle", {});
      X(this, "className");
      X(this, "parent");
    }
  }
  class Qt {
    constructor() {
      X(this, "type", q.Footer);
      X(this, "children", []);
      X(this, "cssStyle", {});
      X(this, "className");
      X(this, "parent");
    }
  }
  class ht extends _e {
    constructor(t, e, r) {
      super(t, e);
      X(this, "rootElement");
      X(this, "_documentParser");
      this._documentParser = r;
    }
    parseXml(t) {
      this.rootElement = this.createRootElement(), this.rootElement.children = this._documentParser.parseBodyElements(t);
    }
  }
  class er extends ht {
    createRootElement() {
      return new Jt();
    }
  }
  class tr extends ht {
    createRootElement() {
      return new Qt();
    }
  }
  function rr(f, t) {
    const e = {};
    for (let r of t.elements(f))
      switch (r.localName) {
        case "Template":
          e.template = r.textContent;
          break;
        case "Pages":
          e.pages = Ee(r.textContent);
          break;
        case "Words":
          e.words = Ee(r.textContent);
          break;
        case "Characters":
          e.characters = Ee(r.textContent);
          break;
        case "Application":
          e.application = r.textContent;
          break;
        case "Lines":
          e.lines = Ee(r.textContent);
          break;
        case "Paragraphs":
          e.paragraphs = Ee(r.textContent);
          break;
        case "Company":
          e.company = r.textContent;
          break;
        case "AppVersion":
          e.appVersion = r.textContent;
          break;
      }
    return e;
  }
  function Ee(f) {
    if (typeof f != "undefined")
      return parseInt(f);
  }
  class nr extends _e {
    constructor() {
      super(...arguments);
      X(this, "props");
    }
    parseXml(t) {
      this.props = rr(t, this._package.xmlParser);
    }
  }
  function ar(f, t) {
    const e = {};
    for (let r of t.elements(f))
      switch (r.localName) {
        case "title":
          e.title = r.textContent;
          break;
        case "description":
          e.description = r.textContent;
          break;
        case "subject":
          e.subject = r.textContent;
          break;
        case "creator":
          e.creator = r.textContent;
          break;
        case "keywords":
          e.keywords = r.textContent;
          break;
        case "language":
          e.language = r.textContent;
          break;
        case "lastModifiedBy":
          e.lastModifiedBy = r.textContent;
          break;
        case "revision":
          r.textContent && (e.revision = parseInt(r.textContent));
          break;
      }
    return e;
  }
  class sr extends _e {
    constructor() {
      super(...arguments);
      X(this, "props");
    }
    parseXml(t) {
      this.props = ar(t, this._package.xmlParser);
    }
  }
  class ir {
    constructor() {
      X(this, "colorScheme");
      X(this, "fontScheme");
    }
  }
  function or(f, t) {
    var e = new ir(), r = t.element(f, "themeElements");
    for (let a of t.elements(r))
      switch (a.localName) {
        case "clrScheme":
          e.colorScheme = lr(a, t);
          break;
        case "fontScheme":
          e.fontScheme = ur(a, t);
          break;
      }
    return e;
  }
  function lr(f, t) {
    var e = { name: t.attr(f, "name"), colors: {} };
    for (let n of t.elements(f)) {
      var r = t.element(n, "srgbClr"), a = t.element(n, "sysClr");
      r ? e.colors[n.localName] = t.attr(r, "val") : a && (e.colors[n.localName] = t.attr(a, "lastClr"));
    }
    return e;
  }
  function ur(f, t) {
    var e = { name: t.attr(f, "name") };
    for (let r of t.elements(f))
      switch (r.localName) {
        case "majorFont":
          e.majorFont = ft(r, t);
          break;
        case "minorFont":
          e.minorFont = ft(r, t);
          break;
      }
    return e;
  }
  function ft(f, t) {
    return { latinTypeface: t.elementAttr(f, "latin", "typeface"), eaTypeface: t.elementAttr(f, "ea", "typeface"), csTypeface: t.elementAttr(f, "cs", "typeface") };
  }
  class cr extends _e {
    constructor(t, e) {
      super(t, e);
      X(this, "theme");
    }
    parseXml(t) {
      this.theme = or(t, this._package.xmlParser);
    }
  }
  class dt {
    constructor() {
      X(this, "id");
      X(this, "type");
      X(this, "noteType");
      X(this, "children", []);
      X(this, "cssStyle", {});
      X(this, "className");
      X(this, "parent");
    }
  }
  class hr extends dt {
    constructor() {
      super(...arguments);
      X(this, "type", q.Footnote);
    }
  }
  class fr extends dt {
    constructor() {
      super(...arguments);
      X(this, "type", q.Endnote);
    }
  }
  class pt extends _e {
    constructor(t, e, r) {
      super(t, e);
      X(this, "_documentParser");
      X(this, "notes");
      this._documentParser = r;
    }
  }
  class dr extends pt {
    constructor(t, e, r) {
      super(t, e, r);
    }
    parseXml(t) {
      this.notes = this._documentParser.parseNotes(t, "footnote", hr);
    }
  }
  class pr extends pt {
    constructor(t, e, r) {
      super(t, e, r);
    }
    parseXml(t) {
      this.notes = this._documentParser.parseNotes(t, "endnote", fr);
    }
  }
  function mr(f, t) {
    var e = {};
    for (let r of t.elements(f))
      switch (r.localName) {
        case "defaultTabStop":
          e.defaultTabStop = t.lengthAttr(r, "val");
          break;
        case "footnotePr":
          e.footnoteProps = mt(r, t);
          break;
        case "endnotePr":
          e.endnoteProps = mt(r, t);
          break;
        case "autoHyphenation":
          e.autoHyphenation = t.boolAttr(r, "val");
          break;
      }
    return e;
  }
  function mt(f, t) {
    var e = { defaultNoteIds: [] };
    for (let r of t.elements(f))
      switch (r.localName) {
        case "numFmt":
          e.nummeringFormat = t.attr(r, "val");
          break;
        case "footnote":
        case "endnote":
          e.defaultNoteIds.push(t.attr(r, "id"));
          break;
      }
    return e;
  }
  class gr extends _e {
    constructor(t, e) {
      super(t, e);
      X(this, "settings");
    }
    parseXml(t) {
      this.settings = mr(t, this._package.xmlParser);
    }
  }
  function br(f, t) {
    return t.elements(f, "property").map((e) => {
      const r = e.firstChild;
      return { formatId: t.attr(e, "fmtid"), name: t.attr(e, "name"), type: r.nodeName, value: r.textContent };
    });
  }
  class vr extends _e {
    constructor() {
      super(...arguments);
      X(this, "props");
    }
    parseXml(t) {
      this.props = br(t, this._package.xmlParser);
    }
  }
  const yr = [{ type: ae.OfficeDocument, target: "word/document.xml" }, { type: ae.ExtendedProperties, target: "docProps/app.xml" }, { type: ae.CoreProperties, target: "docProps/core.xml" }, { type: ae.CustomProperties, target: "docProps/custom.xml" }];
  class Xe {
    constructor() {
      X(this, "_package");
      X(this, "_parser");
      X(this, "_options");
      X(this, "rels");
      X(this, "parts", []);
      X(this, "partsMap", {});
      X(this, "documentPart");
      X(this, "fontTablePart");
      X(this, "numberingPart");
      X(this, "stylesPart");
      X(this, "footnotesPart");
      X(this, "endnotesPart");
      X(this, "themePart");
      X(this, "corePropsPart");
      X(this, "extendedPropsPart");
      X(this, "settingsPart");
    }
    static load(t, e, r) {
      var a = new Xe();
      return a._options = r, a._parser = e, $e.load(t, r).then((n) => (a._package = n, a._package.loadRelationships())).then((n) => {
        a.rels = n;
        const u = yr.map((l) => {
          var d;
          const i = (d = n.find((p) => p.type === l.type)) != null ? d : l;
          return a.loadRelationshipPart(i.target, i.type);
        });
        return Promise.all(u);
      }).then(() => a);
    }
    save(t = "blob") {
      return this._package.save(t);
    }
    loadRelationshipPart(t, e) {
      if (this.partsMap[t])
        return Promise.resolve(this.partsMap[t]);
      if (!this._package.get(t))
        return Promise.resolve(null);
      let r = null;
      switch (e) {
        case ae.OfficeDocument:
          this.documentPart = r = new Dt(this._package, t, this._parser);
          break;
        case ae.FontTable:
          this.fontTablePart = r = new Tt(this._package, t);
          break;
        case ae.Numbering:
          this.numberingPart = r = new Yt(this._package, t, this._parser);
          break;
        case ae.Styles:
          this.stylesPart = r = new qt(this._package, t, this._parser);
          break;
        case ae.Theme:
          this.themePart = r = new cr(this._package, t);
          break;
        case ae.Footnotes:
          this.footnotesPart = r = new dr(this._package, t, this._parser);
          break;
        case ae.Endnotes:
          this.endnotesPart = r = new pr(this._package, t, this._parser);
          break;
        case ae.Footer:
          r = new tr(this._package, t, this._parser);
          break;
        case ae.Header:
          r = new er(this._package, t, this._parser);
          break;
        case ae.CoreProperties:
          this.corePropsPart = r = new sr(this._package, t);
          break;
        case ae.ExtendedProperties:
          this.extendedPropsPart = r = new nr(this._package, t);
          break;
        case ae.CustomProperties:
          r = new vr(this._package, t);
          break;
        case ae.Settings:
          this.settingsPart = r = new gr(this._package, t);
          break;
      }
      return r == null ? Promise.resolve(null) : (this.partsMap[t] = r, this.parts.push(r), r.load().then(() => {
        if (r.rels == null || r.rels.length == 0)
          return r;
        const [a] = Oe(r.path), n = r.rels.map((u) => this.loadRelationshipPart(He(u.target, a), u.type));
        return Promise.all(n).then(() => r);
      }));
    }
    loadDocumentImage(t, e) {
      return this.loadResource(e != null ? e : this.documentPart, t, "blob").then((r) => this.blobToURL(r));
    }
    loadNumberingImage(t) {
      return this.loadResource(this.numberingPart, t, "blob").then((e) => this.blobToURL(e));
    }
    loadFont(t, e) {
      return this.loadResource(this.fontTablePart, t, "uint8array").then((r) => r && this.blobToURL(new Blob([_r(r, e)])));
    }
    blobToURL(t) {
      return t ? this._options.useBase64URL ? Rt(t) : URL.createObjectURL(t) : null;
    }
    findPartByRelId(t, e = null) {
      var n;
      var r = ((n = e.rels) != null ? n : this.rels).find((u) => u.id == t);
      const a = e ? Oe(e.path)[0] : "";
      return r ? this.partsMap[He(r.target, a)] : null;
    }
    getPathById(t, e) {
      const r = t.rels.find((n) => n.id == e), [a] = Oe(t.path);
      return r ? He(r.target, a) : null;
    }
    loadResource(t, e, r) {
      const a = this.getPathById(t, e);
      return a ? this._package.load(a, r) : Promise.resolve(null);
    }
  }
  function _r(f, t) {
    const r = t.replace(/{|}|-/g, ""), a = new Array(16);
    for (let n = 0; n < 16; n++)
      a[16 - n - 1] = parseInt(r.substr(n * 2, 2), 16);
    for (let n = 0; n < 32; n++)
      f[n] = f[n] ^ a[n % 16];
    return f;
  }
  function kr(f, t) {
    return { type: q.BookmarkStart, id: t.attr(f, "id"), name: t.attr(f, "name"), colFirst: t.intAttr(f, "colFirst"), colLast: t.intAttr(f, "colLast") };
  }
  function wr(f, t) {
    return { type: q.BookmarkEnd, id: t.attr(f, "id") };
  }
  var Ue = { shd: "inherit", color: "black", borderColor: "black", highlight: "transparent" };
  class Sr {
    constructor(t) {
      X(this, "options");
      this.options = Ce({ ignoreWidth: false, debug: false }, t);
    }
    parseNotes(t, e, r) {
      var a = [];
      for (let n of z.elements(t, e)) {
        const u = new r();
        u.id = z.attr(n, "id"), u.noteType = z.attr(n, "type"), u.children = this.parseBodyElements(n), a.push(u);
      }
      return a;
    }
    parseDocumentFile(t) {
      var e = z.element(t, "body"), r = z.element(t, "background"), a = z.element(e, "sectPr");
      return { type: q.Document, children: this.parseBodyElements(e), props: a ? it(a, z) : null, cssStyle: r ? this.parseBackground(r) : {} };
    }
    parseBackground(t) {
      var e = {}, r = ue.colorAttr(t, "color");
      return r && (e["background-color"] = r), e;
    }
    parseBodyElements(t) {
      var e = [];
      return ue.foreach(t, (r) => {
        switch (r.localName) {
          case "p":
            e.push(this.parseParagraph(r));
            break;
          case "tbl":
            e.push(this.parseTable(r));
            break;
          case "sdt":
            this.parseSdt(r).forEach((a) => e.push(a));
            break;
        }
      }), e;
    }
    parseStylesFile(t) {
      var e = [];
      return ue.foreach(t, (r) => {
        switch (r.localName) {
          case "style":
            e.push(this.parseStyle(r));
            break;
          case "docDefaults":
            e.push(this.parseDefaultStyles(r));
            break;
        }
      }), e;
    }
    parseDefaultStyles(t) {
      var e = { id: null, name: null, target: null, basedOn: null, styles: [] };
      return ue.foreach(t, (r) => {
        switch (r.localName) {
          case "rPrDefault":
            var a = z.element(r, "rPr");
            a && e.styles.push({ target: "span", values: this.parseDefaultProperties(a, {}) });
            break;
          case "pPrDefault":
            var n = z.element(r, "pPr");
            n && e.styles.push({ target: "p", values: this.parseDefaultProperties(n, {}) });
            break;
        }
      }), e;
    }
    parseStyle(t) {
      var e = { id: z.attr(t, "styleId"), isDefault: z.boolAttr(t, "default"), name: null, target: null, basedOn: null, styles: [], linked: null };
      switch (z.attr(t, "type")) {
        case "paragraph":
          e.target = "p";
          break;
        case "table":
          e.target = "table";
          break;
        case "character":
          e.target = "span";
          break;
      }
      return ue.foreach(t, (r) => {
        switch (r.localName) {
          case "basedOn":
            e.basedOn = z.attr(r, "val");
            break;
          case "name":
            e.name = z.attr(r, "val");
            break;
          case "link":
            e.linked = z.attr(r, "val");
            break;
          case "next":
            e.next = z.attr(r, "val");
            break;
          case "aliases":
            e.aliases = z.attr(r, "val").split(",");
            break;
          case "pPr":
            e.styles.push({ target: "p", values: this.parseDefaultProperties(r, {}) }), e.paragraphProps = lt(r, z);
            break;
          case "rPr":
            e.styles.push({ target: "span", values: this.parseDefaultProperties(r, {}) }), e.runProps = Ve(r, z);
            break;
          case "tblPr":
          case "tcPr":
            e.styles.push({ target: "td", values: this.parseDefaultProperties(r, {}) });
            break;
          case "tblStylePr":
            for (let a of this.parseTableStyle(r))
              e.styles.push(a);
            break;
          case "rsid":
          case "qFormat":
          case "hidden":
          case "semiHidden":
          case "unhideWhenUsed":
          case "autoRedefine":
          case "uiPriority":
            break;
          default:
            this.options.debug && console.warn(`DOCX: Unknown style element: ${r.localName}`);
        }
      }), e;
    }
    parseTableStyle(t) {
      var e = [], r = z.attr(t, "type"), a = "", n = "";
      switch (r) {
        case "firstRow":
          n = ".first-row", a = "tr.first-row td";
          break;
        case "lastRow":
          n = ".last-row", a = "tr.last-row td";
          break;
        case "firstCol":
          n = ".first-col", a = "td.first-col";
          break;
        case "lastCol":
          n = ".last-col", a = "td.last-col";
          break;
        case "band1Vert":
          n = ":not(.no-vband)", a = "td.odd-col";
          break;
        case "band2Vert":
          n = ":not(.no-vband)", a = "td.even-col";
          break;
        case "band1Horz":
          n = ":not(.no-hband)", a = "tr.odd-row";
          break;
        case "band2Horz":
          n = ":not(.no-hband)", a = "tr.even-row";
          break;
        default:
          return [];
      }
      return ue.foreach(t, (u) => {
        switch (u.localName) {
          case "pPr":
            e.push({ target: `${a} p`, mod: n, values: this.parseDefaultProperties(u, {}) });
            break;
          case "rPr":
            e.push({ target: `${a} span`, mod: n, values: this.parseDefaultProperties(u, {}) });
            break;
          case "tblPr":
          case "tcPr":
            e.push({ target: a, mod: n, values: this.parseDefaultProperties(u, {}) });
            break;
        }
      }), e;
    }
    parseNumberingFile(t) {
      var e = [], r = {}, a = [];
      return ue.foreach(t, (n) => {
        switch (n.localName) {
          case "abstractNum":
            this.parseAbstractNumbering(n, a).forEach((i) => e.push(i));
            break;
          case "numPicBullet":
            a.push(this.parseNumberingPicBullet(n));
            break;
          case "num":
            var u = z.attr(n, "numId"), l = z.elementAttr(n, "abstractNumId", "val");
            r[l] = u;
            break;
        }
      }), e.forEach((n) => n.id = r[n.id]), e;
    }
    parseNumberingPicBullet(t) {
      var e = z.element(t, "pict"), r = e && z.element(e, "shape"), a = r && z.element(r, "imagedata");
      return a ? { id: z.intAttr(t, "numPicBulletId"), src: z.attr(a, "id"), style: z.attr(r, "style") } : null;
    }
    parseAbstractNumbering(t, e) {
      var r = [], a = z.attr(t, "abstractNumId");
      return ue.foreach(t, (n) => {
        switch (n.localName) {
          case "lvl":
            r.push(this.parseNumberingLevel(a, n, e));
            break;
        }
      }), r;
    }
    parseNumberingLevel(t, e, r) {
      var a = { id: t, level: z.intAttr(e, "ilvl"), pStyleName: void 0, pStyle: {}, rStyle: {}, suff: "tab" };
      return ue.foreach(e, (n) => {
        switch (n.localName) {
          case "pPr":
            this.parseDefaultProperties(n, a.pStyle);
            break;
          case "rPr":
            this.parseDefaultProperties(n, a.rStyle);
            break;
          case "lvlPicBulletId":
            var u = z.intAttr(n, "val");
            a.bullet = r.find((l) => l.id == u);
            break;
          case "lvlText":
            a.levelText = z.attr(n, "val");
            break;
          case "pStyle":
            a.pStyleName = z.attr(n, "val");
            break;
          case "numFmt":
            a.format = z.attr(n, "val");
            break;
          case "suff":
            a.suff = z.attr(n, "val");
            break;
        }
      }), a;
    }
    parseSdt(t) {
      const e = z.element(t, "sdtContent");
      return e ? this.parseBodyElements(e) : [];
    }
    parseParagraph(t) {
      var e = { type: q.Paragraph, children: [] };
      return ue.foreach(t, (r) => {
        switch (r.localName) {
          case "r":
            e.children.push(this.parseRun(r, e));
            break;
          case "hyperlink":
            e.children.push(this.parseHyperlink(r, e));
            break;
          case "bookmarkStart":
            e.children.push(kr(r, z));
            break;
          case "bookmarkEnd":
            e.children.push(wr(r, z));
            break;
          case "pPr":
            this.parseParagraphProperties(r, e);
            break;
        }
      }), e;
    }
    parseParagraphProperties(t, e) {
      this.parseDefaultProperties(t, e.cssStyle = {}, null, (r) => {
        if (ut(r, e, z))
          return true;
        switch (r.localName) {
          case "pStyle":
            e.styleName = z.attr(r, "val");
            break;
          case "cnfStyle":
            e.className = ce.classNameOfCnfStyle(r);
            break;
          case "framePr":
            this.parseFrame(r, e);
            break;
          case "rPr":
            break;
          default:
            return false;
        }
        return true;
      });
    }
    parseFrame(t, e) {
      var r = z.attr(t, "dropCap");
      r == "drop" && (e.cssStyle.float = "left");
    }
    parseHyperlink(t, e) {
      var r = { type: q.Hyperlink, parent: e, children: [] }, a = z.attr(t, "anchor");
      return a && (r.href = "#" + a), ue.foreach(t, (n) => {
        switch (n.localName) {
          case "r":
            r.children.push(this.parseRun(n, r));
            break;
        }
      }), r;
    }
    parseRun(t, e) {
      var r = { type: q.Run, parent: e, children: [] };
      return ue.foreach(t, (a) => {
        switch (a.localName) {
          case "t":
            r.children.push({ type: q.Text, text: a.textContent });
            break;
          case "fldSimple":
            r.children.push({ type: q.SimpleField, instruction: z.attr(a, "instr"), lock: z.boolAttr(a, "lock", false), dirty: z.boolAttr(a, "dirty", false) });
            break;
          case "instrText":
            r.fieldRun = true, r.children.push({ type: q.Instruction, text: a.textContent });
            break;
          case "fldChar":
            r.fieldRun = true, r.children.push({ type: q.ComplexField, charType: z.attr(a, "fldCharType"), lock: z.boolAttr(a, "lock", false), dirty: z.boolAttr(a, "dirty", false) });
            break;
          case "noBreakHyphen":
            r.children.push({ type: q.NoBreakHyphen });
            break;
          case "br":
            r.children.push({ type: q.Break, break: z.attr(a, "type") || "textWrapping" });
            break;
          case "lastRenderedPageBreak":
            r.children.push({ type: q.Break, break: "lastRenderedPageBreak" });
            break;
          case "sym":
            r.children.push({ type: q.Symbol, font: z.attr(a, "font"), char: z.attr(a, "char") });
            break;
          case "tab":
            r.children.push({ type: q.Tab });
            break;
          case "footnoteReference":
            r.children.push({ type: q.FootnoteReference, id: z.attr(a, "id") });
            break;
          case "endnoteReference":
            r.children.push({ type: q.EndnoteReference, id: z.attr(a, "id") });
            break;
          case "drawing":
            let n = this.parseDrawing(a);
            n && (r.children = [n]);
            break;
          case "rPr":
            this.parseRunProperties(a, r);
            break;
        }
      }), r;
    }
    parseRunProperties(t, e) {
      this.parseDefaultProperties(t, e.cssStyle = {}, null, (r) => {
        switch (r.localName) {
          case "rStyle":
            e.styleName = z.attr(r, "val");
            break;
          case "vertAlign":
            e.verticalAlign = ce.valueOfVertAlign(r, true);
            break;
          default:
            return false;
        }
        return true;
      });
    }
    parseDrawing(t) {
      for (var e of z.elements(t))
        switch (e.localName) {
          case "inline":
          case "anchor":
            return this.parseDrawingWrapper(e);
        }
    }
    parseDrawingWrapper(t) {
      var _;
      var e = { type: q.Drawing, children: [], cssStyle: {} }, r = t.localName == "anchor";
      let a = null, n = z.boolAttr(t, "simplePos"), u = { relative: "page", align: "left", offset: "0" }, l = { relative: "page", align: "top", offset: "0" };
      for (var i of z.elements(t))
        switch (i.localName) {
          case "simplePos":
            n && (u.offset = z.lengthAttr(i, "x", pe.Emu), l.offset = z.lengthAttr(i, "y", pe.Emu));
            break;
          case "extent":
            e.cssStyle.width = z.lengthAttr(i, "cx", pe.Emu), e.cssStyle.height = z.lengthAttr(i, "cy", pe.Emu);
            break;
          case "positionH":
          case "positionV":
            if (!n) {
              let c = i.localName == "positionH" ? u : l;
              var d = z.element(i, "align"), p = z.element(i, "posOffset");
              c.relative = (_ = z.attr(i, "relativeFrom")) != null ? _ : c.relative, d && (c.align = d.textContent), p && (c.offset = ue.sizeValue(p, pe.Emu));
            }
            break;
          case "wrapTopAndBottom":
            a = "wrapTopAndBottom";
            break;
          case "wrapNone":
            a = "wrapNone";
            break;
          case "graphic":
            var m = this.parseGraphic(i);
            m && e.children.push(m);
            break;
        }
      return a == "wrapTopAndBottom" ? (e.cssStyle.display = "block", u.align && (e.cssStyle["text-align"] = u.align, e.cssStyle.width = "100%")) : a == "wrapNone" ? (e.cssStyle.display = "block", e.cssStyle.position = "relative", e.cssStyle.width = "0px", e.cssStyle.height = "0px", u.offset && (e.cssStyle.left = u.offset), l.offset && (e.cssStyle.top = l.offset)) : r && (u.align == "left" || u.align == "right") && (e.cssStyle.float = u.align), e;
    }
    parseGraphic(t) {
      var e = z.element(t, "graphicData");
      for (let r of z.elements(e))
        switch (r.localName) {
          case "pic":
            return this.parsePicture(r);
        }
      return null;
    }
    parsePicture(t) {
      var e = { type: q.Image, src: "", cssStyle: {} }, r = z.element(t, "blipFill"), a = z.element(r, "blip");
      e.src = z.attr(a, "embed");
      var n = z.element(t, "spPr"), u = z.element(n, "xfrm");
      e.cssStyle.position = "relative";
      for (var l of z.elements(u))
        switch (l.localName) {
          case "ext":
            e.cssStyle.width = z.lengthAttr(l, "cx", pe.Emu), e.cssStyle.height = z.lengthAttr(l, "cy", pe.Emu);
            break;
          case "off":
            e.cssStyle.left = z.lengthAttr(l, "x", pe.Emu), e.cssStyle.top = z.lengthAttr(l, "y", pe.Emu);
            break;
        }
      return e;
    }
    parseTable(t) {
      var e = { type: q.Table, children: [] };
      return ue.foreach(t, (r) => {
        switch (r.localName) {
          case "tr":
            e.children.push(this.parseTableRow(r));
            break;
          case "tblGrid":
            e.columns = this.parseTableColumns(r);
            break;
          case "tblPr":
            this.parseTableProperties(r, e);
            break;
        }
      }), e;
    }
    parseTableColumns(t) {
      var e = [];
      return ue.foreach(t, (r) => {
        switch (r.localName) {
          case "gridCol":
            e.push({ width: z.lengthAttr(r, "w") });
            break;
        }
      }), e;
    }
    parseTableProperties(t, e) {
      switch (e.cssStyle = {}, e.cellStyle = {}, this.parseDefaultProperties(t, e.cssStyle, e.cellStyle, (r) => {
        switch (r.localName) {
          case "tblStyle":
            e.styleName = z.attr(r, "val");
            break;
          case "tblLook":
            e.className = ce.classNameOftblLook(r);
            break;
          case "tblpPr":
            this.parseTablePosition(r, e);
            break;
          case "tblStyleColBandSize":
            e.colBandSize = z.intAttr(r, "val");
            break;
          case "tblStyleRowBandSize":
            e.rowBandSize = z.intAttr(r, "val");
            break;
          default:
            return false;
        }
        return true;
      }), e.cssStyle["text-align"]) {
        case "center":
          delete e.cssStyle["text-align"], e.cssStyle["margin-left"] = "auto", e.cssStyle["margin-right"] = "auto";
          break;
        case "right":
          delete e.cssStyle["text-align"], e.cssStyle["margin-left"] = "auto";
          break;
      }
    }
    parseTablePosition(t, e) {
      var r = z.lengthAttr(t, "topFromText"), a = z.lengthAttr(t, "bottomFromText"), n = z.lengthAttr(t, "rightFromText"), u = z.lengthAttr(t, "leftFromText");
      e.cssStyle.float = "left", e.cssStyle["margin-bottom"] = ce.addSize(e.cssStyle["margin-bottom"], a), e.cssStyle["margin-left"] = ce.addSize(e.cssStyle["margin-left"], u), e.cssStyle["margin-right"] = ce.addSize(e.cssStyle["margin-right"], n), e.cssStyle["margin-top"] = ce.addSize(e.cssStyle["margin-top"], r);
    }
    parseTableRow(t) {
      var e = { type: q.Row, children: [] };
      return ue.foreach(t, (r) => {
        switch (r.localName) {
          case "tc":
            e.children.push(this.parseTableCell(r));
            break;
          case "trPr":
            this.parseTableRowProperties(r, e);
            break;
        }
      }), e;
    }
    parseTableRowProperties(t, e) {
      e.cssStyle = this.parseDefaultProperties(t, {}, null, (r) => {
        switch (r.localName) {
          case "cnfStyle":
            e.className = ce.classNameOfCnfStyle(r);
            break;
          case "tblHeader":
            e.isHeader = z.boolAttr(r, "val");
            break;
          default:
            return false;
        }
        return true;
      });
    }
    parseTableCell(t) {
      var e = { type: q.Cell, children: [] };
      return ue.foreach(t, (r) => {
        switch (r.localName) {
          case "tbl":
            e.children.push(this.parseTable(r));
            break;
          case "p":
            e.children.push(this.parseParagraph(r));
            break;
          case "tcPr":
            this.parseTableCellProperties(r, e);
            break;
        }
      }), e;
    }
    parseTableCellProperties(t, e) {
      e.cssStyle = this.parseDefaultProperties(t, {}, null, (r) => {
        var a;
        switch (r.localName) {
          case "gridSpan":
            e.span = z.intAttr(r, "val", null);
            break;
          case "vMerge":
            e.verticalMerge = (a = z.attr(r, "val")) != null ? a : "continue";
            break;
          case "cnfStyle":
            e.className = ce.classNameOfCnfStyle(r);
            break;
          default:
            return false;
        }
        return true;
      });
    }
    parseDefaultProperties(t, e = null, r = null, a = null) {
      return e = e || {}, ue.foreach(t, (n) => {
        if (!(a != null && a(n)))
          switch (n.localName) {
            case "jc":
              e["text-align"] = ce.valueOfJc(n);
              break;
            case "textAlignment":
              e["vertical-align"] = ce.valueOfTextAlignment(n);
              break;
            case "color":
              e.color = ue.colorAttr(n, "val", null, Ue.color);
              break;
            case "sz":
              e["font-size"] = e["min-height"] = z.lengthAttr(n, "val", pe.FontSize);
              break;
            case "shd":
              e["background-color"] = ue.colorAttr(n, "fill", null, Ue.shd);
              break;
            case "highlight":
              e["background-color"] = ue.colorAttr(n, "val", null, Ue.highlight);
              break;
            case "vertAlign":
              break;
            case "position":
              e.verticalAlign = z.lengthAttr(n, "val", pe.FontSize);
              break;
            case "tcW":
              if (this.options.ignoreWidth)
                break;
            case "tblW":
              e.width = ce.valueOfSize(n, "w");
              break;
            case "trHeight":
              this.parseTrHeight(n, e);
              break;
            case "strike":
              e["text-decoration"] = z.boolAttr(n, "val", true) ? "line-through" : "none";
              break;
            case "b":
              e["font-weight"] = z.boolAttr(n, "val", true) ? "bold" : "normal";
              break;
            case "i":
              e["font-style"] = z.boolAttr(n, "val", true) ? "italic" : "normal";
              break;
            case "caps":
              e["text-transform"] = z.boolAttr(n, "val", true) ? "uppercase" : "none";
              break;
            case "smallCaps":
              e["text-transform"] = z.boolAttr(n, "val", true) ? "lowercase" : "none";
              break;
            case "u":
              this.parseUnderline(n, e);
              break;
            case "ind":
            case "tblInd":
              this.parseIndentation(n, e);
              break;
            case "rFonts":
              this.parseFont(n, e);
              break;
            case "tblBorders":
              this.parseBorderProperties(n, r || e);
              break;
            case "tblCellSpacing":
              e["border-spacing"] = ce.valueOfMargin(n), e["border-collapse"] = "separate";
              break;
            case "pBdr":
              this.parseBorderProperties(n, e);
              break;
            case "bdr":
              e.border = ce.valueOfBorder(n);
              break;
            case "tcBorders":
              this.parseBorderProperties(n, e);
              break;
            case "vanish":
              z.boolAttr(n, "val", true) && (e.display = "none");
              break;
            case "kern":
              break;
            case "noWrap":
              break;
            case "tblCellMar":
            case "tcMar":
              this.parseMarginProperties(n, r || e);
              break;
            case "tblLayout":
              e["table-layout"] = ce.valueOfTblLayout(n);
              break;
            case "vAlign":
              e["vertical-align"] = ce.valueOfTextAlignment(n);
              break;
            case "spacing":
              t.localName == "pPr" && this.parseSpacing(n, e);
              break;
            case "wordWrap":
              z.boolAttr(n, "val") && (e["overflow-wrap"] = "break-word");
              break;
            case "bCs":
            case "iCs":
            case "szCs":
            case "tabs":
            case "outlineLvl":
            case "contextualSpacing":
            case "tblStyleColBandSize":
            case "tblStyleRowBandSize":
            case "webHidden":
            case "pageBreakBefore":
            case "suppressLineNumbers":
            case "keepLines":
            case "keepNext":
            case "lang":
            case "widowControl":
            case "bidi":
            case "rtl":
            case "noProof":
              break;
            default:
              this.options.debug && console.warn(`DOCX: Unknown document element: ${t.localName}.${n.localName}`);
              break;
          }
      }), e;
    }
    parseUnderline(t, e) {
      var r = z.attr(t, "val");
      if (r != null) {
        switch (r) {
          case "dash":
          case "dashDotDotHeavy":
          case "dashDotHeavy":
          case "dashedHeavy":
          case "dashLong":
          case "dashLongHeavy":
          case "dotDash":
          case "dotDotDash":
            e["text-decoration-style"] = "dashed";
            break;
          case "dotted":
          case "dottedHeavy":
            e["text-decoration-style"] = "dotted";
            break;
          case "double":
            e["text-decoration-style"] = "double";
            break;
          case "single":
          case "thick":
            e["text-decoration"] = "underline";
            break;
          case "wave":
          case "wavyDouble":
          case "wavyHeavy":
            e["text-decoration-style"] = "wavy";
            break;
          case "words":
            e["text-decoration"] = "underline";
            break;
          case "none":
            e["text-decoration"] = "none";
            break;
        }
        var a = ue.colorAttr(t, "color");
        a && (e["text-decoration-color"] = a);
      }
    }
    parseFont(t, e) {
      var r = z.attr(t, "ascii"), a = ce.themeValue(t, "asciiTheme"), n = [r, a].filter((u) => u).join(", ");
      n.length > 0 && (e["font-family"] = n);
    }
    parseIndentation(t, e) {
      var r = z.lengthAttr(t, "firstLine"), a = z.lengthAttr(t, "hanging"), n = z.lengthAttr(t, "left"), u = z.lengthAttr(t, "start"), l = z.lengthAttr(t, "right"), i = z.lengthAttr(t, "end");
      r && (e["text-indent"] = r), a && (e["text-indent"] = `-${a}`), (n || u) && (e["margin-left"] = n || u), (l || i) && (e["margin-right"] = l || i);
    }
    parseSpacing(t, e) {
      var r = z.lengthAttr(t, "before"), a = z.lengthAttr(t, "after"), n = z.intAttr(t, "line", null), u = z.attr(t, "lineRule");
      if (r && (e["margin-top"] = r), a && (e["margin-bottom"] = a), n !== null)
        switch (u) {
          case "auto":
            e["line-height"] = `${(n / 240).toFixed(2)}`;
            break;
          case "atLeast":
            e["line-height"] = `calc(100% + ${n / 20}pt)`;
            break;
          default:
            e["line-height"] = e["min-height"] = `${n / 20}pt`;
            break;
        }
    }
    parseMarginProperties(t, e) {
      ue.foreach(t, (r) => {
        switch (r.localName) {
          case "left":
            e["padding-left"] = ce.valueOfMargin(r);
            break;
          case "right":
            e["padding-right"] = ce.valueOfMargin(r);
            break;
          case "top":
            e["padding-top"] = ce.valueOfMargin(r);
            break;
          case "bottom":
            e["padding-bottom"] = ce.valueOfMargin(r);
            break;
        }
      });
    }
    parseTrHeight(t, e) {
      switch (z.attr(t, "hRule")) {
        case "exact":
          e.height = z.lengthAttr(t, "val");
          break;
        case "atLeast":
        default:
          e.height = z.lengthAttr(t, "val");
          break;
      }
    }
    parseBorderProperties(t, e) {
      ue.foreach(t, (r) => {
        switch (r.localName) {
          case "start":
          case "left":
            e["border-left"] = ce.valueOfBorder(r);
            break;
          case "end":
          case "right":
            e["border-right"] = ce.valueOfBorder(r);
            break;
          case "top":
            e["border-top"] = ce.valueOfBorder(r);
            break;
          case "bottom":
            e["border-bottom"] = ce.valueOfBorder(r);
            break;
        }
      });
    }
  }
  const Cr = ["black", "blue", "cyan", "darkBlue", "darkCyan", "darkGray", "darkGreen", "darkMagenta", "darkRed", "darkYellow", "green", "lightGray", "magenta", "none", "red", "white", "yellow"];
  class ue {
    static foreach(t, e) {
      for (var r = 0; r < t.childNodes.length; r++) {
        let a = t.childNodes[r];
        a.nodeType == Node.ELEMENT_NODE && e(a);
      }
    }
    static colorAttr(t, e, r = null, a = "black") {
      var n = z.attr(t, e);
      if (n)
        return n == "auto" ? a : Cr.includes(n) ? n : `#${n}`;
      var u = z.attr(t, "themeColor");
      return u ? `var(--docx-${u}-color)` : r;
    }
    static sizeValue(t, e = pe.Dxa) {
      return tt(t.textContent, e);
    }
  }
  class ce {
    static themeValue(t, e) {
      var r = z.attr(t, e);
      return r ? `var(--docx-${r}-font)` : null;
    }
    static valueOfSize(t, e) {
      var r = pe.Dxa;
      switch (z.attr(t, "type")) {
        case "dxa":
          break;
        case "pct":
          r = pe.Percent;
          break;
        case "auto":
          return "auto";
      }
      return z.lengthAttr(t, e, r);
    }
    static valueOfMargin(t) {
      return z.lengthAttr(t, "w");
    }
    static valueOfBorder(t) {
      var e = z.attr(t, "val");
      if (e == "nil")
        return "none";
      var r = ue.colorAttr(t, "color"), a = z.lengthAttr(t, "sz", pe.Border);
      return `${a} solid ${r == "auto" ? Ue.borderColor : r}`;
    }
    static valueOfTblLayout(t) {
      var e = z.attr(t, "val");
      return e == "fixed" ? "fixed" : "auto";
    }
    static classNameOfCnfStyle(t) {
      const e = z.attr(t, "val");
      return ["first-row", "last-row", "first-col", "last-col", "odd-col", "even-col", "odd-row", "even-row", "ne-cell", "nw-cell", "se-cell", "sw-cell"].filter((a, n) => e[n] == "1").join(" ");
    }
    static valueOfJc(t) {
      var e = z.attr(t, "val");
      switch (e) {
        case "start":
        case "left":
          return "left";
        case "center":
          return "center";
        case "end":
        case "right":
          return "right";
        case "both":
          return "justify";
      }
      return e;
    }
    static valueOfVertAlign(t, e = false) {
      var r = z.attr(t, "val");
      switch (r) {
        case "subscript":
          return "sub";
        case "superscript":
          return e ? "sup" : "super";
      }
      return e ? null : r;
    }
    static valueOfTextAlignment(t) {
      var e = z.attr(t, "val");
      switch (e) {
        case "auto":
        case "baseline":
          return "baseline";
        case "top":
          return "top";
        case "center":
          return "middle";
        case "bottom":
          return "bottom";
      }
      return e;
    }
    static addSize(t, e) {
      return t == null ? e : e == null ? t : `calc(${t} + ${e})`;
    }
    static classNameOftblLook(t) {
      const e = z.hexAttr(t, "val", 0);
      let r = "";
      return (z.boolAttr(t, "firstRow") || e & 32) && (r += " first-row"), (z.boolAttr(t, "lastRow") || e & 64) && (r += " last-row"), (z.boolAttr(t, "firstColumn") || e & 128) && (r += " first-col"), (z.boolAttr(t, "lastColumn") || e & 256) && (r += " last-col"), (z.boolAttr(t, "noHBand") || e & 512) && (r += " no-hband"), (z.boolAttr(t, "noVBand") || e & 1024) && (r += " no-vband"), r.trim();
    }
  }
  const gt = { pos: 0, leader: "none", style: "left" }, Ar = 50;
  function Pr(f = document.body) {
    const t = document.createElement("div");
    t.style.width = "100pt", f.appendChild(t);
    const e = 100 / t.offsetWidth;
    return f.removeChild(t), e;
  }
  function Er(f, t, e, r = 0.75) {
    const a = f.closest("p"), n = f.getBoundingClientRect(), u = a.getBoundingClientRect(), l = getComputedStyle(a), i = (t == null ? void 0 : t.length) > 0 ? t.map((b) => ({ pos: bt(b.position), leader: b.leader, style: b.style })).sort((b, C) => b.pos - C.pos) : [gt], d = i[i.length - 1], p = u.width * r, m = bt(e);
    let _ = d.pos + m;
    if (_ < p)
      for (; _ < p && i.length < Ar; _ += m)
        i.push(Pe(Ce({}, gt), { pos: _ }));
    const c = parseFloat(l.marginLeft), y = u.left + c, w = (n.left - y) * r, h2 = i.find((b) => b.style != "clear" && b.pos > w);
    if (h2 == null)
      return;
    let g = 1;
    if (h2.style == "right" || h2.style == "center") {
      const b = Array.from(a.querySelectorAll(`.${f.className}`)), C = b.indexOf(f) + 1, N = document.createRange();
      N.setStart(f, 1), C < b.length ? N.setEndBefore(b[C]) : N.setEndAfter(a);
      const P = h2.style == "center" ? 0.5 : 1, U = N.getBoundingClientRect(), I = U.left + P * U.width - (u.left - c);
      g = h2.pos - I * r;
    } else
      g = h2.pos - w;
    switch (f.innerHTML = "&nbsp;", f.style.textDecoration = "inherit", f.style.wordSpacing = `${g.toFixed(0)}pt`, h2.leader) {
      case "dot":
      case "middleDot":
        f.style.textDecoration = "underline", f.style.textDecorationStyle = "dotted";
        break;
      case "hyphen":
      case "heavy":
      case "underscore":
        f.style.textDecoration = "underline";
        break;
    }
  }
  function bt(f) {
    return parseFloat(f);
  }
  var vt = { exports: {} }, Ge = { exports: {} }, Ke = { exports: {} }, xe = 1e3, Be = xe * 60, ze = Be * 60, Ne = ze * 24, xr = Ne * 365.25, Br = function(f, t) {
    t = t || {};
    var e = typeof f;
    if (e === "string" && f.length > 0)
      return zr(f);
    if (e === "number" && isNaN(f) === false)
      return t.long ? Tr(f) : Nr(f);
    throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(f));
  };
  function zr(f) {
    if (f = String(f), !(f.length > 100)) {
      var t = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(f);
      if (!!t) {
        var e = parseFloat(t[1]), r = (t[2] || "ms").toLowerCase();
        switch (r) {
          case "years":
          case "year":
          case "yrs":
          case "yr":
          case "y":
            return e * xr;
          case "days":
          case "day":
          case "d":
            return e * Ne;
          case "hours":
          case "hour":
          case "hrs":
          case "hr":
          case "h":
            return e * ze;
          case "minutes":
          case "minute":
          case "mins":
          case "min":
          case "m":
            return e * Be;
          case "seconds":
          case "second":
          case "secs":
          case "sec":
          case "s":
            return e * xe;
          case "milliseconds":
          case "millisecond":
          case "msecs":
          case "msec":
          case "ms":
            return e;
          default:
            return;
        }
      }
    }
  }
  function Nr(f) {
    return f >= Ne ? Math.round(f / Ne) + "d" : f >= ze ? Math.round(f / ze) + "h" : f >= Be ? Math.round(f / Be) + "m" : f >= xe ? Math.round(f / xe) + "s" : f + "ms";
  }
  function Tr(f) {
    return je(f, Ne, "day") || je(f, ze, "hour") || je(f, Be, "minute") || je(f, xe, "second") || f + " ms";
  }
  function je(f, t, e) {
    if (!(f < t))
      return f < t * 1.5 ? Math.floor(f / t) + " " + e : Math.ceil(f / t) + " " + e + "s";
  }
  (function(f, t) {
    t = f.exports = a.debug = a.default = a, t.coerce = i, t.disable = u, t.enable = n, t.enabled = l, t.humanize = Br, t.names = [], t.skips = [], t.formatters = {};
    var e;
    function r(d) {
      var p = 0, m;
      for (m in d)
        p = (p << 5) - p + d.charCodeAt(m), p |= 0;
      return t.colors[Math.abs(p) % t.colors.length];
    }
    function a(d) {
      function p() {
        if (!!p.enabled) {
          var m = p, _ = +new Date(), c = _ - (e || _);
          m.diff = c, m.prev = e, m.curr = _, e = _;
          for (var y = new Array(arguments.length), w = 0; w < y.length; w++)
            y[w] = arguments[w];
          y[0] = t.coerce(y[0]), typeof y[0] != "string" && y.unshift("%O");
          var h2 = 0;
          y[0] = y[0].replace(/%([a-zA-Z%])/g, function(b, C) {
            if (b === "%%")
              return b;
            h2++;
            var N = t.formatters[C];
            if (typeof N == "function") {
              var P = y[h2];
              b = N.call(m, P), y.splice(h2, 1), h2--;
            }
            return b;
          }), t.formatArgs.call(m, y);
          var g = p.log || t.log || console.log.bind(console);
          g.apply(m, y);
        }
      }
      return p.namespace = d, p.enabled = t.enabled(d), p.useColors = t.useColors(), p.color = r(d), typeof t.init == "function" && t.init(p), p;
    }
    function n(d) {
      t.save(d), t.names = [], t.skips = [];
      for (var p = (typeof d == "string" ? d : "").split(/[\s,]+/), m = p.length, _ = 0; _ < m; _++)
        !p[_] || (d = p[_].replace(/\*/g, ".*?"), d[0] === "-" ? t.skips.push(new RegExp("^" + d.substr(1) + "$")) : t.names.push(new RegExp("^" + d + "$")));
    }
    function u() {
      t.enable("");
    }
    function l(d) {
      var p, m;
      for (p = 0, m = t.skips.length; p < m; p++)
        if (t.skips[p].test(d))
          return false;
      for (p = 0, m = t.names.length; p < m; p++)
        if (t.names[p].test(d))
          return true;
      return false;
    }
    function i(d) {
      return d instanceof Error ? d.stack || d.message : d;
    }
  })(Ke, Ke.exports), function(f, t) {
    t = f.exports = Ke.exports, t.log = a, t.formatArgs = r, t.save = n, t.load = u, t.useColors = e, t.storage = typeof chrome != "undefined" && typeof chrome.storage != "undefined" ? chrome.storage.local : l(), t.colors = ["lightseagreen", "forestgreen", "goldenrod", "dodgerblue", "darkorchid", "crimson"];
    function e() {
      return typeof window != "undefined" && window.process && window.process.type === "renderer" ? true : typeof document != "undefined" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || typeof window != "undefined" && window.console && (window.console.firebug || window.console.exception && window.console.table) || typeof navigator != "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || typeof navigator != "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
    }
    t.formatters.j = function(i) {
      try {
        return JSON.stringify(i);
      } catch (d) {
        return "[UnexpectedJSONParseError]: " + d.message;
      }
    };
    function r(i) {
      var d = this.useColors;
      if (i[0] = (d ? "%c" : "") + this.namespace + (d ? " %c" : " ") + i[0] + (d ? "%c " : " ") + "+" + t.humanize(this.diff), !!d) {
        var p = "color: " + this.color;
        i.splice(1, 0, p, "color: inherit");
        var m = 0, _ = 0;
        i[0].replace(/%[a-zA-Z%]/g, function(c) {
          c !== "%%" && (m++, c === "%c" && (_ = m));
        }), i.splice(_, 0, p);
      }
    }
    function a() {
      return typeof console == "object" && console.log && Function.prototype.apply.call(console.log, console, arguments);
    }
    function n(i) {
      try {
        i == null ? t.storage.removeItem("debug") : t.storage.debug = i;
      } catch {
      }
    }
    function u() {
      var i;
      try {
        i = t.storage.debug;
      } catch {
      }
      return !i && typeof process != "undefined" && "env" in process && (i = {}.DEBUG), i;
    }
    t.enable(u());
    function l() {
      try {
        return window.localStorage;
      } catch {
      }
    }
  }(Ge, Ge.exports), function(f) {
    (function(t, e) {
      var r = f.exports;
      r ? f.exports = e(Ge.exports("eventproxy")) : this[t] = e();
    })("EventProxy", function(t) {
      t = t || function() {
      };
      /*!
      * refs
      */
      var e = Array.prototype.slice, r = Array.prototype.concat, a = "__all__", n = function() {
        if (!(this instanceof n))
          return new n();
        this._callbacks = {}, this._fired = {};
      };
      n.prototype.addListener = function(i, d) {
        return t("Add listener for %s", i), this._callbacks[i] = this._callbacks[i] || [], this._callbacks[i].push(d), this;
      }, n.prototype.bind = n.prototype.addListener, n.prototype.on = n.prototype.addListener, n.prototype.subscribe = n.prototype.addListener, n.prototype.headbind = function(i, d) {
        return t("Add listener for %s", i), this._callbacks[i] = this._callbacks[i] || [], this._callbacks[i].unshift(d), this;
      }, n.prototype.removeListener = function(i, d) {
        var p = this._callbacks;
        if (!i)
          t("Remove all listeners"), this._callbacks = {};
        else if (!d)
          t("Remove all listeners of %s", i), p[i] = [];
        else {
          var m = p[i];
          if (m)
            for (var _ = m.length, c = 0; c < _; c++)
              d === m[c] && (t("Remove a listener of %s", i), m[c] = null);
        }
        return this;
      }, n.prototype.unbind = n.prototype.removeListener, n.prototype.removeAllListeners = function(i) {
        return this.unbind(i);
      }, n.prototype.bindForAll = function(i) {
        this.bind(a, i);
      }, n.prototype.unbindForAll = function(i) {
        this.unbind(a, i);
      }, n.prototype.trigger = function(i, d) {
        var p, m, _, c, y, w = 2, h2 = this._callbacks;
        for (t("Emit event %s with data %j", i, d); w--; )
          if (m = w ? i : a, p = h2[m], p)
            for (c = 0, y = p.length; c < y; c++)
              if (!(_ = p[c]))
                p.splice(c, 1), c--, y--;
              else {
                for (var g = [], b = w ? 1 : 0, C = b; C < arguments.length; C++)
                  g.push(arguments[C]);
                _.apply(this, g);
              }
        return this;
      }, n.prototype.emit = n.prototype.trigger, n.prototype.fire = n.prototype.trigger, n.prototype.once = function(i, d) {
        var p = this, m = function() {
          d.apply(p, arguments), p.unbind(i, m);
        };
        return this.bind(i, m), this;
      };
      var u = typeof setImmediate != "undefined" && setImmediate || typeof process != "undefined" && process.nextTick || function(i) {
        setTimeout(i, 0);
      };
      n.prototype.emitLater = function() {
        var i = this, d = arguments;
        u(function() {
          i.trigger.apply(i, d);
        });
      }, n.prototype.immediate = function(i, d, p) {
        return this.bind(i, d), this.trigger(i, p), this;
      }, n.prototype.asap = n.prototype.immediate;
      var l = function(i, d, p, m) {
        var _ = this, c = arguments.length, y = 0, w = {};
        if (c < 3)
          return this;
        var h2 = e.call(arguments, 0, -2), g = arguments[c - 2], b = arguments[c - 1];
        if (typeof g != "function")
          return this;
        t("Assign listener for events %j, once is %s", h2, !!b);
        for (var C = function(I) {
          var H = b ? "once" : "bind";
          _[H](I, function(T) {
            _._fired[I] = _._fired[I] || {}, _._fired[I].data = T, w[I] || (w[I] = true, y++);
          });
        }, N = h2.length, P = 0; P < N; P++)
          C(h2[P]);
        var U = function(I) {
          if (!(y < N) && !!w[I]) {
            for (var H = [], T = 0; T < N; T++)
              H.push(_._fired[h2[T]].data);
            b && _.unbindForAll(U), t("Events %j all emited with data %j", h2, H), g.apply(null, H);
          }
        };
        _.bindForAll(U);
      };
      return n.prototype.all = function(i, d, p) {
        var m = r.apply([], arguments);
        return m.push(true), l.apply(this, m), this;
      }, n.prototype.assign = n.prototype.all, n.prototype.fail = function(i) {
        var d = this;
        return d.once("error", function() {
          d.unbind(), i.apply(null, arguments);
        }), this;
      }, n.prototype.throw = function() {
        var i = this;
        i.emit.apply(i, ["error"].concat(e.call(arguments)));
      }, n.prototype.tail = function() {
        var i = r.apply([], arguments);
        return i.push(false), l.apply(this, i), this;
      }, n.prototype.assignAll = n.prototype.tail, n.prototype.assignAlways = n.prototype.tail, n.prototype.after = function(i, d, p) {
        if (d === 0)
          return p.call(null, []), this;
        var m = this, _ = [];
        this._after = this._after || {};
        var c = i + "_group";
        this._after[c] = { index: 0, results: [] }, t("After emit %s times, event %s's listenner will execute", d, i);
        var y = function(w, h2) {
          w === i && (d--, _.push(h2), d < 1 && (t("Event %s was emit %s, and execute the listenner", i, d), m.unbindForAll(y), p.apply(null, [_]))), w === c && (d--, m._after[c].results[h2.index] = h2.result, d < 1 && (t("Event %s was emit %s, and execute the listenner", i, d), m.unbindForAll(y), p.call(null, m._after[c].results)));
        };
        return m.bindForAll(y), this;
      }, n.prototype.group = function(i, d) {
        var p = this, m = i + "_group", _ = p._after[m].index;
        return p._after[m].index++, function(c, y) {
          if (c)
            return p.emit.apply(p, ["error"].concat(e.call(arguments)));
          p.emit(m, { index: _, result: d ? d.apply(null, e.call(arguments, 1)) : y });
        };
      }, n.prototype.any = function() {
        var i = this, d = arguments[arguments.length - 1], p = e.call(arguments, 0, -1), m = p.join("_");
        t("Add listenner for Any of events %j emit", p), i.once(m, d);
        for (var _ = function(y) {
          i.bind(y, function(w) {
            t("One of events %j emited, execute the listenner"), i.trigger(m, { data: w, eventName: y });
          });
        }, c = 0; c < p.length; c++)
          _(p[c]);
      }, n.prototype.not = function(i, d) {
        var p = this;
        t("Add listenner for not event %s", i), p.bindForAll(function(m, _) {
          m !== i && (t("listenner execute of event %s emit, but not event %s.", m, i), d(_));
        });
      }, n.prototype.done = function(i, d) {
        var p = this;
        return function(m, _) {
          if (m)
            return p.emit.apply(p, ["error"].concat(e.call(arguments)));
          var c = e.call(arguments, 1);
          if (typeof i == "string")
            return d ? p.emit(i, d.apply(null, c)) : p.emit.apply(p, [i].concat(c));
          if (arguments.length <= 2)
            return i(_);
          i.apply(null, c);
        };
      }, n.prototype.doneLater = function(i, d) {
        var p = this.done(i, d);
        return function(m, _) {
          var c = arguments;
          u(function() {
            p.apply(null, c);
          });
        };
      }, n.create = function() {
        var i = new n(), d = r.apply([], arguments);
        if (d.length) {
          var p = d[d.length - 1], m = d[d.length - 2];
          typeof p == "function" && typeof m == "function" && (d.pop(), i.fail(p)), i.assign.apply(i, d);
        }
        return i;
      }, n.EventProxy = n, n;
    });
  }(vt);
  var Fr = vt.exports;
  class Ir {
    constructor(t) {
      X(this, "className", "docx");
      X(this, "document");
      X(this, "options");
      X(this, "styleMap", {});
      X(this, "currentPart", null);
      X(this, "tableVerticalMerges", []);
      X(this, "currentVerticalMerge", null);
      X(this, "tableCellPositions", []);
      X(this, "currentCellPosition", null);
      X(this, "footnoteMap", {});
      X(this, "endnoteMap", {});
      X(this, "currentFootnoteIds");
      X(this, "currentEndnoteIds", []);
      X(this, "usedHederFooterParts", []);
      X(this, "renderImageCount", 0);
      X(this, "defaultTabSize");
      X(this, "domNumberings", {});
      X(this, "ep2", new Fr());
      X(this, "currentTabs", []);
      X(this, "tabsTimeout", 0);
      X(this, "createElement", yt);
      this.htmlDocument = t;
    }
    render(t, e, r = null, a) {
      return new Promise((n) => {
        var l;
        this.document = t, this.options = a, this.className = a.className, this.styleMap = null, this.renderImageCount = 0, r = r || e, Rr(e), t.numberingPart && (this.prodessNumberings(t.numberingPart.domNumberings), t.numberingPart.domNumberings.forEach((i) => {
          !this.domNumberings[i.id] && (this.domNumberings[i.id] = {}), this.domNumberings[i.id][i.level] = Pe(Ce({}, i), { count: 1, pCount: 1 });
        })), t.settingsPart && (this.defaultTabSize = (l = t.settingsPart.settings) == null ? void 0 : l.defaultTabStop), !a.ignoreFonts && t.fontTablePart && this.renderFontTable(t.fontTablePart, r), this.countNum = 100;
        var u = this.renderSections(t.documentPart.body);
        Ye(e, u), this.refreshTabStops(), this.ep2.after("renderImage", this.renderImageCount, (i) => {
          n("ok");
        });
      });
    }
    renderTheme(t, e) {
      var l, i;
      const r = {}, a = (l = t.theme) == null ? void 0 : l.fontScheme;
      a && (a.majorFont && (r["--docx-majorHAnsi-font"] = a.majorFont.latinTypeface), a.minorFont && (r["--docx-minorHAnsi-font"] = a.minorFont.latinTypeface));
      const n = (i = t.theme) == null ? void 0 : i.colorScheme;
      if (n)
        for (let [d, p] of Object.entries(n.colors))
          r[`--docx-${d}-color`] = `#${p}`;
      const u = this.styleToString(`.${this.className}`, r);
      e.appendChild(qe(u));
    }
    renderFontTable(t, e) {
      for (let r of t.fonts)
        for (let a of r.embedFontRefs)
          this.document.loadFont(a.id, a.key).then((n) => {
            const u = { "font-family": r.name, src: `url(${n})` };
            (a.type == "bold" || a.type == "boldItalic") && (u["font-weight"] = "bold"), (a.type == "italic" || a.type == "boldItalic") && (u["font-style"] = "italic"), Or(e, `docxjs ${r.name} font`);
            const l = this.styleToString("@font-face", u);
            e.appendChild(qe(l)), this.refreshTabStops();
          });
    }
    processStyleName(t) {
      return t ? `${this.className}_${Ft(t)}` : this.className;
    }
    processStyles(t) {
      const e = It(t.filter((a) => a.id != null), (a) => a.id);
      for (const a of t.filter((n) => n.basedOn)) {
        var r = e[a.basedOn];
        if (r) {
          a.paragraphProps = De(a.paragraphProps, r.paragraphProps), a.runProps = De(a.runProps, r.runProps);
          for (const n of r.styles) {
            const u = a.styles.find((l) => l.target == n.target);
            u ? this.copyStyleProperties(n.values, u.values) : a.styles.push(Pe(Ce({}, n), { values: Ce({}, n.values) }));
          }
        } else
          this.options.debug && console.warn(`Can't find base style ${a.basedOn}`);
      }
      for (let a of t)
        a.cssName = this.processStyleName(a.id);
      return e;
    }
    prodessNumberings(t) {
      var e;
      for (let r of t.filter((a) => a.pStyleName)) {
        const a = this.findStyle(r.pStyleName);
        (e = a == null ? void 0 : a.paragraphProps) != null && e.numbering && (a.paragraphProps.numbering.level = r.level);
      }
    }
    processElement(t) {
      if (t.children)
        for (var e of t.children)
          e.parent = t, e.type == q.Table ? this.processTable(e) : this.processElement(e);
    }
    processTable(t) {
      for (var e of t.children)
        for (var r of e.children)
          r.cssStyle = this.copyStyleProperties(t.cellStyle, r.cssStyle, ["border-left", "border-right", "border-top", "border-bottom", "padding-left", "padding-right", "padding-top", "padding-bottom"]), this.processElement(r);
    }
    copyStyleProperties(t, e, r = null) {
      if (!t)
        return e;
      e == null && (e = {}), r == null && (r = Object.getOwnPropertyNames(t));
      for (var a of r)
        t.hasOwnProperty(a) && !e.hasOwnProperty(a) && (e[a] = t[a]);
      return e;
    }
    createSection(t, e) {
      var r = this.createElement("div", { className: t });
      return r;
    }
    renderSections(t) {
      const e = [];
      this.processElement(t);
      const r = this.splitBySection(t.children);
      let a = null;
      for (let u = 0, l = r.length; u < l; u++) {
        this.currentFootnoteIds = [];
        const i = r[u], d = i.sectProps || t.props, p = this.createSection(this.className + "-centent-body", d);
        this.options.renderHeaders && this.renderHeaderFooter(d.headerRefs, d, e.length, a != d, p);
        var n = this.createElement("div");
        this.renderElements(i.elements, n), p.appendChild(n), this.options.renderFootnotes && this.renderNotes(this.currentFootnoteIds, this.footnoteMap, p), this.options.renderEndnotes && u == l - 1 && this.renderNotes(this.currentEndnoteIds, this.endnoteMap, p), this.options.renderFooters && this.renderHeaderFooter(d.footerRefs, d, e.length, a != d, p), e.push(p), a = d;
      }
      return e;
    }
    renderHeaderFooter(t, e, r, a, n) {
      var i, d;
      if (!!t) {
        var u = (d = (i = e.titlePage && a ? t.find((p) => p.type == "first") : null) != null ? i : r % 2 == 1 ? t.find((p) => p.type == "even") : null) != null ? d : t.find((p) => p.type == "default"), l = u && this.document.findPartByRelId(u.id, this.document.documentPart);
        l && (this.currentPart = l, this.usedHederFooterParts.includes(l.path) || (this.processElement(l.rootElement), this.usedHederFooterParts.push(l.path)), this.renderElements([l.rootElement], n), this.currentPart = null);
      }
    }
    isPageBreakElement(t) {
      return t.type != q.Break ? false : t.break == "lastRenderedPageBreak" ? !this.options.ignoreLastRenderedPageBreak : t.break == "page";
    }
    splitBySection(t) {
      var p;
      var e = { sectProps: null, elements: [] }, r = [e];
      for (let m of t) {
        if (m.type == q.Paragraph) {
          const _ = this.findStyle(m.styleName);
          (p = _ == null ? void 0 : _.paragraphProps) != null && p.pageBreakBefore && (e.sectProps = a, e = { sectProps: null, elements: [] }, r.push(e));
        }
        if (e.elements.push(m), m.type == q.Paragraph) {
          const _ = m;
          var a = _.sectionProps, n = -1, u = -1;
          if (this.options.breakPages && _.children && (n = _.children.findIndex((c) => {
            var y, w;
            return u = (w = (y = c.children) == null ? void 0 : y.findIndex(this.isPageBreakElement.bind(this))) != null ? w : -1, u != -1;
          })), (a || n != -1) && (e.sectProps = a, e = { sectProps: null, elements: [] }, r.push(e)), n != -1) {
            let c = _.children[n], y = u < c.children.length - 1;
            if (n < _.children.length - 1 || y) {
              var l = m.children, i = Pe(Ce({}, m), { children: l.slice(n) });
              if (m.children = l.slice(0, n), e.elements.push(i), y) {
                let w = c.children, h2 = Pe(Ce({}, c), { children: w.slice(0, u) });
                m.children.push(h2), c.children = w.slice(u);
              }
            }
          }
        }
      }
      let d = null;
      for (let m = r.length - 1; m >= 0; m--)
        r[m].sectProps == null ? r[m].sectProps = d : d = r[m].sectProps;
      return r;
    }
    renderWrapper(t) {
      return this.createElement("div", { className: `${this.className}-wrapper` }, t);
    }
    renderDefaultStyle() {
      var t = this.className, e = `
.${t}-wrapper { background: gray; padding: 30px; padding-bottom: 0px; display: flex; flex-flow: column; align-items: center; } 
.${t}-wrapper>section.${t} { background: white; box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); margin-bottom: 30px; }
.${t} { color: black; }
section.${t} { box-sizing: border-box; display: flex; flex-flow: column nowrap; position: relative; overflow: hidden; }
section.${t}>article { margin-bottom: auto; }
.${t} table { border-collapse: collapse; }
.${t} table td, .${t} table th { vertical-align: top; }
.${t} p { margin: 0pt; min-height: 1em; }
.${t} span { white-space: pre-wrap; overflow-wrap: break-word; }
.${t} a { color: inherit; text-decoration: inherit; }
`;
      return qe(e);
    }
    renderNotes(t, e, r) {
      var a = t.map((u) => e[u]).filter((u) => u);
      if (a.length > 0) {
        var n = this.createElement("ol", null, this.renderElements(a));
        r.appendChild(n);
      }
    }
    renderElement(t) {
      switch (t.type) {
        case q.Paragraph:
          return this.renderParagraph(t);
        case q.BookmarkStart:
          return this.renderBookmarkStart(t);
        case q.BookmarkEnd:
          return null;
        case q.Run:
          return this.renderRun(t);
        case q.Table:
          return this.renderTable(t);
        case q.Row:
          return this.renderTableRow(t);
        case q.Cell:
          return this.renderTableCell(t);
        case q.Hyperlink:
          return this.renderHyperlink(t);
        case q.Drawing:
          return this.renderDrawing(t);
        case q.Image:
          return this.renderImage(t);
        case q.Text:
          return this.renderText(t);
        case q.Tab:
          return this.renderTab(t);
        case q.Symbol:
          return this.renderSymbol(t);
        case q.Break:
          return this.renderBreak(t);
        case q.Footer:
          return this.renderContainer(t, "footer");
        case q.Header:
          return this.renderContainer(t, "header");
        case q.Footnote:
        case q.Endnote:
          return this.renderContainer(t, "li");
        case q.FootnoteReference:
          return this.renderFootnoteReference(t);
        case q.EndnoteReference:
          return this.renderEndnoteReference(t);
        case q.NoBreakHyphen:
          return this.createElement("wbr");
      }
      return null;
    }
    renderChildren(t, e) {
      return this.renderElements(t.children, e);
    }
    renderElements(t, e) {
      if (t == null)
        return null;
      var r = t.map((a) => this.renderElement(a)).filter((a) => a != null);
      return e && Ye(e, r), r;
    }
    renderContainer(t, e) {
      return this.createElement(e, null, this.renderChildren(t));
    }
    renderParagraph(t) {
      var n, l, i;
      var e = this.createElement("p");
      const r = this.findStyle(t.styleName);
      t.tabs != null || (t.tabs = (n = r == null ? void 0 : r.paragraphProps) == null ? void 0 : n.tabs), this.renderClass(t, e), this.renderChildren(t, e), this.renderStyleValues(t.cssStyle, e), this.renderCommonProperties(e.style, t);
      const a = (i = t.numbering) != null ? i : (l = r == null ? void 0 : r.paragraphProps) == null ? void 0 : l.numbering;
      if (a) {
        if (this.domNumberings[a.id] && this.domNumberings[a.id][a.level]) {
          let d = this.domNumberings[a.id][a.level];
          if (e.firstChild && e.firstChild.innerHTML)
            e.firstChild.innerHTML = this.numLevelTextToContent(d) + e.firstChild.innerHTML;
          else {
            let p = this.createElement("span");
            p.innerHTML = this.numLevelTextToContent(d), e.appendChild(p);
          }
        }
        e.classList.add(this.numberingClass(a.id, a.level));
      }
      return e;
    }
    renderRunProperties(t, e) {
      this.renderCommonProperties(t, e);
    }
    renderCommonProperties(t, e) {
      e != null && (e.color && (t.color = e.color), e.fontSize && (t["font-size"] = e.fontSize));
    }
    renderHyperlink(t) {
      var e = this.createElement("a");
      return this.renderChildren(t, e), this.renderStyleValues(t.cssStyle, e), t.href && (e.href = t.href), e;
    }
    renderDrawing(t) {
      var e = this.createElement("div");
      return e.style.display = "inline-block", e.style.position = "relative", e.style.textIndent = "0px", this.renderChildren(t, e), this.renderStyleValues(t.cssStyle, e), e;
    }
    renderImage(t) {
      let e = this.createElement("img");
      !t.cssStyle["max-width"] && (t.cssStyle["max-width"] = "100%"), this.renderStyleValues(t.cssStyle, e);
      let r = this;
      return r.renderImageCount++, e.setAttribute("data-tp-src", t.src), this.document && this.document.loadDocumentImage(t.src, this.currentPart).then((a) => {
        r.ep2.emit("renderImage", { status: "ok", src: a, rId: t.src }), e.parentNode.style.width = null, e.parentNode.style.height = null, e.parentNode.style.display = null, e.src = a;
      }), e;
    }
    renderText(t) {
      return this.htmlDocument.createTextNode(t.text);
    }
    renderBreak(t) {
      return t.break == "textWrapping" ? this.createElement("br") : null;
    }
    renderSymbol(t) {
      var e = this.createElement("span");
      return e.style.fontFamily = t.font, e.innerHTML = `&#x${t.char};`, e;
    }
    renderFootnoteReference(t) {
      var e = this.createElement("sup");
      return this.currentFootnoteIds.push(t.id), e.textContent = `${this.currentFootnoteIds.length}`, e;
    }
    renderEndnoteReference(t) {
      var e = this.createElement("sup");
      return this.currentEndnoteIds.push(t.id), e.textContent = `${this.currentEndnoteIds.length}`, e;
    }
    renderTab(t) {
      var a;
      var e = this.createElement("span");
      if (e.innerHTML = "&emsp;", this.options.experimental) {
        e.className = this.tabStopClass();
        var r = (a = Dr(t, q.Paragraph)) == null ? void 0 : a.tabs;
        this.currentTabs.push({ stops: r, span: e });
      }
      return e;
    }
    renderBookmarkStart(t) {
      var e = this.createElement("span");
      return e.id = t.name, e;
    }
    renderRun(t) {
      if (t.fieldRun)
        return null;
      const e = this.createElement("span");
      if (t.id && (e.id = t.id), this.renderClass(t, e), this.renderStyleValues(t.cssStyle, e), t.verticalAlign) {
        const r = this.createElement(t.verticalAlign);
        this.renderChildren(t, r), e.appendChild(r);
      } else
        this.renderChildren(t, e);
      return e;
    }
    renderTable(t) {
      let e = this.createElement("table");
      return this.tableCellPositions.push(this.currentCellPosition), this.tableVerticalMerges.push(this.currentVerticalMerge), this.currentVerticalMerge = {}, this.currentCellPosition = { col: 0, row: 0 }, t.columns && e.appendChild(this.renderTableColumns(t.columns)), !t.cssStyle["border-collapse"] && (t.cssStyle["border-collapse"] = "collapse"), this.renderClass(t, e), this.renderChildren(t, e), this.renderStyleValues(t.cssStyle, e), this.currentVerticalMerge = this.tableVerticalMerges.pop(), this.currentCellPosition = this.tableCellPositions.pop(), e;
    }
    renderTableColumns(t) {
      let e = this.createElement("colgroup");
      for (let r of t) {
        let a = this.createElement("col");
        r.width && (a.style.width = r.width), e.appendChild(a);
      }
      return e;
    }
    renderTableRow(t) {
      let e = this.createElement("tr");
      return this.currentCellPosition.col = 0, this.renderClass(t, e), this.renderChildren(t, e), this.renderStyleValues(t.cssStyle, e), this.currentCellPosition.row++, e;
    }
    renderTableCell(t) {
      let e = this.createElement("td");
      if (t.verticalMerge) {
        const r = this.currentCellPosition.col;
        t.verticalMerge == "restart" ? (this.currentVerticalMerge[r] = e, e.rowSpan = 1) : this.currentVerticalMerge[r] && (this.currentVerticalMerge[r].rowSpan += 1, e.style.display = "none");
      }
      return this.renderClass(t, e), this.renderChildren(t, e), this.renderStyleValues(t.cssStyle, e), t.span && (e.colSpan = t.span), this.currentCellPosition.col++, e;
    }
    renderStyleValues(t, e) {
      t && Object.keys(t).forEach((r) => {
        e.style[r] = typeof t[r] == "string" ? t[r].replace(/pt/g, "px") : t[r];
      });
    }
    renderClass(t, e) {
      t.className && (e.className = t.className), t.styleName && e.classList.add(this.processStyleName(t.styleName));
    }
    findStyle(t) {
      var e;
      return t && ((e = this.styleMap) == null ? void 0 : e[t]);
    }
    numberingClass(t, e) {
      return `${this.className}-num-${t}-${e}`;
    }
    tabStopClass() {
      return `${this.className}-tab-stop`;
    }
    styleToString(t, e, r = null) {
      let a = `${t} {\r
`;
      for (const n in e)
        a += `  ${n}: ${e[n]};\r
`;
      return r && (a += r), a + `}\r
`;
    }
    styleInlineToString(t, e = null) {
      let r = 'style="';
      !t["font-style"] && (t["font-style"] = "normal");
      for (const a in t)
        r += `${a}: ${t[a]}; `;
      return e && (r += e), r + '"';
    }
    numberingCounter(t, e) {
      return `${this.className}-num-${t}-${e}`;
    }
    levelTextToContent(t, e, r, a) {
      var l;
      const n = { tab: "\\9", space: "\\a0" };
      var u = t.replace(/%\d*/g, (i) => {
        let d = parseInt(i.substring(1), 10) - 1;
        return `"counter(${this.numberingCounter(r, d)}, ${a})"`;
      });
      return `"${u}${(l = n[numberingData.suff]) != null ? l : ""}"`;
    }
    numLevelTextToContent(t) {
      var n;
      const e = { tab: "&emsp;", space: "&nbsp;" }, r = { chineseCounting: ["\u96F6", "\u4E00", "\u4E8C", "\u4E09", "\u56DB", "\u4E94", "\u516D", "\u4E03", "\u516B", "\u4E5D", "\u5341"], decimalEnclosedCircleChinese: ["\u24EA", "\u2460", "\u2461", "\u2462", "\u2463", "\u2464", "\u2465", "\u2466", "\u2467", "\u2468", "\u2469", "\u246A", "\u246B", "\u246C", "\u246D", "\u246E", "\u246F", "\u2470", "\u2471", "\u2472", "\u2473", "\u3251", "\u3252", "\u3253", "\u3254", "\u3255", "\u3256", "\u3257", "\u3258", "\u3259", "\u325A", "\u325B", "\u325C", "\u325D", "\u325E", "\u325F", "\u32B1", "\u32B2", "\u32B3", "\u32B4", "\u32B5", "\u32B6", "\u32B7", "\u32B8", "\u32B9", "\u32BA", "\u32BB", "\u32BC", "\u32BD", "\u32BE", "\u32BF"], upperLetter: ["", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"], lowerLetter: ["", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"], test1: [" ", "\u24B6", "\u24B7", "\u24B8", "\u24B9", "\u24BA", "\u24BB", "\u24BC", "\u24BD", "\u24BE", "\u24BF", "\u24C0", "\u24C1", "\u24C2", "\u24C3", "\u24C4", "\u24C5", "\u24C6", "\u24C7", "\u24C8", "\u24C9", "\u24CA", "\u24CB", "\u24CC", "\u24CD", "\u24CE", "\u24CF"], test2: [" ", "\u24D0", "\u24D1", "\u24D2", "\u24D3", "\u24D4", "\u24D5", "\u24D6", "\u24D7", "\u24D8", "\u24D9", "\u24DA", "\u24DB", "\u24DC", "\u24DD", "\u24DE", "\u24DF", "\u24E0", "\u24E1", "\u24E2", "\u24E3", "\u24E4", "\u24E5", "\u24E6", "\u24E7", "\u24E8", "\u24E9"], test3: [" ", "\u2776", "\u2777", "\u2778", "\u2779", "\u277A", "\u277B", "\u277C", "\u277D", "\u277E", "\u277F", "\u24EB", "\u24EC", "\u24ED", "\u24EE", "\u24EF", "\u24F0", "\u24F1", "\u24F2", "\u24F3", "\u24F4"], test4: [" ", "\u24F5", "\u24F6", "\u24F7", "\u24F8", "\u24F9", "\u24FA", "\u24FB", "\u24FC", "\u24FD", "\u24FE"], test5: [" ", "\u3280", "\u3281", "\u3282", "\u3283", "\u3284", "\u3285", "\u3286", "\u3287", "\u3288", "\u3289"], upperRoman: [" ", "\u2160", "\u2161", "\u2162", "\u2163", "\u2164", "\u2165", "\u2166", "\u2167", "\u2168", "\u2169", "\u216A", "\u216B"], lowerRoman: ["", "\u2170", "\u2171", "\u2172", "\u2173", "\u2174", "\u2175", "\u2176", "\u2177", "\u2178", "\u2179", "\u217A", "\u217B"] };
      var a = t.levelText.replace(/%\d*/g, (u) => {
        let l = parseInt(u.substring(1), 10) - 1, i = 1;
        return l == t.level ? (i = t.count, this.domNumberings[t.id][l].pCount = i, this.domNumberings[t.id][l + 1] && (this.domNumberings[t.id][l + 1].count = 1), t.count++) : this.domNumberings[t.id] && this.domNumberings[t.id][l] && (i = this.domNumberings[t.id][l].count - 1, i == 0 && (i = 1)), r[t.format] && (i = r[t.format][i]), `${i}`;
      });
      return t.format == "bullet" && (a = "<em " + this.styleInlineToString(t.rStyle) + '">' + t.levelText + "</em>"), `${a}${(n = e[t.suff]) != null ? n : ""}`;
    }
    numFormatToCssValue(t) {
      var e = { none: "none", bullet: "disc", decimal: "decimal", lowerLetter: "lower-alpha", upperLetter: "upper-alpha", lowerRoman: "lower-roman", upperRoman: "upper-roman" };
      return e[t] || t;
    }
    refreshTabStops() {
      !this.options.experimental || (clearTimeout(this.tabsTimeout), this.tabsTimeout = setTimeout(() => {
        const t = Pr();
        for (let e of this.currentTabs)
          Er(e.span, e.stops, this.defaultTabSize, t);
      }, 500));
    }
  }
  function yt(f, t = void 0, e = void 0) {
    var r = Object.assign(document.createElement(f), t);
    return e && Ye(r, e), r;
  }
  function Rr(f) {
    f.innerHTML = "";
  }
  function Ye(f, t) {
    t.forEach((e) => f.appendChild(e));
  }
  function qe(f) {
    return yt("style", { innerHTML: f });
  }
  function Or(f, t) {
    f.appendChild(document.createComment(t));
  }
  function Dr(f, t) {
    for (var e = f.parent; e != null && e.type != t; )
      e = e.parent;
    return e;
  }
  const _t = { ignoreHeight: false, ignoreWidth: false, ignoreFonts: false, breakPages: true, debug: false, experimental: true, className: "tp-importword", inWrapper: false, trimXmlDeclaration: true, ignoreLastRenderedPageBreak: true, renderHeaders: false, renderFooters: false, renderFootnotes: false, renderEndnotes: false, useBase64URL: false };
  function Lr(f, t = null) {
    const e = Ce(Ce({}, _t), t), r = window.document.createElement("div"), a = new Ir(window.document);
    return new Promise((n) => {
      Xe.load(f, new Sr(e), e).then((u) => {
        a.render(u, r, null, e).then(() => {
          n({ html: r.innerHTML });
        });
      });
    });
  }
  return ge.defaultOptions = _t, ge.renderAsync = Lr, Object.defineProperties(ge, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } }), ge;
}({});
(function() {
  var v = tinymce.util.Tools.resolve("tinymce.util.Promise"), y = tinymce.util.Tools.resolve("tinymce.Env"), g = tinymce.util.Tools.resolve("tinymce.util.Delay"), d = function(e) {
    return new v(function(t) {
      var n = document.createElement("input");
      n.type = "file", n.style.position = "fixed", n.style.left = "0", n.style.top = "0", n.style.opacity = "0.001", document.body.appendChild(n);
      var r = function(i) {
        t(Array.prototype.slice.call(i.target.files));
      };
      n.addEventListener("change", r);
      var a = function(i) {
        var f = function(m) {
          try {
            t(Array.prototype.slice.call(m.target ? m.target.files : []));
          } catch {
          }
          n.parentNode.removeChild(n);
        };
        y.os.isAndroid() && i.type !== "remove" ? g.setEditorTimeout(e, f, 0) : f(), e.off("focusin remove", a);
      };
      e.on("focusin remove", a), n.click();
    });
  }, c = null, o = null;
  function l(e, t) {
    h2(t, function(n) {
      tpDocsToHtml.renderAsync(n).then(function(r) {
        p(e, r);
      });
    });
  }
  function p(e, t) {
    var n = t.html;
    if (typeof c != "function") {
      e.insertContent(n.replace(/\s\s\s/gi, "&nbsp; "));
      try {
        top.tinymce.activeEditor.notificationManager.close();
      } catch {
        try {
          e.notificationManager.close();
        } catch {
        }
      }
      e.notificationManager.open({ text: " \u5BFC\u5165 word \u6210\u529F ", type: "success", timeout: 2e3 });
    }
  }
  function h2(e, t) {
    var n = e[0], r = new FileReader();
    r.onload = function(a) {
      var i = a.target.result;
      t(i);
    }, r.readAsArrayBuffer(n);
  }
  var F = function(e) {
    c = e.getParam("importword_filter", void 0, "function"), o = e.getParam("importword_handler", void 0, "function");
  }, u = function(e, t) {
    F(e), d(e).then(function(n) {
      if (typeof o == "function") {
        var r = function(i) {
          l(e, i);
        };
        o(e, n, r);
      } else {
        var a = n[0].name || "defule.docx";
        a.substr(a.lastIndexOf(".") + 1) == "docx" ? (e.notificationManager.open({ text: "\u6B63\u5728\u8F6C\u6362\u4E2D...", type: "info", closeButton: false }), l(e, n)) : e.notificationManager.open({ text: "\u76EE\u524D\u4EC5\u652F\u6301docx\u6587\u4EF6\u683C\u5F0F\uFF0C\u82E5\u4E3Adoc\u683C\u5F0F\uFF0C\u8BF7\u5C06\u8F6C\u6362\u4E3Adocx", type: "warning" });
      }
    });
  }, w = function(e, t) {
    e.ui.registry.getAll().icons[t.registryName] || e.ui.registry.addIcon(t.registryName, t.icon), e.ui.registry.addButton(t.registryName, { icon: t.registryName, tooltip: t.title, onAction: function() {
      return u(e);
    } }), e.ui.registry.addMenuItem(t.registryName, { icon: t.registryName, text: t.title, onAction: function() {
      return u(e);
    } });
  }, C = function(e, t) {
    e.addCommand("mce".concat(t.registryName.substring(0, 1).toUpperCase() + t.registryName.substring(1)), function() {
      u(e);
    });
  }, E = function(e) {
    tinymce.PluginManager.add(e.registryName, function(t, n) {
      return w(t, e), C(t, e), { getMetadata: function() {
        return { name: e.name, url: e.repo };
      } };
    });
  }, s = { name: "Importword", registryName: "tpImportword", title: "\u5BFC\u5165word", repo: "https://github.com/Five-great/tinymce-plugins", icon: '<svg t="1604625110140" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="14669" width="24" height="24"><path d="M546.21184 76.9024a30.72 30.72 0 0 1 21.70368 8.9856l248.22784 247.75168a30.72 30.72 0 0 1 9.0112 21.74464v163.3792a10.24 10.24 0 0 1-10.24 10.24h-51.712a10.24 10.24 0 0 1-10.24-10.24v-109.568h-232.448a30.72 30.72 0 0 1-30.72-30.72v-229.888h-330.752v726.016h438.272a10.24 10.24 0 0 1 10.24 10.24v51.2a10.24 10.24 0 0 1-10.24 10.24h-478.72a30.72 30.72 0 0 1-30.72-30.72V107.6224a30.72 30.72 0 0 1 30.72-30.72h427.61728z m197.84192 531.712l-171.40736 141.43488a30.72 30.72 0 0 0 0 47.39072l171.40736 141.43488a10.24 10.24 0 0 0 14.2848-1.2288l36.01408-41.95328a10.24 10.24 0 0 0-1.6128-14.848l-94.68416-71.26016h232.43264a10.24 10.24 0 0 0 10.24-10.24v-51.2a10.24 10.24 0 0 0-10.24-10.24h-232.448l94.69952-71.26016a10.24 10.24 0 0 0 1.6128-14.848l-36.01408-41.95328a10.24 10.24 0 0 0-14.2848-1.2288z m-323.8912-224.512a10.24 10.24 0 0 1 10.24 10.24v51.2a10.24 10.24 0 0 1-10.24 10.24h-190.464a10.24 10.24 0 0 1-10.24-10.24v-51.2a10.24 10.24 0 0 1 10.24-10.24h190.464z m141.312-207.36v155.648a5.12 5.12 0 0 0 5.12 5.12h155.648l-160.768-160.768zM276.48 542.72l37.888 171.008 45.056-171.008h59.904l43.52 173.568 38.4-173.568h50.688l-60.928 248.832H437.76l-49.664-185.856-49.664 185.856H284.16L225.28 542.72h51.2z m143.68768-292.2496a10.24 10.24 0 0 1 10.24 10.24v51.2a10.24 10.24 0 0 1-10.24 10.24h-190.464a10.24 10.24 0 0 1-10.24-10.24v-51.2a10.24 10.24 0 0 1 10.24-10.24h190.464z" fill="#333" ></path></svg>' };
  E(s);
  var A = { opt: s };
  return A;
})();
export { TinymceEditor as T };
